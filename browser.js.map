{"version":3,"file":"browser.js","sources":["../node_modules/@stdlib/utils/define-property/lib/define_property.js","../node_modules/@stdlib/utils/define-property/lib/builtin.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_number.js","../node_modules/@stdlib/string/base/format-interpolate/lib/zero_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_integer.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_string.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_double.js","../node_modules/@stdlib/string/base/format-interpolate/lib/space_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/main.js","../node_modules/@stdlib/string/base/format-tokenize/lib/main.js","../node_modules/@stdlib/string/format/lib/is_string.js","../node_modules/@stdlib/string/format/lib/main.js","../node_modules/@stdlib/utils/define-property/lib/polyfill.js","../node_modules/@stdlib/utils/define-property/lib/index.js","../node_modules/@stdlib/utils/define-property/lib/has_define_property_support.js","../node_modules/@stdlib/utils/define-read-only-property/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/main.js","../node_modules/@stdlib/assert/is-string/lib/primitive.js","../node_modules/@stdlib/assert/has-tostringtag-support/lib/main.js","../node_modules/@stdlib/assert/has-symbol-support/lib/main.js","../node_modules/@stdlib/utils/native-class/lib/tostring.js","../node_modules/@stdlib/assert/has-own-property/lib/main.js","../node_modules/@stdlib/symbol/ctor/lib/main.js","../node_modules/@stdlib/utils/native-class/lib/tostringtag.js","../node_modules/@stdlib/utils/native-class/lib/index.js","../node_modules/@stdlib/utils/native-class/lib/polyfill.js","../node_modules/@stdlib/utils/native-class/lib/main.js","../node_modules/@stdlib/assert/is-string/lib/valueof.js","../node_modules/@stdlib/assert/is-string/lib/object.js","../node_modules/@stdlib/assert/is-string/lib/try2valueof.js","../node_modules/@stdlib/assert/is-string/lib/main.js","../node_modules/@stdlib/assert/is-string/lib/index.js","../node_modules/@stdlib/utils/escape-regexp-string/lib/main.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/re.js","../node_modules/@stdlib/assert/is-boolean/lib/primitive.js","../node_modules/@stdlib/boolean/ctor/lib/main.js","../node_modules/@stdlib/assert/is-boolean/lib/tostring.js","../node_modules/@stdlib/assert/is-boolean/lib/object.js","../node_modules/@stdlib/assert/is-boolean/lib/try2serialize.js","../node_modules/@stdlib/assert/is-boolean/lib/main.js","../node_modules/@stdlib/assert/is-boolean/lib/index.js","../node_modules/@stdlib/utils/global/lib/codegen.js","../node_modules/@stdlib/utils/global/lib/self.js","../node_modules/@stdlib/utils/global/lib/window.js","../node_modules/@stdlib/utils/global/lib/global_this.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/nodelist.js","../node_modules/@stdlib/utils/global/lib/browser.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/typedarray.js","../node_modules/@stdlib/regexp/function-name/lib/main.js","../node_modules/@stdlib/regexp/function-name/lib/regexp.js","../node_modules/@stdlib/regexp/function-name/lib/index.js","../node_modules/@stdlib/assert/is-array/lib/main.js","../node_modules/@stdlib/assert/tools/array-function/lib/main.js","../node_modules/@stdlib/assert/is-object-like/lib/main.js","../node_modules/@stdlib/utils/constructor-name/lib/main.js","../node_modules/@stdlib/assert/is-buffer/lib/main.js","../node_modules/@stdlib/assert/is-object-like/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/check.js","../node_modules/@stdlib/utils/type-of/lib/polyfill.js","../node_modules/@stdlib/utils/type-of/lib/main.js","../node_modules/@stdlib/assert/is-function/lib/main.js","../node_modules/@stdlib/assert/is-regexp/lib/exec.js","../node_modules/@stdlib/assert/is-regexp/lib/main.js","../node_modules/@stdlib/assert/is-regexp/lib/try2exec.js","../base/format-interpolate/lib/is_number.js","../base/format-interpolate/lib/zero_pad.js","../base/format-interpolate/lib/main.js","../base/format-interpolate/lib/format_integer.js","../base/format-interpolate/lib/is_string.js","../base/format-interpolate/lib/format_double.js","../base/format-interpolate/lib/space_pad.js","../base/format-interpolate/lib/index.js","../base/format-tokenize/lib/index.js","../base/format-tokenize/lib/main.js","../format/lib/is_string.js","../format/lib/main.js","../format/lib/index.js","../base/replace/lib/index.js","../base/replace/lib/main.js","../replace/lib/main.js","../replace/lib/index.js","../remove-punctuation/lib/main.js","../remove-punctuation/lib/index.js","../node_modules/@stdlib/nlp/tokenize/lib/main.js","../base/uppercase/lib/index.js","../base/uppercase/lib/main.js","../base/lowercase/lib/index.js","../base/lowercase/lib/main.js","../node_modules/@stdlib/object/ctor/lib/main.js","../node_modules/@stdlib/utils/get-prototype-of/lib/detect.js","../node_modules/@stdlib/utils/get-prototype-of/lib/native.js","../node_modules/@stdlib/utils/get-prototype-of/lib/polyfill.js","../node_modules/@stdlib/utils/get-prototype-of/lib/proto.js","../node_modules/@stdlib/assert/is-plain-object/lib/main.js","../node_modules/@stdlib/assert/is-object/lib/main.js","../node_modules/@stdlib/utils/get-prototype-of/lib/main.js","../node_modules/@stdlib/assert/is-string-array/lib/index.js","../node_modules/@stdlib/assert/is-empty-array/lib/main.js","../acronym/lib/validate.js","../acronym/lib/main.js","../acronym/lib/index.js","../base/capitalize/lib/index.js","../base/capitalize/lib/main.js","../base/trim/lib/builtin.js","../base/trim/lib/check.js","../base/trim/lib/index.js","../base/trim/lib/has_builtin.js","../base/trim/lib/polyfill.js","../base/trim/lib/main.js","../base/camelcase/lib/index.js","../base/camelcase/lib/main.js","../base/code-point-at/lib/index.js","../base/code-point-at/lib/main.js","../base/constantcase/lib/index.js","../base/constantcase/lib/main.js","../base/ends-with/lib/main.js","../base/ends-with/lib/builtin.js","../base/ends-with/lib/index.js","../base/ends-with/lib/has_builtin.js","../base/ends-with/lib/polyfill.js","../base/kebabcase/lib/index.js","../base/kebabcase/lib/main.js","../base/repeat/lib/main.js","../base/repeat/lib/builtin.js","../base/repeat/lib/index.js","../base/repeat/lib/has_builtin.js","../base/repeat/lib/polyfill.js","../node_modules/@stdlib/math/base/special/ceil/lib/main.js","../base/left-pad/lib/index.js","../base/left-pad/lib/main.js","../base/left-trim/lib/main.js","../base/left-trim/lib/builtin.js","../base/left-trim/lib/index.js","../base/left-trim/lib/has_builtin.js","../base/left-trim/lib/polyfill.js","../base/pascalcase/lib/index.js","../base/pascalcase/lib/main.js","../utf16-to-utf8-array/lib/main.js","../utf16-to-utf8-array/lib/index.js","../base/percent-encode/lib/index.js","../base/percent-encode/lib/main.js","../base/right-trim/lib/main.js","../base/right-trim/lib/builtin.js","../base/right-trim/lib/index.js","../base/right-trim/lib/has_builtin.js","../base/right-trim/lib/polyfill.js","../base/snakecase/lib/index.js","../base/snakecase/lib/main.js","../node_modules/@stdlib/regexp/whitespace/lib/validate.js","../node_modules/@stdlib/regexp/whitespace/lib/main.js","../node_modules/@stdlib/regexp/whitespace/lib/regexp_capture.js","../node_modules/@stdlib/regexp/whitespace/lib/regexp.js","../node_modules/@stdlib/regexp/whitespace/lib/index.js","../base/startcase/lib/index.js","../base/startcase/lib/main.js","../base/starts-with/lib/polyfill.js","../base/starts-with/lib/builtin.js","../base/starts-with/lib/index.js","../base/starts-with/lib/has_builtin.js","../base/starts-with/lib/main.js","../base/uncapitalize/lib/index.js","../base/uncapitalize/lib/main.js","../base/lib/index.js","../camelcase/lib/main.js","../camelcase/lib/index.js","../capitalize/lib/main.js","../capitalize/lib/index.js","../node_modules/@stdlib/assert/is-number/lib/primitive.js","../node_modules/@stdlib/number/ctor/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/tostring.js","../node_modules/@stdlib/assert/is-number/lib/object.js","../node_modules/@stdlib/assert/is-number/lib/try2serialize.js","../node_modules/@stdlib/assert/is-number/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/index.js","../node_modules/@stdlib/constants/float64/pinf/lib/index.js","../node_modules/@stdlib/constants/float64/ninf/lib/index.js","../node_modules/@stdlib/math/base/special/floor/lib/main.js","../node_modules/@stdlib/math/base/assert/is-integer/lib/main.js","../node_modules/@stdlib/assert/is-integer/lib/integer.js","../node_modules/@stdlib/assert/is-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-integer/lib/object.js","../node_modules/@stdlib/assert/is-integer/lib/main.js","../node_modules/@stdlib/assert/is-integer/lib/index.js","../code-point-at/lib/main.js","../code-point-at/lib/index.js","../constantcase/lib/main.js","../constantcase/lib/index.js","../ends-with/lib/main.js","../ends-with/lib/index.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/object.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/main.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/index.js","../node_modules/@stdlib/assert/is-collection/lib/main.js","../node_modules/@stdlib/constants/array/max-typed-array-length/lib/index.js","../node_modules/@stdlib/constants/unicode/max/lib/index.js","../node_modules/@stdlib/constants/unicode/max-bmp/lib/index.js","../from-code-point/lib/main.js","../from-code-point/lib/index.js","../kebabcase/lib/main.js","../kebabcase/lib/index.js","../node_modules/@stdlib/constants/float64/max-safe-integer/lib/index.js","../left-pad/lib/main.js","../left-pad/lib/index.js","../left-trim/lib/main.js","../left-trim/lib/index.js","../node_modules/@stdlib/assert/has-utf16-surrogate-pair-at/lib/main.js","../tools/grapheme-cluster-break/lib/constants.js","../tools/grapheme-cluster-break/lib/break_type.js","../tools/grapheme-cluster-break/lib/emoji_property.js","../tools/grapheme-cluster-break/lib/break_property.js","../tools/grapheme-cluster-break/lib/index.js","../next-grapheme-cluster-break/lib/main.js","../next-grapheme-cluster-break/lib/index.js","../split-grapheme-clusters/lib/main.js","../split-grapheme-clusters/lib/index.js","../left-trim-n/lib/main.js","../left-trim-n/lib/index.js","../lowercase/lib/main.js","../lowercase/lib/index.js","../num-grapheme-clusters/lib/main.js","../num-grapheme-clusters/lib/index.js","../repeat/lib/main.js","../repeat/lib/index.js","../right-pad/lib/main.js","../right-pad/lib/index.js","../node_modules/@stdlib/math/base/special/abs/lib/main.js","../pad/lib/validate.js","../pad/lib/main.js","../pad/lib/index.js","../pascalcase/lib/main.js","../pascalcase/lib/index.js","../percent-encode/lib/main.js","../percent-encode/lib/index.js","../prev-grapheme-cluster-break/lib/main.js","../prev-grapheme-cluster-break/lib/index.js","../remove-first/lib/main.js","../remove-first/lib/index.js","../remove-last/lib/main.js","../remove-last/lib/index.js","../remove-utf8-bom/lib/main.js","../remove-utf8-bom/lib/index.js","../uppercase/lib/main.js","../uppercase/lib/index.js","../remove-words/lib/main.js","../remove-words/lib/index.js","../reverse/lib/main.js","../reverse/lib/index.js","../right-trim/lib/main.js","../right-trim/lib/index.js","../right-trim-n/lib/main.js","../right-trim-n/lib/index.js","../snakecase/lib/main.js","../snakecase/lib/index.js","../startcase/lib/main.js","../startcase/lib/index.js","../starts-with/lib/main.js","../starts-with/lib/index.js","../substring-after/lib/main.js","../substring-after/lib/index.js","../substring-after-last/lib/main.js","../substring-after-last/lib/index.js","../substring-before/lib/main.js","../substring-before/lib/index.js","../substring-before-last/lib/main.js","../substring-before-last/lib/index.js","../node_modules/@stdlib/symbol/iterator/lib/main.js","../node_modules/@stdlib/assert/has-iterator-symbol-support/lib/main.js","../to-grapheme-cluster-iterator/lib/main.js","../to-grapheme-cluster-iterator/lib/index.js","../to-grapheme-cluster-iterator-right/lib/main.js","../to-grapheme-cluster-iterator-right/lib/index.js","../trim/lib/main.js","../trim/lib/index.js","../truncate/lib/main.js","../truncate/lib/index.js","../node_modules/@stdlib/math/base/special/round/lib/main.js","../truncate-middle/lib/main.js","../truncate-middle/lib/index.js","../uncapitalize/lib/main.js","../uncapitalize/lib/index.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js' ;\nimport zeroPad from './zero_pad.js' ;\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js' ;\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e');\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport formatInteger from './format_integer.js' ;\nimport isString from './is_string.js' ;\nimport formatDouble from './format_double.js' ;\nimport spacePad from './space_pad.js' ;\nimport zeroPad from './zero_pad.js' ;\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isnan = isNaN; // NOTE: We use the global `isNaN` function here instead of `@stdlib/math/base/assert/is-nan` to avoid circular dependencies.\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ?\n\t\t\t\t\t\tString( token.arg ) :\n\t\t\t\t\t\tfromCharCode( num );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nexport default formatTokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport interpolate from './../../base/format-interpolate' ;\nimport tokenize from './../../base/format-tokenize' ;\nimport isString from './is_string.js' ;\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar tokens;\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\ttokens = tokenize( str );\n\targs = new Array( arguments.length );\n\targs[ 0 ] = tokens;\n\tfor ( i = 1; i < args.length; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nexport default format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format' ;\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property' ;\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nimport hasDefinePropertySupport from './has_define_property_support.js' ;\nimport builtin from './builtin.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './define_property.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property' ;\n\n\n// MAIN //\n\n/**\n* Defines a read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property' ;\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasSymbols from './../../has-symbol-support' ;\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nexport default hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nexport default toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nexport default hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar Sym = ( typeof Symbol === 'function' ) ? Symbol : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Sym;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Symbol from '@stdlib/symbol/ctor' ;\n\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nexport default toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils/native-class\n*\n* @example\n* import nativeClass from '@stdlib/utils/native-class' ;\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert/has-tostringtag-support' ;\nimport builtin from './main.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar main;\nif ( hasToStringTag() ) {\n\tmain = polyfill;\n} else {\n\tmain = builtin;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property' ;\nimport toStringTag from './tostringtag.js' ;\nimport toStr from './tostring.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toStr from './tostring.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nexport default valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support' ;\nimport nativeClass from '@stdlib/utils/native-class' ;\nimport test from './try2valueof.js' ;\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport valueOf from './valueof.js' ; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert/is-string\n*\n* @example\n* import isString from '@stdlib/assert/is-string' ;\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* import { isObject as isString } from '@stdlib/assert/is-string' ;\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* import { isPrimitive as isString } from '@stdlib/assert/is-string' ;\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string' ;\nimport format from '@stdlib/string/format' ;\n\n\n// VARIABLES //\n\nvar RE_CHARS = /[-\\/\\\\^$*+?.()|[\\]{}]/g; // eslint-disable-line no-useless-escape\n\n\n// MAIN //\n\n/**\n* Escapes a regular expression string.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} first argument must be a string\n* @returns {string} escaped string\n*\n* @example\n* var str = rescape( '[A-Z]*' );\n* // returns '\\\\[A\\\\-Z\\\\]\\\\*'\n*/\nfunction rescape( str ) {\n\tvar len;\n\tvar s;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression string. Value: `%s`.', str ) );\n\t}\n\t// Check if the string starts with a forward slash...\n\tif ( str[ 0 ] === '/' ) {\n\t\t// Find the last forward slash...\n\t\tlen = str.length;\n\t\tfor ( i = len-1; i >= 0; i-- ) {\n\t\t\tif ( str[ i ] === '/' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t// If we searched the string to no avail or if the first letter is not `/`, assume that the string is not of the form `/[...]/[guimy]`:\n\tif ( i === void 0 || i <= 0 ) {\n\t\treturn str.replace( RE_CHARS, '\\\\$&' );\n\t}\n\t// We need to de-construct the string...\n\ts = str.substring( 1, i );\n\n\t// Only escape the characters between the `/`:\n\ts = s.replace( RE_CHARS, '\\\\$&' );\n\n\t// Reassemble:\n\tstr = str[ 0 ] + s + str.substring( i );\n\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default rescape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nexport default RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor' ;\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a boolean.\n*\n* @name Boolean\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {(boolean|Boolean)} boolean\n*\n* @example\n* var b = Boolean( null );\n* // returns false\n*\n* b = Boolean( [] );\n* // returns true\n*\n* b = Boolean( {} );\n* // returns true\n*\n* @example\n* var b = new Boolean( false );\n* // returns <Boolean>\n*/\nvar Bool = Boolean; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support' ;\nimport nativeClass from '@stdlib/utils/native-class' ;\nimport Boolean from '@stdlib/boolean/ctor' ;\nimport test from './try2serialize.js' ;\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor' ;\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toString from './tostring.js' ; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor' ;\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor' ;\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert/is-boolean\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor' ;\n* import isBoolean from '@stdlib/assert/is-boolean' ;\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor' ;\n* import { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean' ;\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor' ;\n* import { isObject as isBoolean } from '@stdlib/assert/is-boolean' ;\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func, stdlib/require-globals\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof globalThis === 'object' ) ? globalThis : null; // eslint-disable-line no-undef\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getGlobal from './../../../global' ;\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nexport default nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean' ;\nimport format from '@stdlib/string/format' ;\nimport getThis from './codegen.js' ;\nimport Self from './self.js' ;\nimport Win from './window.js' ;\nimport GlobalThis from './global_this.js' ;\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @private\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: 2020 revision of ECMAScript standard\n\tif ( GlobalThis ) {\n\t\treturn GlobalThis;\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\nfunction reFunctionName() {\n\treturn /^\\s*function\\s*([^(]*)/i;\n}\n\n\n// EXPORTS //\n\nexport default reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reFunctionName from './main.js' ;\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = reFunctionName();\n\n\n// EXPORTS //\n\nexport default RE_FUNCTION_NAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp/function-name\n*\n* @example\n* import reFunctionName from '@stdlib/regexp/function-name' ;\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport REGEXP from './regexp.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class' ;\n\n\n// VARIABLES //\n\nvar f;\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/\nfunction isArray( value ) {\n\treturn ( nativeClass( value ) === '[object Array]' );\n}\n\n\n// MAIN //\n\nif ( Array.isArray ) {\n\tf = Array.isArray;\n} else {\n\tf = isArray;\n}\n\n\n// EXPORTS //\n\nexport default f;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from './../../../is-array' ;\nimport format from '@stdlib/string/format' ;\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* import isOdd from '@stdlib/assert/is-odd' ;\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arrayfcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArray( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/\nfunction isObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from './../../native-class' ;\nimport { REGEXP as RE } from '@stdlib/regexp/function-name' ;\nimport isBuffer from '@stdlib/assert/is-buffer' ;\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nexport default constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from './../../is-object-like' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/\nfunction isBuffer( value ) {\n\treturn (\n\t\tisObjectLike( value ) &&\n\t\t(\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvalue._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tvalue.constructor &&\n\n\t\t\t\t// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n\t\t\t\ttypeof value.constructor.isBuffer === 'function' &&\n\t\t\t\tvalue.constructor.isBuffer( value )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is object-like.\n*\n* @module @stdlib/assert/is-object-like\n*\n* @example\n* import isObjectLike from '@stdlib/assert/is-object-like' ;\n*\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* bool = isObjectLike( [] );\n* // returns true\n*\n* bool = isObjectLike( null );\n* // returns false\n*\n* @example\n* import { isObjectLikeArray as isObjectLike } from '@stdlib/assert/is-object-like' ;\n*\n* var bool = isObjectLike( [ {}, [] ] );\n* // returns true\n*\n* bool = isObjectLike( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property' ;\nimport arrayfun from './../../tools/array-function' ;\nimport main from './main.js' ;\n\n\n// VARIABLES //\n\nvar isObjectLikeArray = arrayfun( main );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isObjectLikeArray', isObjectLikeArray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils/type-of\n*\n* @example\n* import typeOf from '@stdlib/utils/type-of' ;\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nimport usePolyfill from './check.js' ;\nimport builtin from './main.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : builtin;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport RE from './fixtures/re.js' ;\nimport nodeList from './fixtures/nodelist.js' ;\nimport typedarray from './fixtures/typedarray.js' ;\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from './../../constructor-name' ;\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from './../../constructor-name' ;\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport typeOf from '@stdlib/utils/type-of' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\nfunction isFunction( value ) {\n\t// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n\treturn ( typeOf( value ) === 'function' );\n}\n\n\n// EXPORTS //\n\nexport default isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar exec = RegExp.prototype.exec; // non-generic\n\n\n// EXPORTS //\n\nexport default exec;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support' ;\nimport nativeClass from '@stdlib/utils/native-class' ;\nimport test from './try2exec.js' ;\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a regular expression.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a regular expression\n*\n* @example\n* var bool = isRegExp( /\\.+/ );\n* // returns true\n*\n* @example\n* var bool = isRegExp( {} );\n* // returns false\n*/\nfunction isRegExp( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof RegExp ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object RegExp]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport exec from './exec.js' ;\n\n\n// MAIN //\n\n/**\n* Attempts to call a `RegExp` method.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if able to call a `RegExp` method\n*/\nfunction test( value ) {\n\ttry {\n\t\texec.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar formatInteger = require( './format_integer.js' );\nvar isString = require( './is_string.js' );\nvar formatDouble = require( './format_double.js' );\nvar spacePad = require( './space_pad.js' );\nvar zeroPad = require( './zero_pad.js' );\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isnan = isNaN; // NOTE: We use the global `isNaN` function here instead of `@stdlib/math/base/assert/is-nan` to avoid circular dependencies.\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ?\n\t\t\t\t\t\tString( token.arg ) :\n\t\t\t\t\t\tfromCharCode( num );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './is_number.js' );\nvar zeroPad = require( './zero_pad.js' );\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './is_number.js' );\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e');\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate string from a token array by interpolating values.\n*\n* @module @stdlib/string/base/format-interpolate\n*\n* @example\n* var formatInterpolate = require( '@stdlib/string/base/format-interpolate' );\n*\n* var tokens = ['Hello ', { 'specifier': 's' }, '!' ];\n* var out = formatInterpolate( tokens, 'World' );\n* // returns 'Hello World!'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tokenize a string into an array of string parts and format identifier objects.\n*\n* @module @stdlib/string/base/format-tokenize\n*\n* @example\n* var formatTokenize = require( '@stdlib/string/base/format-tokenize' );\n*\n* var str = 'Hello %s!';\n* var tokens = formatTokenize( str );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatTokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar interpolate = require( './../../base/format-interpolate' );\nvar tokenize = require( './../../base/format-tokenize' );\nvar isString = require( './is_string.js' );\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar tokens;\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\ttokens = tokenize( str );\n\targs = new Array( arguments.length );\n\targs[ 0 ] = tokens;\n\tfor ( i = 1; i < args.length; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Insert supplied variable values into a format string.\n*\n* @module @stdlib/string/format\n*\n* @example\n* var format = require( '@stdlib/string/format' );\n*\n* var out = format( '%s %s!', 'Hello', 'World' );\n* // returns 'Hello World!'\n*\n* out = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Replace search occurrences with a replacement string.\n*\n* @module @stdlib/string/base/replace\n*\n* @example\n* var replace = require( '@stdlib/string/base/replace' );\n*\n* var str = 'Hello World';\n* var out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Replaces search occurrences with a replacement string.\n*\n* @param {string} str - input string\n* @param {RegExp} search - search expression\n* @param {(string|Function)} newval - replacement value or function\n* @returns {string} new string containing replacement(s)\n*\n* @example\n* var str = 'Hello World';\n* var out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*\n* @example\n* var capitalize = require( '@stdlib/string/base/capitalize' );\n*\n* var str = 'Oranges and lemons say the bells of St. Clement\\'s';\n*\n* function replacer( match, p1 ) {\n*     return capitalize( p1 );\n* }\n*\n* var out = replace( str, /([^\\s]*)/gi, replacer);\n* // returns 'Oranges And Lemons Say The Bells Of St. Clement\\'s'\n*/\nfunction replace( str, search, newval ) {\n\treturn str.replace( search, newval );\n}\n\n\n// EXPORTS //\n\nmodule.exports = replace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar rescape = require( '@stdlib/utils/escape-regexp-string' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isRegExp = require( '@stdlib/assert/is-regexp' );\nvar format = require( './../../format' );\nvar base = require( './../../base/replace' );\n\n\n// MAIN //\n\n/**\n* Replaces search occurrences with a replacement string.\n*\n* @param {string} str - input string\n* @param {(string|RegExp)} search - search expression\n* @param {(string|Function)} newval - replacement value or function\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument argument must be a string or regular expression\n* @throws {TypeError} third argument must be a string or function\n* @returns {string} new string containing replacement(s)\n*\n* @example\n* var str = 'beep';\n* var out = replace( str, 'e', 'o' );\n* // returns 'boop'\n*\n* @example\n* var str = 'Hello World';\n* var out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*\n* @example\n* var capitalize = require( '@stdlib/string/capitalize' );\n*\n* var str = 'Oranges and lemons say the bells of St. Clement\\'s';\n*\n* function replacer( match, p1 ) {\n*     return capitalize( p1 );\n* }\n*\n* var out = replace( str, /([^\\s]*)/gi, replacer);\n* // returns 'Oranges And Lemons Say The Bells Of St. Clement\\'s'\n*/\nfunction replace( str, search, newval ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( isString( search ) ) {\n\t\tsearch = new RegExp( rescape( search ), 'g' );\n\t} else if ( !isRegExp( search ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string or regular expression. Value: `%s`.', search ) );\n\t}\n\tif ( !isString( newval ) && !isFunction( newval ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a string or replacement function. Value: `%s`.', newval ) );\n\t}\n\treturn base( str, search, newval );\n}\n\n\n// EXPORTS //\n\nmodule.exports = replace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Replace search occurrences with a replacement string.\n*\n* @module @stdlib/string/replace\n*\n* @example\n* var replace = require( '@stdlib/string/replace' );\n*\n* var str = 'beep';\n* var out = replace( str, 'e', 'o' );\n* // returns 'boop'\n*\n* str = 'Hello World';\n* out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar replace = require( './../../replace' );\nvar format = require( './../../format' );\n\n\n// VARIABLES //\n\nvar RE = /[!\"'(),–.:;<>?`{}|~\\/\\\\\\[\\]]/g; // eslint-disable-line no-useless-escape\n\n\n// MAIN //\n\n/**\n* Removes punctuation characters from a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string primitive\n* @returns {string} output string\n*\n* @example\n* var str = 'Sun Tzu said: \"A leader leads by example not by force.\"';\n* var out = removePunctuation( str );\n* // returns 'Sun Tzu said A leader leads by example not by force'\n*\n* @example\n* var str = 'Double, double, toil and trouble; Fire burn, and cauldron bubble!';\n* var out = removePunctuation( str );\n* // returns 'Double double toil and trouble Fire burn and cauldron bubble'\n*\n* @example\n* var str = 'This module removes these characters: `{}[]:,!/<>().;~|?\\'\"';\n* var out = removePunctuation( str );\n* // returns 'This module removes these characters '\n*/\nfunction removePunctuation( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\treturn replace( str, RE, '' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = removePunctuation;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Remove punctuation characters from a string.\n*\n* @module @stdlib/string/remove-punctuation\n*\n* @example\n* var removePunctuation = require( '@stdlib/string/remove-punctuation' );\n*\n* var out = removePunctuation( 'Sun Tzu said: \"A leader leads by example not by force.\"' );\n* // returns 'Sun Tzu said A leader leads by example not by force'\n*\n* out = removePunctuation( 'Double, double, toil and trouble; Fire burn, and cauldron bubble!' ) );\n* // returns 'Double double toil and trouble Fire burn and cauldron bubble'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean' ;\nimport { isPrimitive as isString } from '@stdlib/assert/is-string' ;\nimport hasOwnProp from '@stdlib/assert/has-own-property' ;\nimport format from '@stdlib/string/format' ;\nimport ABBRS from './abbreviations.json' ;\nimport EMOJIS from './emojis.json' ;\nimport CONTRACT from './contractions.json' ;\n\n\n// VARIABLES //\n\nvar REGEXP_PREFIXES = /^([,([{*<\"“'`‘.])/gi;\nvar REGEXP_SUFFIXES = /([,.!?%*>:;\"'”`)\\]}])$/gi;\n\n\n// FUNCTIONS //\n\n/**\n* Extends an array by the elements of another array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} ext - array to extend `arr` with\n* @returns {Array} mutated input array\n*\n* @example\n* var arr = [ 1, 2, 3 ];\n* var out = extend( arr, [ 4, 5 ] );\n* // returns [ 1, 2, 3, 4, 5 ]\n*/\nfunction extend( arr, ext ) {\n\tvar i;\n\tfor ( i = 0; i < ext.length; i++ ) {\n\t\tarr.push( ext[ i ] );\n\t}\n\treturn arr;\n}\n\n/**\n* Tokenizes a substring.\n*\n* @private\n* @param {string} substr - input string\n* @returns {Array} token array\n*\n* @example\n* var str = '(never)';\n* var out = tokenizeSubstring( str );\n* // returns [ '(', 'never', ')' ]\n*/\nfunction tokenizeSubstring( substr ) {\n\tvar prefixes = [];\n\tvar suffixes = [];\n\tvar match;\n\tvar done;\n\tvar res;\n\n\tdo {\n\t\tif (\n\t\t\t!EMOJIS[ substr ] &&\n\t\t\t!ABBRS[ substr ] &&\n\t\t\t!CONTRACT[ substr ]\n\t\t) {\n\t\t\tmatch = substr.split( REGEXP_PREFIXES );\n\t\t\tif ( match.length > 1 ) {\n\t\t\t\tprefixes.push( match[ 1 ] );\n\t\t\t\tsubstr = match[ 2 ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmatch = substr.split( REGEXP_SUFFIXES );\n\t\t\t\tif ( match.length > 1 ) {\n\t\t\t\t\tsubstr = match[ 0 ];\n\t\t\t\t\tsuffixes.push( match[ 1 ] );\n\t\t\t\t} else {\n\t\t\t\t\tdone = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdone = true;\n\t\t}\n\t} while ( !done );\n\n\tres = prefixes;\n\tres.push( substr );\n\textend( res, suffixes );\n\treturn res;\n}\n\n\n// MAIN //\n\n/**\n* Tokenize a string.\n*\n* @param {string} str - input string\n* @param {boolean} [keepWhitespace=false] - boolean indicating whether whitespace characters should be returned as part of the token array\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a boolean\n* @returns {Array} array of tokens\n*\n* @example\n* var str = 'Hello World!';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'World', '!' ]\n*\n* @example\n* var str = '';\n* var out = tokenize( str );\n* // returns []\n*\n* @example\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'Mrs.', 'Maple', ',', 'could', 'you', 'call', 'me', 'back', '?' ]\n*/\nfunction tokenize( str, keepWhitespace ) {\n\tvar subtkns;\n\tvar substrs;\n\tvar tokens;\n\tvar substr;\n\tvar cache;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isBoolean( keepWhitespace ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a boolean. Value: `%s`.', keepWhitespace ) );\n\t\t}\n\t}\n\tif ( !str ) {\n\t\treturn [];\n\t}\n\n\t// Split on whitespace:\n\tif ( keepWhitespace ) {\n\t\tsubstrs = str.split( /(\\s+)/ );\n\t} else {\n\t\tsubstrs = str.split( /\\s+/ );\n\t}\n\n\t// Set up cache to hold tokens for substring matches:\n\tcache = {};\n\n\t// Initialize token array:\n\ttokens = [];\n\n\tfor ( i = 0; i < substrs.length; i++ ) {\n\t\tsubstr = substrs[ i ];\n\t\tif ( hasOwnProp( cache, substr ) ) {\n\t\t\textend( tokens, cache[ substr ] );\n\t\t}\n\t\telse {\n\t\t\tsubtkns = tokenizeSubstring( substr );\n\t\t\textend( tokens, subtkns );\n\t\t\tcache[ substr ] = subtkns;\n\t\t}\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nexport default tokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to uppercase.\n*\n* @module @stdlib/string/base/uppercase\n*\n* @example\n* var uppercase = require( '@stdlib/string/base/uppercase' );\n*\n* var str = uppercase( 'bEEp' );\n* // returns 'BEEP'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Converts a string to uppercase.\n*\n* @param {string} str - string to convert\n* @returns {string} uppercase string\n*\n* @example\n* var str = uppercase( 'bEEp' );\n* // returns 'BEEP'\n*/\nfunction uppercase( str ) {\n\treturn str.toUpperCase();\n}\n\n\n// EXPORTS //\n\nmodule.exports = uppercase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to lowercase.\n*\n* @module @stdlib/string/base/lowercase\n*\n* @example\n* var lowercase = require( '@stdlib/string/base/lowercase' );\n*\n* var str = lowercase( 'bEEp' );\n* // returns 'beep'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Converts a string to lowercase.\n*\n* @param {string} str - string to convert\n* @returns {string} lowercase string\n*\n* @example\n* var str = lowercase( 'bEEp' );\n* // returns 'beep'\n*/\nfunction lowercase( str ) {\n\treturn str.toLowerCase();\n}\n\n\n// EXPORTS //\n\nmodule.exports = lowercase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object.\n*\n* @name Object\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {Object} object\n*\n* @example\n* var o = new Object( null );\n* // returns {}\n*\n* @example\n* var o = new Object( 5.0 );\n* // returns <Number>\n*\n* @example\n* var o = new Object( 'beep' );\n* // returns <String>\n*\n* @example\n* var o1 = {};\n*\n* var o2 = new Object( o1 );\n* // returns {}\n*\n* var bool = ( o1 === o2 );\n* // returns true\n*/\nvar Obj = Object; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function' ;\nimport builtin from './native.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from './../../native-class' ;\nimport getProto from './proto.js' ;\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from './../../is-object' ;\nimport isFunction from './../../is-function' ;\nimport getPrototypeOf from '@stdlib/utils/get-prototype-of' ;\nimport hasOwnProp from './../../has-own-property' ;\nimport nativeClass from '@stdlib/utils/native-class' ;\n\n\n// VARIABLES //\n\nvar objectPrototype = Object.prototype;\n\n\n// FUNCTIONS //\n\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/\nfunction ownProps( obj ) {\n\tvar key;\n\n\t// NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n\tfor ( key in obj ) {\n\t\tif ( !hasOwnProp( obj, key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/\nfunction isPlainObject( value ) {\n\tvar proto;\n\n\t// Screen for obvious non-objects...\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\t// Objects with no prototype (e.g., `Object.create( null )`) are plain...\n\tproto = getPrototypeOf( value );\n\tif ( !proto ) {\n\t\treturn true;\n\t}\n\t// Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n\treturn (\n\t\t// Cannot have own `constructor` property:\n\t\t!hasOwnProp( value, 'constructor' ) &&\n\n\t\t// Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n\t\thasOwnProp( proto, 'constructor' ) &&\n\t\tisFunction( proto.constructor ) &&\n\t\tnativeClass( proto.constructor ) === '[object Function]' &&\n\n\t\t// Test for object-specific method:\n\t\thasOwnProp( proto, 'isPrototypeOf' ) &&\n\t\tisFunction( proto.isPrototypeOf ) &&\n\n\t\t(\n\t\t\t// Test if the prototype matches the global `Object` prototype (same realm):\n\t\t\tproto === objectPrototype ||\n\n\t\t\t// Test that all properties are own properties (cross-realm; *most* likely a plain object):\n\t\t\townProps( value )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from './../../is-array' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/\nfunction isObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t!isArray( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor' ;\nimport getProto from './detect.js' ;\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array of strings.\n*\n* @module @stdlib/assert/is-string-array\n*\n* @example\n* import isStringArray from '@stdlib/assert/is-string-array' ;\n*\n* var bool = isStringArray( [ 'abc', 'def' ] );\n* // returns true\n*\n* bool = isStringArray( [ 'abc', 123 ] );\n* // returns false\n*\n* @example\n* import { primitives as isStringArray } from '@stdlib/assert/is-string-array' ;\n*\n* var bool = isStringArray( [ 'abc', 'def' ] );\n* // returns true\n*\n* bool = isStringArray( [ 'abc', new String( 'def' ) ] );\n* // returns false\n*\n* @example\n* import { objects as isStringArray } from '@stdlib/assert/is-string-array' ;\n*\n* var bool = isStringArray( [ new String( 'abc' ), new String( 'def' ) ] );\n* // returns true\n*\n* bool = isStringArray( [ new String( 'abc' ), 'def' ] );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property' ;\nimport arrayfun from './../../tools/array-function' ;\nimport isString from './../../is-string' ;\n\n\n// VARIABLES //\n\nvar isPrimitiveArray = arrayfun( isString.isPrimitive );\nvar isObjectArray = arrayfun( isString.isObject );\n\n\n// MAIN //\n\nvar isStringArray = arrayfun( isString );\nsetReadOnly( isStringArray, 'primitives', isPrimitiveArray );\nsetReadOnly( isStringArray, 'objects', isObjectArray );\n\n\n// EXPORTS //\n\nexport default isStringArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from './../../is-array' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is an empty array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an empty array\n*\n* @example\n* var bool = isEmptyArray( [] );\n* // returns true\n*\n* @example\n* var bool = isEmptyArray( [ 1, 2, 3 ] );\n* // returns false\n*\n* @example\n* var bool = isEmptyArray( {} );\n* // returns false\n*/\nfunction isEmptyArray( value ) {\n\treturn (\n\t\tisArray( value ) &&\n\t\tvalue.length === 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isEmptyArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;\nvar isEmptyArray = require( '@stdlib/assert/is-empty-array' );\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {StringArray} [options.stopwords] - array of custom stop words\n* @returns {(null|Error)} error object or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'stopwords': [ 'of' ]\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'stopwords' ) ) {\n\t\topts.stopwords = options.stopwords;\n\t\tif (\n\t\t\t!isStringArray( opts.stopwords ) &&\n\t\t\t!isEmptyArray( opts.stopwords )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array of strings. Option: `%s`.', 'stopwords', opts.stopwords ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar removePunctuation = require( './../../remove-punctuation' );\nvar tokenize = require( '@stdlib/nlp/tokenize' );\nvar replace = require( './../../base/replace' );\nvar uppercase = require( './../../base/uppercase' );\nvar lowercase = require( './../../base/lowercase' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar validate = require( './validate.js' );\nvar STOPWORDS = require( './stopwords.json' );\n\n\n// VARIABLES //\n\nvar RE_HYPHEN = /-/g;\n\n\n// MAIN //\n\n/**\n* Generates an acronym for a given string.\n*\n* ## Notes\n*\n* -   The acronym is generated by capitalizing the first letter of each word in the string.\n* -   The function removes stop words from the string before generating the acronym.\n* -   The function splits hyphenated words and uses the first character of each hyphenated part.\n*\n* @param {string} str - input string\n* @param {Options} [options] - function options\n* @param {StringArray} [options.stopwords] - custom stop words\n* @throws {TypeError} must provide a string primitive\n* @throws {TypeError} must provide valid options\n* @returns {string} generated acronym\n*\n* @example\n* var out = acronym( 'the quick brown fox' );\n* // returns 'QBF'\n*\n* @example\n* var out = acronym( 'Hard-boiled eggs' );\n* // returns 'HBE'\n*\n* @example\n* var out = acronym( 'National Association of Securities Dealers Automated Quotation' );\n* // returns 'NASDAQ'\n*/\nfunction acronym( str, options ) {\n\tvar stopwords;\n\tvar words;\n\tvar opts;\n\tvar err;\n\tvar out;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tstopwords = opts.stopwords || STOPWORDS;\n\tstr = removePunctuation( str );\n\tstr = replace( str, RE_HYPHEN, ' ' );\n\twords = tokenize( str );\n\tout = '';\n\tfor ( i = 0; i < words.length; i++ ) {\n\t\tif ( stopwords.indexOf( lowercase( words[ i ] ) ) === -1 ) {\n\t\t\tout += uppercase( words[ i ].charAt( 0 ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = acronym;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate an acronym for a given string.\n*\n* @module @stdlib/string/acronym\n*\n* @example\n* var acronym = require( '@stdlib/string/acronym' );\n*\n* var out = acronym( 'National Association of Securities Dealers Automated Quotation' );\n* // returns 'NASDAQ'\n*\n* out = acronym( 'To be determined...', {\n*     'stopwords': []\n* });\n* // returns 'TBD'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Capitalize the first character in a string.\n*\n* @module @stdlib/string/base/capitalize\n*\n* @example\n* var capitalize = require( '@stdlib/string/base/capitalize' );\n*\n* var out = capitalize( 'last man standing' );\n* // returns 'Last man standing'\n*\n* out = capitalize( 'Hidden Treasures' );\n* // returns 'Hidden Treasures';\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Capitalizes the first character in a string.\n*\n* @param {string} str - input string\n* @returns {string} capitalized string\n*\n* @example\n* var out = capitalize( 'last man standing' );\n* // returns 'Last man standing'\n*\n* @example\n* var out = capitalize( 'presidential election' );\n* // returns 'Presidential election'\n*\n* @example\n* var out = capitalize( 'javaScript' );\n* // returns 'JavaScript'\n*\n* @example\n* var out = capitalize( 'Hidden Treasures' );\n* // returns 'Hidden Treasures'\n*/\nfunction capitalize( str ) {\n\tif ( str === '' ) {\n\t\treturn '';\n\t}\n\treturn str.charAt( 0 ).toUpperCase() + str.slice( 1 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = capitalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar trim = String.prototype.trim;\n\n\n// EXPORTS //\n\nmodule.exports = trim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar trim = require( './builtin.js' );\n\n\n// VARIABLES //\n\nvar str1 = ' \\n\\t\\r\\n\\f\\v\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar str2 = '\\u180e';\n\n\n// MAIN //\n\n/**\n* Tests the built-in `String.prototype.trim()` implementation when provided whitespace.\n*\n* ## Notes\n*\n* -   For context, see <https://github.com/stdlib-js/stdlib/commit/c3d6458aa08bbd4bd6bf13e3643422f3b2a65dd9>. In short, we can only rely on the built-in `trim` method when it does not consider the Mongolian space separator as whitespace.\n*\n* @private\n* @returns {boolean} boolean indicating whether the built-in implementation returns the expected value\n*\n* @example\n* var b = test();\n* // returns <boolean>\n*/\nfunction test() {\n\treturn ( trim.call( str1 ) === '' ) && ( trim.call( str2 ) === str2 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Trim whitespace characters from the beginning and end of a string.\n*\n* @module @stdlib/string/base/trim\n*\n* @example\n* var trim = require( '@stdlib/string/base/trim' );\n*\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\n\n// MODULES //\n\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar check = require( './check.js' );\nvar polyfill = require( './polyfill.js' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar trim;\nif ( HAS_BUILTIN && check() ) {\n\ttrim = main;\n} else {\n\ttrim = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = trim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof String.prototype.trim !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar replace = require( './../../../base/replace' );\n\n\n// VARIABLES //\n\n// The following regular expression should suffice to polyfill (most?) all environments.\nvar RE = /^[\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*([\\S\\s]*?)[\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*$/;\n\n\n// MAIN //\n\n/**\n* Trims whitespace characters from the beginning and end of a string.\n*\n* @private\n* @param {string} str - input string\n* @returns {string} trimmed string\n*\n* @example\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* @example\n* var out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* @example\n* var out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\nfunction trim( str ) {\n\treturn replace( str, RE, '$1' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = trim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar builtin = require( './builtin.js' );\n\n\n// MAIN //\n\n/**\n* Trims whitespace characters from the beginning and end of a string.\n*\n* @param {string} str - input string\n* @returns {string} trimmed string\n*\n* @example\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* @example\n* var out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* @example\n* var out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\nfunction trim( str ) {\n\treturn builtin.call( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = trim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to camel case.\n*\n* @module @stdlib/string/base/camelcase\n*\n* @example\n* var camelcase = require( '@stdlib/string/base/camelcase' );\n*\n* var str = camelcase( 'foo bar' );\n* // returns 'fooBar'\n*\n* str = camelcase( '--foo-bar--' );\n* // returns 'fooBar'\n*\n* str = camelcase( 'Hello World!' );\n* // returns 'helloWorld'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar capitalize = require( './../../../base/capitalize' );\nvar lowercase = require( './../../../base/lowercase' );\nvar replace = require( './../../../base/replace' );\nvar trim = require( './../../../base/trim' );\n\n\n// VARIABLES //\n\nvar RE_WHITESPACE = /\\s+/g;\nvar RE_SPECIAL = /[-!\"'(),–.:;<>?`{}|~\\/\\\\\\[\\]_#$*&^@%]+/g; // eslint-disable-line no-useless-escape\nvar RE_TO_CAMEL = /(?:\\s|^)([^\\s]+)(?=\\s|$)/g;\nvar RE_CAMEL = /([a-z0-9])([A-Z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Converts first capture group to uppercase.\n*\n* @private\n* @param {string} match - entire match\n* @param {string} p1 - first capture group\n* @param {number} offset - offset of the matched substring in entire string\n* @returns {string} uppercased capture group\n*/\nfunction replacer( match, p1, offset ) {\n\tp1 = lowercase( p1 );\n\treturn ( offset === 0 ) ? p1 : capitalize( p1 );\n}\n\n\n// MAIN //\n\n/**\n* Converts a string to camel case.\n*\n* @param {string} str - string to convert\n* @returns {string} camel-cased string\n*\n* @example\n* var out = camelcase( 'foo bar' );\n* // returns 'fooBar'\n*\n* @example\n* var out = camelcase( 'IS_MOBILE' );\n* // returns 'isMobile'\n*\n* @example\n* var out = camelcase( 'Hello World!' );\n* // returns 'helloWorld'\n*\n* @example\n* var out = camelcase( '--foo-bar--' );\n* // returns 'fooBar'\n*/\nfunction camelcase( str ) {\n\tstr = replace( str, RE_SPECIAL, ' ' );\n\tstr = replace( str, RE_WHITESPACE, ' ' );\n\tstr = replace( str, RE_CAMEL, '$1 $2' );\n\tstr = trim( str );\n\treturn replace( str, RE_TO_CAMEL, replacer );\n}\n\n\n// EXPORTS //\n\nmodule.exports = camelcase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a Unicode code point from a string at a specified position.\n*\n* @module @stdlib/string/base/code-point-at\n*\n* @example\n* var codePointAt = require( '@stdlib/string/base/code-point-at' );\n*\n* var out = codePointAt( 'अनुच्छेद', 2, false );\n* // returns 2369\n*\n* out = codePointAt( '🌷', 1, true );\n* // returns 127799\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\n// Factors for converting individual surrogates...\nvar Ox10000 = 0x10000|0; // 65536\nvar Ox400 = 0x400|0; // 1024\n\n// Range for a high surrogate\nvar OxD800 = 0xD800|0; // 55296\nvar OxDBFF = 0xDBFF|0; // 56319\n\n// Range for a low surrogate\nvar OxDC00 = 0xDC00|0; // 56320\nvar OxDFFF = 0xDFFF|0; // 57343\n\n\n// MAIN //\n\n/**\n* Returns a Unicode code point from a string at a specified position.\n*\n* ## Notes\n*\n* -   UTF-16 encoding uses one 16-bit unit for non-surrogates (U+0000 to U+D7FF and U+E000 to U+FFFF).\n* -   UTF-16 encoding uses two 16-bit units (surrogate pairs) for U+10000 to U+10FFFF and encodes U+10000-U+10FFFF by subtracting 0x10000 from the code point, expressing the result as a 20-bit binary, and splitting the 20 bits of 0x0-0xFFFFF as upper and lower 10-bits. The respective 10-bits are stored in two 16-bit words: a high and a low surrogate.\n*\n*\n* @param {string} str - input string\n* @param {integer} idx - position\n* @param {boolean} backward - backward iteration for low surrogates\n* @returns {NonNegativeInteger} code point\n*\n* @example\n* var out = codePointAt( 'last man standing', 4, false );\n* // returns 32\n*\n* @example\n* var out = codePointAt( 'presidential election', 8, true );\n* // returns 116\n*\n* @example\n* var out = codePointAt( 'अनुच्छेद', 2, false );\n* // returns 2369\n*\n* @example\n* var out = codePointAt( '🌷', 1, true );\n* // returns 127799\n*/\nfunction codePointAt( str, idx, backward ) {\n\tvar code;\n\tvar low;\n\tvar hi;\n\n\tif ( idx < 0 ) {\n\t\tidx += str.length;\n\t}\n\tcode = str.charCodeAt( idx );\n\n\t// High surrogate\n\tif ( code >= OxD800 && code <= OxDBFF && idx < str.length - 1 ) {\n\t\thi = code;\n\t\tlow = str.charCodeAt( idx+1 );\n\t\tif ( OxDC00 <= low && low <= OxDFFF ) {\n\t\t\treturn ( ( hi - OxD800 ) * Ox400 ) + ( low - OxDC00 ) + Ox10000;\n\t\t}\n\t\treturn hi;\n\t}\n\t// Low surrogate - support only if backward iteration is desired\n\tif ( backward ) {\n\t\tif ( code >= OxDC00 && code <= OxDFFF && idx >= 1 ) {\n\t\t\thi = str.charCodeAt( idx-1 );\n\t\t\tlow = code;\n\t\t\tif ( OxD800 <= hi && hi <= OxDBFF ) {\n\t\t\t\treturn ( ( hi - OxD800 ) * Ox400 ) + ( low - OxDC00 ) + Ox10000;\n\t\t\t}\n\t\t\treturn low;\n\t\t}\n\t}\n\treturn code;\n}\n\n\n// EXPORTS //\n\nmodule.exports = codePointAt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to constant case.\n*\n* @module @stdlib/string/base/constantcase\n*\n* @example\n* var constantcase = require( '@stdlib/string/base/constantcase' );\n*\n* var str = constantcase( 'aBcDeF' );\n* // returns 'ABCDEF'\n*\n* str = constantcase( 'Hello World!' );\n* // returns 'HELLO_WORLD'\n*\n* str = constantcase( 'I am a robot' );\n* // returns 'I_AM_A_ROBOT'\n*/\n\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar uppercase = require( './../../../base/uppercase' );\nvar replace = require( './../../../base/replace' );\nvar trim = require( './../../../base/trim' );\n\n\n// VARIABLES //\n\nvar RE_WHITESPACE = /\\s+/g;\nvar RE_SPECIAL = /[!\"'(),–.:;<>?`{}|~\\/\\\\\\[\\]_#$*&^@%]+/g; // eslint-disable-line no-useless-escape\nvar RE_CAMEL = /([a-z0-9])([A-Z])/g;\n\n\n// MAIN //\n\n/**\n* Converts a string to constant case.\n*\n* @param {string} str - string to convert\n* @returns {string} constant-cased string\n*\n* @example\n* var str = constantcase( 'beep' );\n* // returns 'BEEP'\n*\n* @example\n* var str = constantcase( 'beep boop' );\n* // returns 'BEEP_BOOP'\n*\n* @example\n* var str = constantcase( 'isMobile' );\n* // returns 'IS_MOBILE'\n*\n* @example\n* var str = constantcase( 'Hello World!' );\n* // returns 'HELLO_WORLD'\n*/\nfunction constantcase( str ) {\n\tstr = replace( str, RE_SPECIAL, ' ' );\n\tstr = replace( str, RE_CAMEL, '$1 $2' );\n\tstr = trim( str );\n\tstr = replace( str, RE_WHITESPACE, '_' );\n\treturn uppercase( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = constantcase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar builtin = require( './builtin.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a string ends with the characters of another string.\n*\n* ## Notes\n*\n* -   The last parameter restricts the search to a substring within the input string beginning from the leftmost character. If provided a negative value, `len` indicates to ignore the last `len` characters, and is thus equivalent to `str.length + len`.\n*\n* @param {string} str - input string\n* @param {string} search - search string\n* @param {integer} len - substring length\n* @returns {boolean} boolean indicating if the input string ends with the search string\n*\n* @example\n* var bool = endsWith( 'To be, or not to be, that is the question.', 'to be', 19 );\n* // returns true\n*\n* @example\n* var bool = endsWith( 'To be, or not to be, that is the question.', 'to be', -23 );\n* // returns true\n*/\nfunction endsWith( str, search, len ) {\n\tvar idx;\n\tvar N;\n\n\tN = search.length;\n\tif ( len === 0 ) {\n\t\treturn ( N === 0 );\n\t}\n\tif ( len < 0 ) {\n\t\tidx = str.length + len;\n\t} else {\n\t\tidx = len;\n\t}\n\tif ( N === 0 ) {\n\t\t// Based on the premise that every string can be \"surrounded\" by empty strings (e.g., \"\" + \"a\" + \"\" + \"b\" + \"\" === \"ab\"):\n\t\treturn true;\n\t}\n\tif ( idx - N < 0 || idx > str.length ) {\n\t\treturn false;\n\t}\n\treturn builtin.call( str, search, idx );\n}\n\n\n// EXPORTS //\n\nmodule.exports = endsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar endsWith = String.prototype.endsWith;\n\n\n// EXPORTS //\n\nmodule.exports = endsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a string ends with the characters of another string.\n*\n* @module @stdlib/string/base/ends-with\n*\n* @example\n* var endsWith = require( '@stdlib/string/base/ends-with' );\n*\n* var str = 'Fair is foul, and foul is fair, hover through fog and filthy air';\n*\n* var bool = endsWith( str, 'air', str.length );\n* // returns true\n*\n* bool = endsWith( str, 'fair', str.length );\n* // returns false\n*\n* bool = endsWith( str, 'fair', 30 );\n* // returns true\n*\n* bool = endsWith( str, 'fair', -34 );\n* // returns true\n*/\n\n// MODULES //\n\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar polyfill = require( './polyfill.js' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar endsWith;\nif ( HAS_BUILTIN ) {\n\tendsWith = main;\n} else {\n\tendsWith = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = endsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof String.prototype.endsWith !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a string ends with the characters of another string.\n*\n* ## Notes\n*\n* -   The last parameter restricts the search to a substring within the input string beginning from the leftmost character. If provided a negative value, `len` indicates to ignore the last `len` characters, and is thus equivalent to `str.length + len`.\n*\n* @private\n* @param {string} str - input string\n* @param {string} search - search string\n* @param {integer} len - substring length\n* @returns {boolean} boolean indicating if the input string ends with the search string\n*\n* @example\n* var bool = endsWith( 'To be, or not to be, that is the question.', 'to be', 19 );\n* // returns true\n*\n* @example\n* var bool = endsWith( 'To be, or not to be, that is the question.', 'to be', -23 );\n* // returns true\n*/\nfunction endsWith( str, search, len ) {\n\tvar idx;\n\tvar N;\n\tvar i;\n\n\tN = search.length;\n\tif ( len === 0 ) {\n\t\treturn ( N === 0 );\n\t}\n\tif ( len < 0 ) {\n\t\tidx = str.length + len;\n\t} else {\n\t\tidx = len;\n\t}\n\tif ( N === 0 ) {\n\t\t// Based on the premise that every string can be \"surrounded\" by empty strings (e.g., \"\" + \"a\" + \"\" + \"b\" + \"\" === \"ab\"):\n\t\treturn true;\n\t}\n\tidx -= N;\n\tif ( idx < 0 ) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < N; i++) {\n\t\tif ( str.charCodeAt( idx + i ) !== search.charCodeAt( i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = endsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to kebab case.\n*\n* @module @stdlib/string/base/kebabcase\n*\n* @example\n* var kebabcase = require( '@stdlib/string/base/kebabcase' );\n*\n* var str = kebabcase( 'Foo Bar' );\n* // returns 'foo-bar'\n*\n* str = kebabcase( 'I am a tiny little house' );\n* // returns 'i-am-a-tiny-little-house'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lowercase = require( './../../../base/lowercase' );\nvar replace = require( './../../../base/replace' );\nvar trim = require( './../../../base/trim' );\n\n\n// VARIABLES //\n\nvar RE_WHITESPACE = /\\s+/g;\nvar RE_SPECIAL = /[!\"'(),–.:;<>?`{}|~\\/\\\\\\[\\]_#$*&^@%]+/g; // eslint-disable-line no-useless-escape\nvar RE_CAMEL = /([a-z0-9])([A-Z])/g;\n\n\n// MAIN //\n\n/**\n* Converts a string to kebab case.\n*\n* @param {string} str - string to convert\n* @returns {string} kebab-cased string\n*\n* @example\n* var str = kebabCase( 'Hello World!' );\n* // returns 'hello-world'\n*\n* @example\n* var str = kebabCase( 'foo bar' );\n* // returns 'foo-bar'\n*\n* @example\n* var str = kebabCase( 'I am a tiny little teapot' );\n* // returns 'i-am-a-tiny-little-teapot'\n*\n* @example\n* var str = kebabCase( 'BEEP boop' );\n* // returns 'beep-boop'\n*\n* @example\n* var str = kebabCase( 'isMobile' );\n* // returns 'is-mobile'\n*/\nfunction kebabCase( str ) {\n\tstr = replace( str, RE_SPECIAL, ' ' );\n\tstr = replace( str, RE_CAMEL, '$1 $2' );\n\tstr = trim( str );\n\tstr = replace( str, RE_WHITESPACE, '-' );\n\treturn lowercase( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = kebabCase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar builtin = require( './builtin.js' );\n\n\n// MAIN //\n\n/**\n* Repeats a string a specified number of times and returns the concatenated result.\n*\n* @param {string} str - string to repeat\n* @param {NonNegativeInteger} n - number of times to repeat the string\n* @returns {string} repeated string\n*\n* @example\n* var str = repeat( 'a', 5 );\n* // returns 'aaaaa'\n*\n* @example\n* var str = repeat( '', 100 );\n* // returns ''\n*\n* @example\n* var str = repeat( 'beep', 0 );\n* // returns ''\n*/\nfunction repeat( str, n ) {\n\treturn builtin.call( str, n );\n}\n\n\n// EXPORTS //\n\nmodule.exports = repeat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar repeat = String.prototype.repeat;\n\n\n// EXPORTS //\n\nmodule.exports = repeat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Repeat a string a specified number of times and return the concatenated result.\n*\n* @module @stdlib/string/base/repeat\n*\n* @example\n* var replace = require( '@stdlib/string/base/repeat' );\n*\n* var str = repeat( 'a', 5 );\n* // returns 'aaaaa'\n*\n* str = repeat( '', 100 );\n* // returns ''\n*\n* str = repeat( 'beep', 0 );\n* // returns ''\n*/\n\n// MODULES //\n\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar polyfill = require( './polyfill.js' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar repeat;\nif ( HAS_BUILTIN ) {\n\trepeat = main;\n} else {\n\trepeat = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = repeat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof String.prototype.repeat !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Repeats a string a specified number of times and returns the concatenated result.\n*\n* ## Method\n*\n* The algorithmic trick used in the implementation is to treat string concatenation the same as binary addition (i.e., any natural number (nonnegative integer) can be expressed as a sum of powers of two).\n*\n* For example,\n*\n* ```text\n* n = 10 => 1010 => 2^3 + 2^0 + 2^1 + 2^0\n* ```\n*\n* We can produce a 10-repeat string by \"adding\" the results of a 8-repeat string and a 2-repeat string.\n*\n* The implementation is then as follows:\n*\n* 1.  Let `s` be the string to be repeated and `o` be an output string.\n*\n* 2.  Initialize an output string `o`.\n*\n* 3.  Check the least significant bit to determine if the current `s` string should be \"added\" to the output \"total\".\n*\n*     -   if the bit is a one, add\n*     -   otherwise, move on\n*\n* 4.  Double the string `s` by adding `s` to `s`.\n*\n* 5.  Right-shift the bits of `n`.\n*\n* 6.  Check if we have shifted off all bits.\n*\n*     -   if yes, done.\n*     -   otherwise, move on\n*\n* 7.  Repeat 3-6.\n*\n* The result is that, as the string is repeated, we continually check to see if the doubled string is one which we want to add to our \"total\".\n*\n* The algorithm runs in `O(log_2(n))` compared to `O(n)`.\n*\n*\n* @private\n* @param {string} str - string to repeat\n* @param {NonNegativeInteger} n - number of times to repeat the string\n* @returns {string} repeated string\n*\n* @example\n* var str = repeat( 'a', 5 );\n* // returns 'aaaaa'\n*\n* @example\n* var str = repeat( '', 100 );\n* // returns ''\n*\n* @example\n* var str = repeat( 'beep', 0 );\n* // returns ''\n*/\nfunction repeat( str, n ) {\n\tvar rpt;\n\tvar cnt;\n\tif ( str.length === 0 || n === 0 ) {\n\t\treturn '';\n\t}\n\trpt = '';\n\tcnt = n;\n\tfor ( ; ; ) {\n\t\t// If the count is odd, append the current concatenated string:\n\t\tif ( (cnt&1) === 1 ) {\n\t\t\trpt += str;\n\t\t}\n\t\t// Right-shift the bits:\n\t\tcnt >>>= 1;\n\t\tif ( cnt === 0 ) {\n\t\t\tbreak;\n\t\t}\n\t\t// Double the string:\n\t\tstr += str;\n\t}\n\treturn rpt;\n}\n\n\n// EXPORTS //\n\nmodule.exports = repeat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward positive infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = ceil( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = ceil( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = ceil( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = ceil( NaN );\n* // returns NaN\n*/\nvar ceil = Math.ceil; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default ceil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Left pad a string such that the padded string has a length of at least `len`.\n*\n* @module @stdlib/string/base/left-pad\n*\n* @example\n* var lpad = require( '@stdlib/string/base/left-pad' );\n*\n* var str = lpad( 'a', 5, ' ' );\n* // returns '    a'\n*\n* str = lpad( 'beep', 10, 'b' );\n* // returns 'bbbbbbbeep'\n*\n* str = lpad( 'boop', 12, 'beep' );\n* // returns 'beepbeepboop'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar repeat = require( './../../../base/repeat' );\nvar ceil = require( '@stdlib/math/base/special/ceil' );\n\n\n// MAIN //\n\n/**\n* Left pads a string such that the padded string has a length of at least `len`.\n*\n* @param {string} str - string to pad\n* @param {NonNegativeInteger} len - minimum string length\n* @param {string} pad - string used to pad\n* @returns {string} padded string\n*\n* @example\n* var str = lpad( 'a', 5, ' ' );\n* // returns '    a'\n*\n* @example\n* var str = lpad( 'beep', 10, 'b' );\n* // returns 'bbbbbbbeep'\n*\n* @example\n* var str = lpad( 'boop', 12, 'beep' );\n* // returns 'beepbeepboop'\n*/\nfunction lpad( str, len, pad ) {\n\tvar n = ( len - str.length ) / pad.length;\n\tif ( n <= 0 ) {\n\t\treturn str;\n\t}\n\tn = ceil( n );\n\treturn repeat( pad, n ) + str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = lpad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar builtin = require( './builtin.js' );\n\n\n// MAIN //\n\n/**\n* Trims whitespace characters from the beginning of a string.\n*\n* @param {string} str - input string\n* @returns {string} trimmed string\n*\n* @example\n* var out = ltrim( '   Whitespace   ' );\n* // returns 'Whitespace   '\n*\n* @example\n* var out = ltrim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs\\t\\t\\t'\n*\n* @example\n* var out = ltrim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines\\n\\n\\n'\n*/\nfunction ltrim( str ) {\n\treturn builtin.call( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ltrim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ltrim = String.prototype.trimLeft;\n\n\n// EXPORTS //\n\nmodule.exports = ltrim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Trim whitespace characters from the beginning of a string.\n*\n* @module @stdlib/string/base/left-trim\n*\n* @example\n* var ltrim = require( '@stdlib/string/base/left-trim' );\n*\n* var out = ltrim( '   Whitespace   ' );\n* // returns 'Whitespace   '\n*\n* out = ltrim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs\\t\\t\\t'\n*/\n\n// MODULES //\n\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar polyfill = require( './polyfill.js' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar ltrim;\nif ( HAS_BUILTIN ) {\n\tltrim = main;\n} else {\n\tltrim = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ltrim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof String.prototype.trimLeft !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar replace = require( './../../../base/replace' );\n\n\n// VARIABLES //\n\n// The following regular expression should suffice to polyfill (most?) all environments.\nvar RE = /^[\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/;\n\n\n// MAIN //\n\n/**\n* Trims whitespace characters from the beginning of a string.\n*\n* @private\n* @param {string} str - input string\n* @returns {string} trimmed string\n*\n* @example\n* var out = ltrim( '   Whitespace   ' );\n* // returns 'Whitespace   '\n*\n* @example\n* var out = ltrim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs\\t\\t\\t'\n*\n* @example\n* var out = ltrim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines\\n\\n\\n'\n*/\nfunction ltrim( str ) {\n\treturn replace( str, RE, '' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ltrim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to Pascal case.\n*\n* @module @stdlib/string/base/pascalcase\n*\n* @example\n* var pascalcase = require( '@stdlib/string/base/pascalcase' );\n*\n* var str = pascalcase( 'foo bar' );\n* // returns 'FooBar'\n*\n* str = pascalcase( '--foo-bar--' );\n* // returns 'FooBar'\n*\n* str = pascalcase( 'Hello World!' );\n* // returns 'HelloWorld'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar capitalize = require( './../../../base/capitalize' );\nvar lowercase = require( './../../../base/lowercase' );\nvar replace = require( './../../../base/replace' );\nvar trim = require( './../../../base/trim' );\n\n\n// VARIABLES //\n\nvar RE_WHITESPACE = /\\s+/g;\nvar RE_SPECIAL = /[-!\"'(),–.:;<>?`{}|~\\/\\\\\\[\\]_#$*&^@%]+/g; // eslint-disable-line no-useless-escape\nvar RE_TO_PASCAL = /(?:\\s|^)([^\\s]+)(?=\\s|$)/g;\nvar RE_CAMEL = /([a-z0-9])([A-Z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Callback invoked upon a match.\n*\n* @private\n* @param {string} match - entire match\n* @param {string} p1 - first capture group\n* @returns {string} capitalized capture group\n*/\nfunction replacer( match, p1 ) {\n\treturn capitalize( lowercase( p1 ) );\n}\n\n\n// MAIN //\n\n/**\n* Converts a string to Pascal case.\n*\n* @param {string} str - string to convert\n* @returns {string} Pascal-cased string\n*\n* @example\n* var out = pascalcase( 'foo bar' );\n* // returns 'FooBar'\n*\n* @example\n* var out = pascalcase( 'IS_MOBILE' );\n* // returns 'IsMobile'\n*\n* @example\n* var out = pascalcase( 'Hello World!' );\n* // returns 'HelloWorld'\n*\n* @example\n* var out = pascalcase( '--foo-bar--' );\n* // returns 'FooBar'\n*/\nfunction pascalcase( str ) {\n\tstr = replace( str, RE_SPECIAL, ' ' );\n\tstr = replace( str, RE_WHITESPACE, ' ' );\n\tstr = replace( str, RE_CAMEL, '$1 $2' );\n\tstr = trim( str );\n\treturn replace( str, RE_TO_PASCAL, replacer );\n}\n\n\n// EXPORTS //\n\nmodule.exports = pascalcase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\n\n\n// VARIABLES //\n\n// 2^6-1 = 63 => 0x3f => 00111111\nvar Ox3F = 63|0;\n\n// 2^7 = 128 => 0x80 => 10000000\nvar Ox80 = 128|0;\n\n// 192 => 0xc0 => 11000000\nvar OxC0 = 192|0;\n\n// 224 => 0xe0 => 11100000\nvar OxE0 = 224|0;\n\n// 240 => 0xf0 => 11110000\nvar OxF0 = 240|0;\n\n// 2^10-1 = 1023 => 0x3ff => 00000011 11111111\nvar Ox3FF = 1023|0;\n\n// 2^11 = 2048 => 0x800 => 00001000 00000000\nvar Ox800 = 2048|0;\n\n// 55296 => 11011000 00000000\nvar OxD800 = 55296|0;\n\n// 57344 => 11100000 00000000\nvar OxE000 = 57344|0;\n\n// 2^16 = 65536 => 00000000 00000001 00000000 00000000\nvar Ox10000 = 65536|0;\n\n\n// MAIN //\n\n/**\n* Converts a UTF-16 encoded string to an array of integers using UTF-8 encoding.\n*\n* ## Method\n*\n* -   UTF-8 is defined to encode code points in one to four bytes, depending on the number of significant bits in the numerical value of the code point.\n*\n* -   UTF-16 encoding uses one 16-bit unit for non-surrogates (U+0000 to U+D7FF and U+E000 to U+FFFF).\n*\n* -   UTF-16 encoding uses two 16-bit units (surrogate pairs) for U+10000 to U+10FFFF and encodes U+10000-U+10FFFF by subtracting 0x10000 from the code point, expressing the result as a 20-bit binary, and splitting the 20 bits of 0x0-0xFFFFF as upper and lower 10-bits. The respective 10-bits are stored in two 16-bit words.\n*\n* -   Let `N` be the number of significant bits.\n*\n* -   If `N <= 7` (i.e., U+0000 to U+007F), a code point is encoded in a single byte.\n*\n*     ```text\n*     0xxxxxxx\n*     ```\n*\n*     where an `x` refers to a code point bit.\n*\n* -   If `N <= 11` (i.e., U+0080 to U+07FF; ASCII characters), a code point is encoded in two bytes (5+6 bits).\n*\n*     ```text\n*     110xxxxx 10xxxxxx\n*     ```\n*\n* -   If `N <= 16` (i.e., U+0800 to U+FFFF), a code point is encoded in three bytes (4+6+6 bits).\n*\n*     ```text\n*     1110xxxx 10xxxxxx 10xxxxxx\n*     ```\n*\n* -   If `N <= 21` (i.e., U+10000 to U+10FFFF), a code point is encoded in four bytes (3+6+6+6 bits).\n*\n*     ```text\n*     11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n*     ```\n*\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {Array} array of integers\n* @see [UTF-8]{@link https://en.wikipedia.org/wiki/UTF-8}\n* @see [Stack Overflow]{@link https://stackoverflow.com/questions/6240055/manually-converting-unicode-codepoints-into-utf-8-and-utf-16}\n*\n* @example\n* var str = '☃';\n* var out = utf16ToUTF8Array( str );\n* // returns [ 226, 152, 131 ]\n*/\nfunction utf16ToUTF8Array( str ) {\n\tvar code;\n\tvar out;\n\tvar len;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\tlen = str.length;\n\tout = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tcode = str.charCodeAt( i );\n\n\t\t// ASCII...\n\t\tif ( code < Ox80 ) {\n\t\t\tout.push( code );\n\t\t}\n\t\t// UTF-16 non-surrogate pair...\n\t\telse if ( code < Ox800 ) {\n\t\t\tout.push( OxC0 | (code>>6) );\n\t\t\tout.push( Ox80 | (code & Ox3F) );\n\t\t}\n\t\telse if ( code < OxD800 || code >= OxE000 ) {\n\t\t\tout.push( OxE0 | (code>>12) );\n\t\t\tout.push( Ox80 | ((code>>6) & Ox3F) );\n\t\t\tout.push( Ox80 | (code & Ox3F) );\n\t\t}\n\t\t// UTF-16 surrogate pair...\n\t\telse {\n\t\t\ti += 1;\n\n\t\t\t// eslint-disable-next-line max-len\n\t\t\tcode = Ox10000 + (((code & Ox3FF)<<10) | (str.charCodeAt(i) & Ox3FF));\n\n\t\t\tout.push( OxF0 | (code>>18) );\n\t\t\tout.push( Ox80 | ((code>>12) & Ox3F) );\n\t\t\tout.push( Ox80 | ((code>>6) & Ox3F) );\n\t\t\tout.push( Ox80 | (code & Ox3F) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = utf16ToUTF8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a UTF-16 encoded string to an array of integers using UTF-8 encoding.\n*\n* @module @stdlib/string/utf16-to-utf8-array\n*\n* @example\n* var utf16ToUTF8Array = require( '@stdlib/string/utf16-to-utf8-array' );\n*\n* var str = '☃';\n* var out = utf16ToUTF8Array( str );\n* // returns [ 226, 152, 131 ]\n*/\n\n// MODULES //\n\nvar utf16ToUTF8Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = utf16ToUTF8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Percent-encode a UTF-16 encoded string according to RFC 3986.\n*\n* @module @stdlib/string/base/percent-encode\n*\n* @example\n* var percentEncode = require( '@stdlib/string/base/percent-encode' );\n*\n* var str1 = 'Ladies + Gentlemen';\n*\n* var str2 = percentEncode( str1 );\n* // returns 'Ladies%20%2B%20Gentlemen'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar utf16ToUTF8Array = require( './../../../utf16-to-utf8-array' );\n\n\n// VARIABLES //\n\n// Character codes:\nvar UNDERSCORE = 95|0;\nvar PERIOD = 46|0;\nvar HYPHEN = 45|0;\nvar TILDE = 126|0;\nvar ZERO = 48|0;\nvar NINE = 57|0;\nvar A = 65|0;\nvar Z = 90|0;\nvar a = 97|0;\nvar z = 122|0;\n\n\n// MAIN //\n\n/**\n* Percent-encodes a UTF-16 encoded string according to [RFC 3986][1].\n*\n* [1]: https://tools.ietf.org/html/rfc3986#section-2.1\n*\n* @param {string} str - string to percent-encode\n* @returns {string} percent-encoded string\n*\n* @example\n* var str1 = 'Ladies + Gentlemen';\n*\n* var str2 = percentEncode( str1 );\n* // returns 'Ladies%20%2B%20Gentlemen'\n*/\nfunction percentEncode( str ) {\n\tvar byte;\n\tvar out;\n\tvar len;\n\tvar buf;\n\tvar i;\n\n\t// Convert to an array of octets using UTF-8 encoding (see https://tools.ietf.org/html/rfc3986#section-2.5):\n\tbuf = utf16ToUTF8Array( str );\n\n\t// Encode the string...\n\tlen = buf.length;\n\tout = '';\n\tfor ( i = 0; i < len; i++ ) {\n\t\tbyte = buf[ i ];\n\t\tif (\n\t\t\t// ASCII Digits:\n\t\t\t( byte >= ZERO && byte <= NINE ) ||\n\n\t\t\t// ASCII uppercase letters:\n\t\t\t( byte >= A && byte <= Z ) ||\n\n\t\t\t// ASCII lowercase letters:\n\t\t\t( byte >= a && byte <= z ) ||\n\n\t\t\t// ASCII unreserved characters (see https://tools.ietf.org/html/rfc3986#section-2.3):\n\t\t\tbyte === HYPHEN ||\n\t\t\tbyte === PERIOD ||\n\t\t\tbyte === UNDERSCORE ||\n\t\t\tbyte === TILDE\n\t\t) {\n\t\t\tout += str.charAt( i );\n\t\t} else {\n\t\t\t// Convert an octet to hexadecimal and uppercase according to the RFC (see https://tools.ietf.org/html/rfc3986#section-2.1):\n\t\t\tout += '%' + byte.toString( 16 ).toUpperCase();\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = percentEncode;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar builtin = require( './builtin.js' );\n\n\n// MAIN //\n\n/**\n* Trims whitespace from the end of a string.\n*\n* @param {string} str - input string\n* @returns {string} trimmed string\n*\n* @example\n* var out = rtrim( '   Whitespace   ' );\n* // returns '   Whitespace'\n*\n* @example\n* var out = rtrim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns '\\t\\t\\tTabs'\n*\n* @example\n* var out = rtrim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns '\\n\\n\\nNew Lines'\n*/\nfunction rtrim( str ) {\n\treturn builtin.call( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = rtrim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar rtrim = String.prototype.trimRight;\n\n\n// EXPORTS //\n\nmodule.exports = rtrim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Trim whitespace characters from the end of a string.\n*\n* @module @stdlib/string/base/right-trim\n*\n* @example\n* var rtrim = require( '@stdlib/string/base/right-trim' );\n*\n* var out = rtrim( '   Whitespace   ' );\n* // returns '   Whitespace'\n*\n* out = rtrim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns '\\t\\t\\tTabs'\n*\n* out = rtrim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns '\\n\\n\\nNew Lines'\n*/\n\n// MODULES //\n\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar polyfill = require( './polyfill.js' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar rtrim;\nif ( HAS_BUILTIN ) {\n\trtrim = main;\n} else {\n\trtrim = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = rtrim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof String.prototype.trimRight !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar replace = require( './../../../base/replace' );\n\n\n// VARIABLES //\n\n// The following regular expression should suffice to polyfill (most?) all environments.\nvar RE = /[\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+$/;\n\n\n// MAIN //\n\n/**\n* Trims whitespace from the end of a string.\n*\n* @private\n* @param {string} str - input string\n* @returns {string} trimmed string\n*\n* @example\n* var out = rtrim( '   Whitespace   ' );\n* // returns '   Whitespace'\n*\n* @example\n* var out = rtrim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns '\\t\\t\\tTabs'\n*\n* @example\n* var out = rtrim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns '\\n\\n\\nNew Lines'\n*/\nfunction rtrim( str ) {\n\treturn replace( str, RE, '' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = rtrim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to snake case.\n*\n* @module @stdlib/string/base/snakecase\n*\n* @example\n* var snakecase = require( '@stdlib/string/base/snakecase' );\n*\n* var str = snakecase( 'Foo Bar' );\n* // returns 'foo_bar'\n*\n* str = snakecase( 'I am a tiny little house' );\n* // returns 'i_am_a_tiny_little_house'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lowercase = require( './../../../base/lowercase' );\nvar replace = require( './../../../base/replace' );\nvar trim = require( './../../../base/trim' );\n\n\n// VARIABLES //\n\nvar RE_WHITESPACE = /\\s+/g;\nvar RE_SPECIAL = /[\\-!\"'(),–.:;<>?`{}|~\\/\\\\\\[\\]_#$*&^@%]+/g; // eslint-disable-line no-useless-escape\nvar RE_CAMEL = /([a-z0-9])([A-Z])/g;\n\n\n// MAIN //\n\n/**\n* Converts a string to snake case.\n*\n* @param {string} str - string to convert\n* @returns {string} snake-cased string\n*\n* @example\n* var str = snakecase( 'Hello World!' );\n* // returns 'hello_world'\n*\n* @example\n* var str = snakecase( 'foo bar' );\n* // returns 'foo_bar'\n*\n* @example\n* var str = snakecase( 'I am a tiny little teapot' );\n* // returns 'i_am_a_tiny_little_teapot'\n*\n* @example\n* var str = snakecase( 'BEEP boop' );\n* // returns 'beep_boop'\n*\n* @example\n* var str = snakecase( 'isMobile' );\n* // returns 'is_mobile'\n*/\nfunction snakecase( str ) {\n\tstr = replace( str, RE_SPECIAL, ' ' );\n\tstr = replace( str, RE_CAMEL, '$1 $2' );\n\tstr = trim( str );\n\tstr = replace( str, RE_WHITESPACE, '_' );\n\treturn lowercase( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = snakecase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object' ;\nimport hasOwnProp from '@stdlib/assert/has-own-property' ;\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean' ;\nimport { isPrimitive as isString } from '@stdlib/assert/is-string' ;\nimport format from '@stdlib/string/format' ;\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.flags] - regular expression flags\n* @param {boolean} [options.capture] - boolean indicating whether to wrap a regular expression matching white space characters with a capture group\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'flags': 'gm'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'flags' ) ) {\n\t\topts.flags = options.flags;\n\t\tif ( !isString( opts.flags ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'flags', opts.flags ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'capture' ) ) {\n\t\topts.capture = options.capture;\n\t\tif ( !isBoolean( opts.capture ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'capture', opts.capture ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport validate from './validate.js' ;\n\n\n// VARIABLES //\n\nvar REGEXP_STRING = '[\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]';\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a white space character.\n*\n* @param {Options} [options] - function options\n* @param {string} [options.flags=''] - regular expression flags\n* @param {boolean} [options.capture=false] - boolean indicating whether to wrap a regular expression matching white space characters with a capture group\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_WHITESPACE = reWhitespace();\n*\n* var bool = RE_WHITESPACE.test( ' ' );\n* // returns true\n*\n* bool = RE_WHITESPACE.test( '\\t' );\n* // returns true\n*\n* @example\n* import replace from '@stdlib/string/replace' ;\n* var RE_WHITESPACE = reWhitespace({\n*     'capture': true\n* });\n*\n* var str = 'Duplicate capture';\n* var out = replace( str, RE_WHITESPACE, '$1$1' );\n* // returns 'Duplicate  capture'\n*/\nfunction reWhitespace( options ) {\n\tvar opts;\n\tvar err;\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.capture ) {\n\t\t\treturn new RegExp( '('+REGEXP_STRING+')', opts.flags );\n\t\t}\n\t\treturn new RegExp( REGEXP_STRING, opts.flags );\n\t}\n\treturn /[\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]/; // eslint-disable-line no-control-regex\n}\n\n\n// EXPORTS //\n\nexport default reWhitespace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reWhitespace from './main.js' ;\n\n\n// MAIN //\n\n/**\n* Matches a white space character.\n*\n* Regular expression: `/([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF])/`\n*\n* -   `()`\n*     -   create a capture group\n*\n* -   `[]`\n*     -   match any one of the listed characters\n*\n* -   `\\u0009`\n*     -   character tabulation (horizontal tab; `\\t`)\n*\n* -   `\\u000A`\n*     -   line feed (LF; `\\n`)\n*\n* -   `\\u000B`\n*     -   line tabulation (vertical tab; `\\v`)\n*\n* -   `\\u000C`\n*     -   form feed (`\\f`)\n*\n* -   `\\u000D`\n*     -   carriage return (CR; `\\r`)\n*\n* -   `\\u0020`\n*     -   space (most common)\n*\n* -   `\\u0085`\n*     -   next line (NEL)\n*\n* -   `\\u00A0`\n*     -   non-breaking space\n*\n* -   `\\u1680`\n*     -   Ogham space mark\n*\n* -   `\\u2000`\n*     -   en quad\n*\n* -   `\\u2001`\n*     -   em quad\n*\n* -   `\\u2002`\n*     -   en space\n*\n* -   `\\u2003`\n*     -   em space\n*\n* -   `\\u2004`\n*\n*     -   three-per-em space (thick space)\n*\n* -   `\\u2005`\n*     -   four-per-em space (mid space)\n*\n* -   `\\u2006`\n*     -   six-per-em space\n*\n* -   `\\u2007`\n*     -   figure space\n*\n* -   `\\u2008`\n*     -   punctuation space\n*\n* -   `\\u2009`\n*     -   thin space\n*\n* -   `\\u200A`\n*     -   hair space\n*\n* -   `\\u2028`\n*     -   line separator\n*\n* -   `\\u2029`\n*     -   paragraph separator\n*\n* -   `\\u202F`\n*     -   narrow no-break space\n*\n* -   `\\u205F`\n*     -   medium mathematical space\n*\n* -   `\\u3000`\n*     -   ideographic space\n*\n* -   `\\uFEFF`\n*     -   zero width non-breaking space\n*\n* ## Notes\n*\n* -   Matches the 25 characters defined as white space (\"WSpace=Y\",\"WS\") characters in the Unicode 9.0 character database.\n* -   Matches one related white space character without the Unicode character property \"WSpace=Y\" (zero width non-breaking space which was deprecated as of Unicode 3.2).\n*\n* @constant\n* @type {RegExp}\n* @default /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF])/\n* @see [whitespace]{@link https://en.wikipedia.org/wiki/Whitespace_character}\n*/\nvar REGEXP_CAPTURE = reWhitespace({\n\t'capture': true\n});\n\n\n// EXPORTS //\n\nexport default REGEXP_CAPTURE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reWhitespace from './main.js' ;\n\n\n// MAIN //\n\n/**\n* Matches a white space character.\n*\n* Regular expression: `/[\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]/`\n*\n* -   `[]`\n*     -   match any one of the listed characters\n*\n* -   `\\u0009`\n*     -   character tabulation (horizontal tab; `\\t`)\n*\n* -   `\\u000A`\n*     -   line feed (LF; `\\n`)\n*\n* -   `\\u000B`\n*     -   line tabulation (vertical tab; `\\v`)\n*\n* -   `\\u000C`\n*     -   form feed (`\\f`)\n*\n* -   `\\u000D`\n*     -   carriage return (CR; `\\r`)\n*\n* -   `\\u0020`\n*     -   space (most common)\n*\n* -   `\\u0085`\n*     -   next line (NEL)\n*\n* -   `\\u00A0`\n*     -   non-breaking space\n*\n* -   `\\u1680`\n*     -   Ogham space mark\n*\n* -   `\\u2000`\n*     -   en quad\n*\n* -   `\\u2001`\n*     -   em quad\n*\n* -   `\\u2002`\n*     -   en space\n*\n* -   `\\u2003`\n*     -   em space\n*\n* -   `\\u2004`\n*\n*     -   three-per-em space (thick space)\n*\n* -   `\\u2005`\n*     -   four-per-em space (mid space)\n*\n* -   `\\u2006`\n*     -   six-per-em space\n*\n* -   `\\u2007`\n*     -   figure space\n*\n* -   `\\u2008`\n*     -   punctuation space\n*\n* -   `\\u2009`\n*     -   thin space\n*\n* -   `\\u200A`\n*     -   hair space\n*\n* -   `\\u2028`\n*     -   line separator\n*\n* -   `\\u2029`\n*     -   paragraph separator\n*\n* -   `\\u202F`\n*     -   narrow no-break space\n*\n* -   `\\u205F`\n*     -   medium mathematical space\n*\n* -   `\\u3000`\n*     -   ideographic space\n*\n* -   `\\uFEFF`\n*     -   zero width non-breaking space\n*\n* ## Notes\n*\n* -   Matches the 25 characters defined as white space (\"WSpace=Y\",\"WS\") characters in the Unicode 9.0 character database.\n* -   Matches one related white space character without the Unicode character property \"WSpace=Y\" (zero width non-breaking space which was deprecated as of Unicode 3.2).\n*\n* @constant\n* @type {RegExp}\n* @default /[\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]/\n* @see [whitespace]{@link https://en.wikipedia.org/wiki/Whitespace_character}\n*/\nvar REGEXP = reWhitespace();\n\n\n// EXPORTS //\n\nexport default REGEXP;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a white space character.\n*\n* @module @stdlib/regexp/whitespace\n*\n* @example\n* import reWhitespace from '@stdlib/regexp/whitespace' ;\n*\n* var RE_WHITESPACE = reWhitespace();\n*\n* var bool = RE_WHITESPACE.test( ' ' );\n* // returns true\n*\n* @example\n* import reWhitespace from '@stdlib/regexp/whitespace' ;\n*\n* var RE_WHITESPACE = reWhitespace({\n*     'flags': 'gm'\n* });\n*\n* var bool = RE_WHITESPACE.test( '\\t' );\n* // returns true\n*\n* @example\n* import { REGEXP as RE_WHITESPACE } from '@stdlib/regexp/whitespace' ;\n*\n* var bool = RE_WHITESPACE.test( 'a' );\n* // returns false\n*\n* @example\n* var RE_WHITESPACE = require( '@stdlib/regexp/whitespace' ).REGEXP_CAPTURE;\n* import replace from '@stdlib/string/replace' ;\n*\n* var str = 'Duplicate capture';\n* var out = replace( str, RE_WHITESPACE, '$1$1' );\n* // returns 'Duplicate  capture'\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport REGEXP_CAPTURE from './regexp_capture.js' ;\nimport REGEXP from './regexp.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\nsetReadOnly( main, 'REGEXP_CAPTURE', REGEXP_CAPTURE );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Capitalize the first letter of each word in an input string.\n*\n* @module @stdlib/string/base/startcase\n*\n* @example\n* var startcase = require( '@stdlib/string/base/startcase' );\n*\n* var str = startcase( 'beep boop foo bar' );\n* // returns 'Beep Boop Foo Bar'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reWhitespace = require( '@stdlib/regexp/whitespace' ).REGEXP;\n\n\n// MAIN //\n\n/**\n* Capitalizes the first letter of each word in an input string.\n*\n* @param {string} str - string to convert\n* @returns {string} start case string\n*\n* @example\n* var str = startcase( 'beep boop foo bar' );\n* // returns 'Beep Boop Foo Bar'\n*/\nfunction startcase( str ) {\n\tvar cap;\n\tvar out;\n\tvar ch;\n\tvar i;\n\n\tcap = true;\n\tout = '';\n\tfor ( i = 0; i < str.length; i++ ) {\n\t\tch = str.charAt( i );\n\t\tif ( reWhitespace.test( ch ) ) {\n\t\t\tcap = true;\n\t\t} else if ( cap ) {\n\t\t\tch = ch.toUpperCase();\n\t\t\tcap = false;\n\t\t}\n\t\tout += ch;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = startcase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a string starts with the characters of another string.\n*\n* @private\n* @param {string} str - input string\n* @param {string} search - search string\n* @param {integer} position - position at which to start searching\n* @returns {boolean} boolean indicating if the input string starts with the search string\n*\n* @example\n* var bool = startsWith( 'Remember the story I used to tell you when you were a boy?', 'Remember', 0 );\n* // returns true\n*\n* @example\n* var bool = startsWith( 'Remember the story I used to tell you when you were a boy?', 'Remember, remember', 0 );\n* // returns false\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'To be', 0 );\n* // returns true\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'to be', 0 );\n* // returns false\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'to be', 14 );\n* // returns true\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'quest', -9 );\n* // returns true\n*/\nfunction startsWith( str, search, position ) {\n\tvar pos;\n\tvar i;\n\tif ( position < 0 ) {\n\t\tpos = str.length + position;\n\t} else {\n\t\tpos = position;\n\t}\n\tif ( search.length === 0 ) {\n\t\treturn true;\n\t}\n\tif (\n\t\tpos < 0 ||\n\t\tpos + search.length > str.length\n\t) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < search.length; i++ ) {\n\t\tif ( str.charCodeAt( pos + i ) !== search.charCodeAt( i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = startsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar startsWith = String.prototype.startsWith;\n\n\n// EXPORTS //\n\nmodule.exports = startsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a string starts with the characters of another string.\n*\n* @module @stdlib/string/base/starts-with\n*\n* @example\n* var startsWith = require( '@stdlib/string/base/starts-with' );\n*\n* var str = 'Fair is foul, and foul is fair, hover through fog and filthy air';\n* var bool = startsWith( str, 'Fair', 0 );\n* // returns true\n*\n* bool = startsWith( str, 'fair', 0 );\n* // returns false\n*\n* bool = startsWith( str, 'foul', 8 );\n* // returns true\n*\n* bool = startsWith( str, 'filthy', -10 );\n* // returns true\n*/\n\n// MODULES //\n\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar polyfill = require( './polyfill.js' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar startsWith;\nif ( HAS_BUILTIN ) {\n\tstartsWith = main;\n} else {\n\tstartsWith = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = startsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof String.prototype.startsWith !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar builtin = require( './builtin.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a string starts with the characters of another string.\n*\n* @param {string} str - input string\n* @param {string} search - search string\n* @param {integer} position - position at which to start searching\n* @returns {boolean} boolean indicating if the input string starts with the search string\n*\n* @example\n* var bool = startsWith( 'Remember the story I used to tell you when you were a boy?', 'Remember', 0 );\n* // returns true\n*\n* @example\n* var bool = startsWith( 'Remember the story I used to tell you when you were a boy?', 'Remember, remember', 0 );\n* // returns false\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'To be', 0 );\n* // returns true\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'to be', 0 );\n* // returns false\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'to be', 14 );\n* // returns true\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'quest', -9 );\n* // returns true\n*/\nfunction startsWith( str, search, position ) {\n\tvar pos;\n\tif ( position < 0 ) {\n\t\tpos = str.length + position;\n\t} else {\n\t\tpos = position;\n\t}\n\tif ( search.length === 0 ) {\n\t\treturn true;\n\t}\n\tif (\n\t\tpos < 0 ||\n\t\tpos + search.length > str.length\n\t) {\n\t\treturn false;\n\t}\n\treturn builtin.call( str, search, pos );\n}\n\n\n// EXPORTS //\n\nmodule.exports = startsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Uncapitalize the first character of a string.\n*\n* @module @stdlib/string/base/uncapitalize\n*\n* @example\n* var uncapitalize = require( '@stdlib/string/base/uncapitalize' );\n*\n* var out = uncapitalize( 'Last man standing' );\n* // returns 'last man standing'\n*\n* out = uncapitalize( 'Hidden Treasures' );\n* // returns 'hidden Treasures';\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Uncapitalizes the first character of a string.\n*\n* @param {string} str - input string\n* @returns {string} input string with first character converted to lowercase\n*\n* @example\n* var out = uncapitalize( 'Last man standing' );\n* // returns 'last man standing'\n*\n* @example\n* var out = uncapitalize( 'Presidential election' );\n* // returns 'presidential election'\n*\n* @example\n* var out = uncapitalize( 'JavaScript' );\n* // returns 'javaScript'\n*\n* @example\n* var out = uncapitalize( 'Hidden Treasures' );\n* // returns 'hidden Treasures'\n*/\nfunction uncapitalize( str ) {\n\tif ( str === '' ) {\n\t\treturn '';\n\t}\n\treturn str.charAt( 0 ).toLowerCase() + str.slice( 1 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = uncapitalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name camelcase\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/camelcase}\n*/\nsetReadOnly( ns, 'camelcase', require( './../../base/camelcase' ) );\n\n/**\n* @name capitalize\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/capitalize}\n*/\nsetReadOnly( ns, 'capitalize', require( './../../base/capitalize' ) );\n\n/**\n* @name codePointAt\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/code-point-at}\n*/\nsetReadOnly( ns, 'codePointAt', require( './../../base/code-point-at' ) );\n\n/**\n* @name constantcase\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/constantcase}\n*/\nsetReadOnly( ns, 'constantcase', require( './../../base/constantcase' ) );\n\n/**\n* @name endsWith\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/ends-with}\n*/\nsetReadOnly( ns, 'endsWith', require( './../../base/ends-with' ) );\n\n/**\n* @name formatInterpolate\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/format-interpolate}\n*/\nsetReadOnly( ns, 'formatInterpolate', require( './../../base/format-interpolate' ) );\n\n/**\n* @name formatTokenize\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/format-tokenize}\n*/\nsetReadOnly( ns, 'formatTokenize', require( './../../base/format-tokenize' ) );\n\n/**\n* @name kebabcase\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/kebabcase}\n*/\nsetReadOnly( ns, 'kebabcase', require( './../../base/kebabcase' ) );\n\n/**\n* @name lpad\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/left-pad}\n*/\nsetReadOnly( ns, 'lpad', require( './../../base/left-pad' ) );\n\n/**\n* @name ltrim\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/left-trim}\n*/\nsetReadOnly( ns, 'ltrim', require( './../../base/left-trim' ) );\n\n/**\n* @name lowercase\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/lowercase}\n*/\nsetReadOnly( ns, 'lowercase', require( './../../base/lowercase' ) );\n\n/**\n* @name pascalcase\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/pascalcase}\n*/\nsetReadOnly( ns, 'pascalcase', require( './../../base/pascalcase' ) );\n\n/**\n* @name percentEncode\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/percent-encode}\n*/\nsetReadOnly( ns, 'percentEncode', require( './../../base/percent-encode' ) );\n\n/**\n* @name repeat\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/repeat}\n*/\nsetReadOnly( ns, 'repeat', require( './../../base/repeat' ) );\n\n/**\n* @name replace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/replace}\n*/\nsetReadOnly( ns, 'replace', require( './../../base/replace' ) );\n\n/**\n* @name rtrim\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/right-trim}\n*/\nsetReadOnly( ns, 'rtrim', require( './../../base/right-trim' ) );\n\n/**\n* @name snakecase\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/snakecase}\n*/\nsetReadOnly( ns, 'snakecase', require( './../../base/snakecase' ) );\n\n/**\n* @name startcase\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/startcase}\n*/\nsetReadOnly( ns, 'startcase', require( './../../base/startcase' ) );\n\n/**\n* @name startsWith\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/starts-with}\n*/\nsetReadOnly( ns, 'startsWith', require( './../../base/starts-with' ) );\n\n/**\n* @name trim\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/trim}\n*/\nsetReadOnly( ns, 'trim', require( './../../base/trim' ) );\n\n/**\n* @name uncapitalize\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/uncapitalize}\n*/\nsetReadOnly( ns, 'uncapitalize', require( './../../base/uncapitalize' ) );\n\n/**\n* @name uppercase\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base/uppercase}\n*/\nsetReadOnly( ns, 'uppercase', require( './../../base/uppercase' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/camelcase' );\n\n\n// MAIN //\n\n/**\n* Converts a string to camel case.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} camel-cased string\n*\n* @example\n* var out = camelcase( 'foo bar' );\n* // returns 'fooBar'\n*\n* @example\n* var out = camelcase( 'IS_MOBILE' );\n* // returns 'isMobile'\n*\n* @example\n* var out = camelcase( 'Hello World!' );\n* // returns 'helloWorld'\n*\n* @example\n* var out = camelcase( '--foo-bar--' );\n* // returns 'fooBar'\n*/\nfunction camelcase( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = camelcase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to camel case.\n*\n* @module @stdlib/string/camelcase\n*\n* @example\n* var camelcase = require( '@stdlib/string/camelcase' );\n*\n* var str = camelcase( 'foo bar' );\n* // returns 'fooBar'\n*\n* str = camelcase( '--foo-bar--' );\n* // returns 'fooBar'\n*\n* str = camelcase( 'Hello World!' );\n* // returns 'helloWorld'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/capitalize' );\n\n\n// MAIN //\n\n/**\n* Capitalizes the first character in a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string\n* @returns {string} capitalized string\n*\n* @example\n* var out = capitalize( 'last man standing' );\n* // returns 'Last man standing'\n*\n* @example\n* var out = capitalize( 'presidential election' );\n* // returns 'Presidential election'\n*\n* @example\n* var out = capitalize( 'javaScript' );\n* // returns 'JavaScript'\n*\n* @example\n* var out = capitalize( 'Hidden Treasures' );\n* // returns 'Hidden Treasures'\n*/\nfunction capitalize( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = capitalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Capitalize the first character in a string.\n*\n* @module @stdlib/string/capitalize\n*\n* @example\n* var capitalize = require( '@stdlib/string/capitalize' );\n*\n* var out = capitalize( 'last man standing' );\n* // returns 'Last man standing'\n*\n* out = capitalize( 'Hidden Treasures' );\n* // returns 'Hidden Treasures';\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default Number; // eslint-disable-line stdlib/require-globals\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Number from '@stdlib/number/ctor' ;\n\n\n// MAIN //\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Number.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support' ;\nimport nativeClass from '@stdlib/utils/native-class' ;\nimport Number from '@stdlib/number/ctor' ;\nimport test from './try2serialize.js' ;\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\nfunction isNumber( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Number ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Number]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toString from './tostring.js' ; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a number.\n*\n* @module @stdlib/assert/is-number\n*\n* @example\n* import isNumber from '@stdlib/assert/is-number' ;\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNumber } from '@stdlib/assert/is-number' ;\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNumber } from '@stdlib/assert/is-number' ;\n*\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants/float64/pinf\n* @type {number}\n*\n* @example\n* import FLOAT64_PINF from '@stdlib/constants/float64/pinf' ;\n* // returns Infinity\n*/\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default FLOAT64_PINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* @module @stdlib/constants/float64/ninf\n* @type {number}\n*\n* @example\n* import FLOAT64_NINF from '@stdlib/constants/float64/ninf' ;\n* // returns -Infinity\n*/\n\n// MODULES //\n\nimport Number from '@stdlib/number/ctor' ;\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_NINF = Number.NEGATIVE_INFINITY;\n\n\n// EXPORTS //\n\nexport default FLOAT64_NINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floor( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floor( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floor( NaN );\n* // returns NaN\n*/\nvar floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport floor from './../../../../base/special/floor' ;\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\treturn (floor(x) === x);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf' ;\nimport NINF from '@stdlib/constants/float64/ninf' ;\nimport isInt from '@stdlib/math/base/assert/is-integer' ;\n\n\n// MAIN //\n\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tvalue < PINF &&\n\t\tvalue > NINF &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from './../../is-number' ;\nimport isInt from './integer.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from './../../is-number' ;\nimport isInt from './integer.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an integer.\n*\n* @module @stdlib/assert/is-integer\n*\n* @example\n* import isInteger from '@stdlib/assert/is-integer' ;\n*\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isInteger( -3.14 );\n* // returns false\n*\n* bool = isInteger( null );\n* // returns false\n*\n* @example\n* // Use interface to check for integer primitives...\n* import { isPrimitive as isInteger } from '@stdlib/assert/is-integer' ;\n*\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for integer objects...\n* import { isObject as isInteger } from '@stdlib/assert/is-integer' ;\n*\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/code-point-at' );\n\n\n// MAIN //\n\n/**\n* Returns a Unicode code point from a string at a specified position.\n*\n* @param {string} str - input string\n* @param {integer} idx - position\n* @param {boolean} [backward=false] - backward iteration for low surrogates\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be a boolean\n* @throws {RangeError} position must be a valid index in string\n* @returns {NonNegativeInteger} code point\n*\n* @example\n* var out = codePointAt( 'last man standing', 4 );\n* // returns 32\n*\n* @example\n* var out = codePointAt( 'presidential election', 8, true );\n* // returns 116\n*\n* @example\n* var out = codePointAt( 'अनुच्छेद', 2 );\n* // returns 2369\n*\n* @example\n* var out = codePointAt( '🌷', 1, true );\n* // returns 127799\n*/\nfunction codePointAt( str, idx, backward ) {\n\tvar FLG;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx < 0 ) {\n\t\tidx += str.length;\n\t}\n\tif ( idx < 0 || idx >= str.length ) {\n\t\tthrow new RangeError( format( 'invalid argument. Second argument must be a valid position (i.e., be within string bounds). Value: `%d`.', idx ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isBoolean( backward ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a boolean. Value: `%s`.', backward ) );\n\t\t}\n\t\tFLG = backward;\n\t} else {\n\t\tFLG = false;\n\t}\n\treturn base( str, idx, FLG );\n}\n\n\n// EXPORTS //\n\nmodule.exports = codePointAt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a Unicode code point from a string at a specified position.\n*\n* @module @stdlib/string/code-point-at\n*\n* @example\n* var codePointAt = require( '@stdlib/string/code-point-at' );\n*\n* var out = codePointAt( 'अनुच्छेद', 2 );\n* // returns 2369\n*\n* out = codePointAt( '🌷', 1, true );\n* // returns 127799\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/constantcase' );\n\n\n// MAIN //\n\n/**\n* Converts a string to constant case.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} constant-cased string\n*\n* @example\n* var str = constantcase( 'beep' );\n* // returns 'BEEP'\n*\n* @example\n* var str = constantcase( 'beep boop' );\n* // returns 'BEEP_BOOP'\n*\n* @example\n* var str = constantcase( 'isMobile' );\n* // returns 'IS_MOBILE'\n*\n* @example\n* var str = constantcase( 'Hello World!' );\n* // returns 'HELLO_WORLD'\n*/\nfunction constantcase( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = constantcase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to constant case.\n*\n* @module @stdlib/string/constantcase\n*\n* @example\n* var constantcase = require( '@stdlib/string/constantcase' );\n*\n* var str = constantcase( 'aBcDeF' );\n* // returns 'ABCDEF'\n*\n* str = constantcase( 'Hello World!' );\n* // returns 'HELLO_WORLD'\n*\n* str = constantcase( 'I am a robot' );\n* // returns 'I_AM_A_ROBOT'\n*/\n\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/ends-with' );\n\n\n// MAIN //\n\n/**\n* Test if a string ends with the characters of another string.\n*\n* @param {string} str - input string\n* @param {string} search - search string\n* @param {integer} [len=str.length] - substring length\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @throws {TypeError} third argument must be an integer\n* @returns {boolean} boolean indicating if the input string ends with the search string\n*\n* @example\n* var bool = endsWith( 'Remember the story I used to tell you when you were a boy?', 'boy?' );\n* // returns true\n*\n* @example\n* var bool = endsWith( 'Remember the story I used to tell you when you were a boy?', 'Boy?' );\n* // returns false\n*\n* @example\n* var bool = endsWith( 'To be, or not to be, that is the question.', 'to be' );\n* // returns false\n*\n* @example\n* var bool = endsWith( 'To be, or not to be, that is the question.', 'to be', 19 );\n* // returns true\n*\n* @example\n* var bool = endsWith( 'To be, or not to be, that is the question.', 'to be', -23 );\n* // returns true\n*/\nfunction endsWith( str, search, len ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isString( search ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', search ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', len ) );\n\t\t}\n\t} else {\n\t\tlen = str.length;\n\t}\n\treturn base( str, search, len );\n}\n\n\n// EXPORTS //\n\nmodule.exports = endsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a string ends with the characters of another string.\n*\n* @module @stdlib/string/ends-with\n*\n* @example\n* var endsWith = require( '@stdlib/string/ends-with' );\n*\n* var str = 'Fair is foul, and foul is fair, hover through fog and filthy air';\n*\n* var bool = endsWith( str, 'air' );\n* // returns true\n*\n* bool = endsWith( str, 'fair' );\n* // returns false\n*\n* bool = endsWith( str, 'fair', 30 );\n* // returns true\n*\n* bool = endsWith( str, 'fair', -34 );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from './../../is-integer' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isInteger } from './../../is-integer' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative integer.\n*\n* @module @stdlib/assert/is-nonnegative-integer\n*\n* @example\n* import isNonNegativeInteger from '@stdlib/assert/is-nonnegative-integer' ;\n*\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* bool = isNonNegativeInteger( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer' ;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer' ;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math/base/assert/is-integer' ;\nimport MAX_LENGTH from '@stdlib/constants/array/max-typed-array-length' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a collection\n*\n* @example\n* var bool = isCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isCollection( {} );\n* // returns false\n*/\nfunction isCollection( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a typed array.\n*\n* @module @stdlib/constants/array/max-typed-array-length\n*\n* @example\n* import MAX_TYPED_ARRAY_LENGTH from '@stdlib/constants/array/max-typed-array-length' ;\n* // returns 9007199254740991\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a typed array.\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n*/\nvar MAX_TYPED_ARRAY_LENGTH = 9007199254740991;\n\n\n// EXPORTS //\n\nexport default MAX_TYPED_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum Unicode code point.\n*\n* @module @stdlib/constants/unicode/max\n* @type {integer32}\n*\n* @example\n* import UNICODE_MAX from '@stdlib/constants/unicode/max' ;\n* // returns 1114111\n*/\n\n\n// MAIN //\n\n/**\n* Maximum Unicode code point.\n*\n* @constant\n* @type {integer32}\n* @default 1114111\n* @see [Unicode]{@link https://en.wikipedia.org/wiki/Unicode}\n*/\nvar UNICODE_MAX = 0x10FFFF|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default UNICODE_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum Unicode code point in the Basic Multilingual Plane (BMP).\n*\n* @module @stdlib/constants/unicode/max-bmp\n* @type {integer32}\n*\n* @example\n* import UNICODE_MAX_BMP from '@stdlib/constants/unicode/max-bmp' ;\n* // returns 65535\n*/\n\n\n// MAIN //\n\n/**\n* Maximum Unicode code point in the Basic Multilingual Plane (BMP).\n*\n* @constant\n* @type {integer32}\n* @default 65535\n* @see [Unicode]{@link https://en.wikipedia.org/wiki/Unicode}\n*/\nvar UNICODE_MAX_BMP = 0xFFFF|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default UNICODE_MAX_BMP;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar format = require( './../../format' );\nvar UNICODE_MAX = require( '@stdlib/constants/unicode/max' );\nvar UNICODE_MAX_BMP = require( '@stdlib/constants/unicode/max-bmp' );\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\n\n// Factor to rescale a code point from a supplementary plane:\nvar Ox10000 = 0x10000|0; // 65536\n\n// Factor added to obtain a high surrogate:\nvar OxD800 = 0xD800|0; // 55296\n\n// Factor added to obtain a low surrogate:\nvar OxDC00 = 0xDC00|0; // 56320\n\n// 10-bit mask: 2^10-1 = 1023 => 0x3ff => 00000000 00000000 00000011 11111111\nvar Ox3FF = 1023|0;\n\n\n// MAIN //\n\n/**\n* Creates a string from a sequence of Unicode code points.\n*\n* ## Notes\n*\n* -   UTF-16 encoding uses one 16-bit unit for non-surrogates (U+0000 to U+D7FF and U+E000 to U+FFFF).\n* -   UTF-16 encoding uses two 16-bit units (surrogate pairs) for U+10000 to U+10FFFF and encodes U+10000-U+10FFFF by subtracting 0x10000 from the code point, expressing the result as a 20-bit binary, and splitting the 20 bits of 0x0-0xFFFFF as upper and lower 10-bits. The respective 10-bits are stored in two 16-bit words: a high and a low surrogate.\n*\n*\n* @param {...NonNegativeInteger} args - sequence of code points\n* @throws {Error} must provide either an array-like object of code points or one or more code points as separate arguments\n* @throws {TypeError} a code point must be a nonnegative integer\n* @throws {RangeError} must provide a valid Unicode code point\n* @returns {string} created string\n*\n* @example\n* var str = fromCodePoint( 9731 );\n* // returns '☃'\n*/\nfunction fromCodePoint( args ) {\n\tvar len;\n\tvar str;\n\tvar arr;\n\tvar low;\n\tvar hi;\n\tvar pt;\n\tvar i;\n\n\tlen = arguments.length;\n\tif ( len === 1 && isCollection( args ) ) {\n\t\tarr = arguments[ 0 ];\n\t\tlen = arr.length;\n\t} else {\n\t\tarr = [];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tarr.push( arguments[ i ] );\n\t\t}\n\t}\n\tif ( len === 0 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide either an array of code points or one or more code points as separate arguments.' );\n\t}\n\tstr = '';\n\tfor ( i = 0; i < len; i++ ) {\n\t\tpt = arr[ i ];\n\t\tif ( !isNonNegativeInteger( pt ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide valid code points (i.e., nonnegative integers). Value: `%s`.', pt ) );\n\t\t}\n\t\tif ( pt > UNICODE_MAX ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Must provide a valid code point (i.e., cannot exceed %u). Value: `%s`.', UNICODE_MAX, pt ) );\n\t\t}\n\t\tif ( pt <= UNICODE_MAX_BMP ) {\n\t\t\tstr += fromCharCode( pt );\n\t\t} else {\n\t\t\t// Code point from a supplementary plane. Split into two 16-bit code units (surrogate pair).\n\t\t\tpt -= Ox10000;\n\t\t\thi = (pt >> 10) + OxD800;\n\t\t\tlow = (pt & Ox3FF) + OxDC00;\n\t\t\tstr += fromCharCode( hi, low );\n\t\t}\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromCodePoint;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a string from a sequence of Unicode code points.\n*\n* @module @stdlib/string/from-code-point\n*\n* @example\n* var fromCodePoint = require( '@stdlib/string/from-code-point' );\n*\n* var str = fromCodePoint( 9731 );\n* // returns '☃'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/kebabcase' );\n\n\n// MAIN //\n\n/**\n* Converts a string to kebab case.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} kebab-cased string\n*\n* @example\n* var str = kebabCase( 'Hello World!' );\n* // returns 'hello-world'\n*\n* @example\n* var str = kebabCase( 'foo bar' );\n* // returns 'foo-bar'\n*\n* @example\n* var str = kebabCase( 'I am a tiny little teapot' );\n* // returns 'i-am-a-tiny-little-teapot'\n*\n* @example\n* var str = kebabCase( 'BEEP boop' );\n* // returns 'beep-boop'\n*\n* @example\n* var str = kebabCase( 'isMobile' );\n* // returns 'is-mobile'\n*/\nfunction kebabCase( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = kebabCase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to kebab case.\n*\n* @module @stdlib/string/kebabcase\n*\n* @example\n* var kebabcase = require( '@stdlib/string/kebabcase' );\n*\n* var str = kebabcase( 'Foo Bar' );\n* // returns 'foo-bar'\n*\n* str = kebabcase( 'I am a tiny little house' );\n* // returns 'i-am-a-tiny-little-house'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum safe double-precision floating-point integer.\n*\n* @module @stdlib/constants/float64/max-safe-integer\n* @type {number}\n*\n* @example\n* import FLOAT64_MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer' ;\n* // returns 9007199254740991\n*/\n\n\n// MAIN //\n\n/**\n* Maximum safe double-precision floating-point integer.\n*\n* ## Notes\n*\n* The integer has the value\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n* @see [Safe Integers]{@link http://www.2ality.com/2013/10/safe-integers.html}\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_SAFE_INTEGER = 9007199254740991;\n\n\n// EXPORTS //\n\nexport default FLOAT64_MAX_SAFE_INTEGER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar FLOAT64_MAX_SAFE_INTEGER = require( '@stdlib/constants/float64/max-safe-integer' );\nvar base = require( './../../base/left-pad' );\n\n\n// MAIN //\n\n/**\n* Left pads a string such that the padded string has a length of at least `len`.\n*\n* @param {string} str - string to pad\n* @param {NonNegativeInteger} len - minimum string length\n* @param {string} [pad=' '] - string used to pad\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a string\n* @throws {RangeError} padding must have a length greater than `0`\n* @returns {string} padded string\n*\n* @example\n* var str = lpad( 'a', 5 );\n* // returns '    a'\n*\n* @example\n* var str = lpad( 'beep', 10, 'b' );\n* // returns 'bbbbbbbeep'\n*\n* @example\n* var str = lpad( 'boop', 12, 'beep' );\n* // returns 'beepbeepboop'\n*/\nfunction lpad( str, len, pad ) {\n\tvar p;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', len ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tp = pad;\n\t\tif ( !isString( p ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a string. Value: `%s`.', p ) );\n\t\t}\n\t\tif ( p.length === 0 ) {\n\t\t\tthrow new RangeError( 'invalid argument. Third argument must not be an empty string.' );\n\t\t}\n\t} else {\n\t\tp = ' ';\n\t}\n\tif ( len > FLOAT64_MAX_SAFE_INTEGER ) {\n\t\tthrow new RangeError( format( 'invalid argument. Output string length exceeds maximum allowed string length. Value: `%u`.', len ) );\n\t}\n\treturn base( str, len, p );\n}\n\n\n// EXPORTS //\n\nmodule.exports = lpad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Left pad a string such that the padded string has a length of at least `len`.\n*\n* @module @stdlib/string/left-pad\n*\n* @example\n* var lpad = require( '@stdlib/string/left-pad' );\n*\n* var str = lpad( 'a', 5 );\n* // returns '    a'\n*\n* str = lpad( 'beep', 10, 'b' );\n* // returns 'bbbbbbbeep'\n*\n* str = lpad( 'boop', 12, 'beep' );\n* // returns 'beepbeepboop'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/left-trim' );\n\n\n// MAIN //\n\n/**\n* Trims whitespace characters from the beginning of a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string\n* @returns {string} trimmed string\n*\n* @example\n* var out = ltrim( '   Whitespace   ' );\n* // returns 'Whitespace   '\n*\n* @example\n* var out = ltrim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs\\t\\t\\t'\n*\n* @example\n* var out = ltrim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines\\n\\n\\n'\n*/\nfunction ltrim( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ltrim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Trim whitespace characters from the beginning of a string.\n*\n* @module @stdlib/string/left-trim\n*\n* @example\n* var ltrim = require( '@stdlib/string/left-trim' );\n*\n* var out = ltrim( '   Whitespace   ' );\n* // returns 'Whitespace   '\n*\n* out = ltrim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs\\t\\t\\t'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from './../../is-string' ;\nimport { isPrimitive as isNonNegativeInteger } from './../../is-nonnegative-integer' ;\nimport format from '@stdlib/string/format' ;\n\n\n// VARIABLES //\n\n// Range for a high surrogate\nvar OxD800 = 0xD800|0; // 55296\nvar OxDBFF = 0xDBFF|0; // 56319\n\n// Range for a low surrogate\nvar OxDC00 = 0xDC00|0; // 56320\nvar OxDFFF = 0xDFFF|0; // 57343\n\n\n// MAIN //\n\n/**\n* Tests if a position in a string marks the start of a UTF-16 surrogate pair.\n*\n* @private\n* @param {string} str - input string\n* @param {NonNegativeInteger} pos - position in string\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {RangeError} position must be a valid index in string\n* @returns {boolean} boolean indicating whether the string has a surrogate pair at a position\n*\n* @example\n* var out = hasUTF16SurrogatePairAt( '🌷', 0 );\n* // returns true\n*\n* @example\n* var out = hasUTF16SurrogatePairAt( '🌷', 1 );\n* // returns false\n*/\nfunction hasUTF16SurrogatePairAt( str, pos ) {\n\tvar ch1;\n\tvar ch2;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( pos ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a valid position (i.e., a nonnegative integer). Value: `%s`.', pos ) );\n\t}\n\tif ( pos >= str.length ) {\n\t\tthrow new RangeError( format( 'invalid argument. Must provide a valid position (i.e., within string bounds). Value: `%u`.', pos ) );\n\t}\n\tch1 = str.charCodeAt( pos );\n\tch2 = str.charCodeAt( pos + 1 );\n\treturn ch1 >= OxD800 && ch1 <= OxDBFF && ch2 >= OxDC00 && ch2 <= OxDFFF;\n}\n\n\n// EXPORTS //\n\nexport default hasUTF16SurrogatePairAt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar consts = {\n\t'CR': 0,\n\t'LF': 1,\n\t'Control': 2,\n\t'Extend': 3,\n\t'RegionalIndicator': 4,\n\t'SpacingMark': 5,\n\t'L': 6,\n\t'V': 7,\n\t'T': 8,\n\t'LV': 9,\n\t'LVT': 10,\n\t'Other': 11,\n\t'Prepend': 12,\n\t'ZWJ': 13,\n\t'NotBreak': 0,\n\t'BreakStart': 1,\n\t'Break': 2,\n\t'BreakLastRegional': 3,\n\t'BreakPenultimateRegional': 4,\n\t'ExtendedPictographic': 101\n};\n\n\n// EXPORTS //\n\nmodule.exports = consts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constants = require( './constants.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Returns number of elements in array equal to a provided value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} start - starting search index (inclusive)\n* @param {NonNegativeInteger} end - ending search index (inclusive)\n* @param {*} value - input value\n* @returns {NonNegativeInteger} number of elements in array equal to a provided value\n*/\nfunction count( arr, start, end, value ) {\n\tvar cnt;\n\tvar i;\n\n\tif ( end >= arr.length ) {\n\t\tend = arr.length - 1;\n\t}\n\tcnt = 0;\n\tfor ( i = start; i <= end; i++ ) {\n\t\tif ( arr[ i ] === value ) {\n\t\t\tcnt += 1;\n\t\t}\n\t}\n\treturn cnt;\n}\n\n/**\n* Returns whether every indexed array element is equal to a provided value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} start - starting search index (inclusive)\n* @param {NonNegativeInteger} end - ending search index (inclusive)\n* @param {*} value - search value\n* @returns {boolean} boolean indicating whether all the values in array in the given range are equal to the provided value\n*/\nfunction every( arr, start, end, value ) {\n\tvar i;\n\n\tif ( end >= arr.length ) {\n\t\tend = arr.length - 1;\n\t}\n\tfor ( i = start; i <= end; i++ ) {\n\t\tif ( arr[ i ] !== value ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n* Returns the index of the first occurrence of a value in a provided array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} start - starting search index (inclusive)\n* @param {NonNegativeInteger} end - ending search index (inclusive)\n* @param {*} value - search value\n* @returns {integer} index of the first occurrence\n*/\nfunction indexOf( arr, start, end, value ) {\n\tvar i;\n\n\tif ( end >= arr.length ) {\n\t\tend = arr.length - 1;\n\t}\n\tfor ( i = start; i <= end; i++ ) {\n\t\tif ( arr[ i ] === value ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n* Returns the index of the last occurrence of a value in a provided array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} start - starting search index at which to start searching backwards (inclusive)\n* @param {NonNegativeInteger} end - ending search index (inclusive)\n* @param {*} value - search value\n* @returns {integer} index of the last occurrence\n*/\nfunction lastIndexOf( arr, start, end, value ) {\n\tvar i;\n\n\tif ( start >= arr.length-1 ) {\n\t\tstart = arr.length - 1;\n\t}\n\tfor ( i = start; i >= end; i-- ) {\n\t\tif ( arr[ i ] === value ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// MAIN //\n\n/**\n* Returns the break type between grapheme breaking classes according to _UAX #29 3.1.1 Grapheme Cluster Boundary Rules_ on extended grapheme clusters.\n*\n* @private\n* @param {Array} breaks - list of grapheme break properties\n* @param {Array} emoji - list of emoji properties\n* @returns {NonNegativeInteger} break type\n*\n* @example\n* var out = breakType( [ 11, 3, 11 ], [ 11, 11, 11 ] );\n* // returns 1\n*/\nfunction breakType( breaks, emoji ) {\n\tvar nextEmoji;\n\tvar next;\n\tvar prev;\n\tvar idx;\n\tvar N;\n\tvar M;\n\n\tN = breaks.length;\n\tM = N - 1;\n\n\tprev = breaks[ M-1 ];\n\tnext = breaks[ M ];\n\tnextEmoji = emoji[ M ];\n\n\tidx = lastIndexOf( breaks, M, 0, constants.RegionalIndicator );\n\tif (\n\t\tidx > 0 &&\n\t\tprev !== constants.Prepend &&\n\t\tprev !== constants.RegionalIndicator &&\n\t\tevery( breaks, 1, idx-1, constants.RegionalIndicator )\n\t) {\n\t\tif ( count( breaks, 0, M, constants.RegionalIndicator ) % 2 === 1 ) {\n\t\t\treturn constants.BreakLastRegional;\n\t\t}\n\t\treturn constants.BreakPenultimateRegional;\n\t}\n\t// GB3: CR × LF\n\tif (\n\t\tprev === constants.CR &&\n\t\tnext === constants.LF\n\t) {\n\t\treturn constants.NotBreak;\n\t}\n\t// GB4: (Control|CR|LF) ÷\n\tif (\n\t\tprev === constants.Control ||\n\t\tprev === constants.CR ||\n\t\tprev === constants.LF\n\t) {\n\t\treturn constants.BreakStart;\n\t}\n\t// GB5: ÷ (Control|CR|LF)\n\tif (\n\t\tnext === constants.Control ||\n\t\tnext === constants.CR ||\n\t\tnext === constants.LF\n\t) {\n\t\treturn constants.BreakStart;\n\t}\n\t// GB6: L × (L|V|LV|LVT)\n\tif (\n\t\tprev === constants.L &&\n\t\t(\n\t\t\tnext === constants.L ||\n\t\t\tnext === constants.V ||\n\t\t\tnext === constants.LV ||\n\t\t\tnext === constants.LVT\n\t\t)\n\t) {\n\t\treturn constants.NotBreak;\n\t}\n\t// GB7: (LV|V) × (V|T)\n\tif (\n\t\t( prev === constants.LV || prev === constants.V ) &&\n\t\t( next === constants.V || next === constants.T )\n\t) {\n\t\treturn constants.NotBreak;\n\t}\n\t// GB8: (LVT|T) × (T)\n\tif (\n\t\t( prev === constants.LVT || prev === constants.T ) &&\n\t\tnext === constants.T\n\t) {\n\t\treturn constants.NotBreak;\n\t}\n\t// GB9: × (Extend|ZWJ)\n\tif (\n\t\tnext === constants.Extend ||\n\t\tnext === constants.ZWJ\n\t) {\n\t\treturn constants.NotBreak;\n\t}\n\t// GB9a: × SpacingMark\n\tif ( next === constants.SpacingMark ) {\n\t\treturn constants.NotBreak;\n\t}\n\t// GB9b: Prepend ×\n\tif ( prev === constants.Prepend ) {\n\t\treturn constants.NotBreak;\n\t}\n\t// GB11: \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tidx = lastIndexOf( emoji, M-1, 0, constants.ExtendedPictographic );\n\tif (\n\t\tidx >= 0 &&\n\t\tprev === constants.ZWJ &&\n\t\tnextEmoji === constants.ExtendedPictographic &&\n\t\temoji[ idx ] === constants.ExtendedPictographic &&\n\t\tevery( breaks, idx+1, M-2, constants.Extend )\n\t) {\n\t\treturn constants.NotBreak;\n\t}\n\t// GB12: ^ (RI RI)* RI × RI\n\t// GB13: [^RI] (RI RI)* RI × RI\n\tif ( indexOf( breaks, 1, M-1, constants.RegionalIndicator ) >= 0 ) {\n\t\treturn constants.Break;\n\t}\n\tif (\n\t\tprev === constants.RegionalIndicator &&\n\t\tnext === constants.RegionalIndicator\n\t) {\n\t\treturn constants.NotBreak;\n\t}\n\t// GB999: Any ? Any\n\treturn constants.BreakStart;\n}\n\n\n// EXPORTS //\n\nmodule.exports = breakType;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constants = require( './constants.js' );\n\n\n// MAIN //\n\n/**\n* Returns the emoji property from the [Unicode Standard][1].\n*\n* [1]: https://www.unicode.org/Public/13.0.0/ucd/emoji/emoji-data.txt\n*\n* @private\n* @param {NonNegativeInteger} code - Unicode code point\n* @returns {NonNegativeInteger} emoji property\n*\n* @example\n* var out = emojiProperty( 0x23EC );\n* // returns 101\n*\n* @example\n* var out = emojiProperty( 0x1FFFE );\n* // returns 11\n*/\nfunction emojiProperty( code ) {\n\tif (\n\t\tcode === 0x00A9 || // E0.6   [1] (©️)       copyright\n\t\tcode === 0x00AE || // E0.6   [1] (®️)       registered\n\t\tcode === 0x203C || // E0.6   [1] (‼️)       double exclamation mark\n\t\tcode === 0x2049 || // E0.6   [1] (⁉️)       exclamation question mark\n\t\tcode === 0x2122 || // E0.6   [1] (™️)       trade mark\n\t\tcode === 0x2139 || // E0.6   [1] (ℹ️)       information\n\t\t( 0x2194 <= code && code <= 0x2199 ) || // E0.6   [6] (↔️..↙️)    left-right arrow..down-left arrow\n\t\t( 0x21A9 <= code && code <= 0x21AA ) || // E0.6   [2] (↩️..↪️)    right arrow curving left..left arrow curving right\n\t\t( 0x231A <= code && code <= 0x231B ) || // E0.6   [2] (⌚..⌛)    watch..hourglass done\n\t\tcode === 0x2328 || // E1.0   [1] (⌨️)       keyboard\n\t\tcode === 0x2388 || // E0.0   [1] (⎈)       HELM SYMBOL\n\t\tcode === 0x23CF || // E1.0   [1] (⏏️)       eject button\n\t\t( 0x23E9 <= code && code <= 0x23EC ) || // E0.6   [4] (⏩..⏬)    fast-forward button..fast down button\n\t\t( 0x23ED <= code && code <= 0x23EE ) || // E0.7   [2] (⏭️..⏮️)    next track button..last track button\n\t\tcode === 0x23EF || // E1.0   [1] (⏯️)       play or pause button\n\t\tcode === 0x23F0 || // E0.6   [1] (⏰)       alarm clock\n\t\t( 0x23F1 <= code && code <= 0x23F2 ) || // E1.0   [2] (⏱️..⏲️)    stopwatch..timer clock\n\t\tcode === 0x23F3 || // E0.6   [1] (⏳)       hourglass not done\n\t\t( 0x23F8 <= code && code <= 0x23FA ) || // E0.7   [3] (⏸️..⏺️)    pause button..record button\n\t\tcode === 0x24C2 || // E0.6   [1] (Ⓜ️)       circled M\n\t\t( 0x25AA <= code && code <= 0x25AB ) || // E0.6   [2] (▪️..▫️)    black small square..white small square\n\t\tcode === 0x25B6 || // E0.6   [1] (▶️)       play button\n\t\tcode === 0x25C0 || // E0.6   [1] (◀️)       reverse button\n\t\t( 0x25FB <= code && code <= 0x25FE ) || // E0.6   [4] (◻️..◾)    white medium square..black medium-small square\n\t\t( 0x2600 <= code && code <= 0x2601 ) || // E0.6   [2] (☀️..☁️)    sun..cloud\n\t\t( 0x2602 <= code && code <= 0x2603 ) || // E0.7   [2] (☂️..☃️)    umbrella..snowman\n\t\tcode === 0x2604 || // E1.0   [1] (☄️)       comet\n\t\tcode === 0x2605 || // E0.0   [1] (★)       BLACK STAR\n\t\t( 0x2607 <= code && code <= 0x260D ) || // E0.0   [7] (☇..☍)    LIGHTNING..OPPOSITION\n\t\tcode === 0x260E || // E0.6   [1] (☎️)       telephone\n\t\t( 0x260F <= code && code <= 0x2610 ) || // E0.0   [2] (☏..☐)    WHITE TELEPHONE..BALLOT BOX\n\t\tcode === 0x2611 || // E0.6   [1] (☑️)       check box with check\n\t\tcode === 0x2612 || // E0.0   [1] (☒)       BALLOT BOX WITH X\n\t\t( 0x2614 <= code && code <= 0x2615 ) || // E0.6   [2] (☔..☕)    umbrella with rain drops..hot beverage\n\t\t( 0x2616 <= code && code <= 0x2617 ) || // E0.0   [2] (☖..☗)    WHITE SHOGI PIECE..BLACK SHOGI PIECE\n\t\tcode === 0x2618 || // E1.0   [1] (☘️)       shamrock\n\t\t( 0x2619 <= code && code <= 0x261C ) || // E0.0   [4] (☙..☜)    REVERSED ROTATED FLORAL HEART BULLET..WHITE LEFT POINTING INDEX\n\t\tcode === 0x261D || // E0.6   [1] (☝️)       index pointing up\n\t\t( 0x261E <= code && code <= 0x261F ) || // E0.0   [2] (☞..☟)    WHITE RIGHT POINTING INDEX..WHITE DOWN POINTING INDEX\n\t\tcode === 0x2620 || // E1.0   [1] (☠️)       skull and crossbones\n\t\tcode === 0x2621 || // E0.0   [1] (☡)       CAUTION SIGN\n\t\t( 0x2622 <= code && code <= 0x2623 ) || // E1.0   [2] (☢️..☣️)    radioactive..biohazard\n\t\t( 0x2624 <= code && code <= 0x2625 ) || // E0.0   [2] (☤..☥)    CADUCEUS..ANKH\n\t\tcode === 0x2626 || // E1.0   [1] (☦️)       orthodox cross\n\t\t( 0x2627 <= code && code <= 0x2629 ) || // E0.0   [3] (☧..☩)    CHI RHO..CROSS OF JERUSALEM\n\t\tcode === 0x262A || // E0.7   [1] (☪️)       star and crescent\n\t\t( 0x262B <= code && code <= 0x262D ) || // E0.0   [3] (☫..☭)    FARSI SYMBOL..HAMMER AND SICKLE\n\t\tcode === 0x262E || // E1.0   [1] (☮️)       peace symbol\n\t\tcode === 0x262F || // E0.7   [1] (☯️)       yin yang\n\t\t( 0x2630 <= code && code <= 0x2637 ) || // E0.0   [8] (☰..☷)    TRIGRAM FOR HEAVEN..TRIGRAM FOR EARTH\n\t\t( 0x2638 <= code && code <= 0x2639 ) || // E0.7   [2] (☸️..☹️)    wheel of dharma..frowning face\n\t\tcode === 0x263A || // E0.6   [1] (☺️)       smiling face\n\t\t( 0x263B <= code && code <= 0x263F ) || // E0.0   [5] (☻..☿)    BLACK SMILING FACE..MERCURY\n\t\tcode === 0x2640 || // E4.0   [1] (♀️)       female sign\n\t\tcode === 0x2641 || // E0.0   [1] (♁)       EARTH\n\t\tcode === 0x2642 || // E4.0   [1] (♂️)       male sign\n\t\t( 0x2643 <= code && code <= 0x2647 ) || // E0.0   [5] (♃..♇)    JUPITER..PLUTO\n\t\t( 0x2648 <= code && code <= 0x2653 ) || // E0.6  [12] (♈..♓)    Aries..Pisces\n\t\t( 0x2654 <= code && code <= 0x265E ) || // E0.0  [11] (♔..♞)    WHITE CHESS KING..BLACK CHESS KNIGHT\n\t\tcode === 0x265F || // E11.0  [1] (♟️)       chess pawn\n\t\tcode === 0x2660 || // E0.6   [1] (♠️)       spade suit\n\t\t( 0x2661 <= code && code <= 0x2662 ) || // E0.0   [2] (♡..♢)    WHITE HEART SUIT..WHITE DIAMOND SUIT\n\t\tcode === 0x2663 || // E0.6   [1] (♣️)       club suit\n\t\tcode === 0x2664 || // E0.0   [1] (♤)       WHITE SPADE SUIT\n\t\t( 0x2665 <= code && code <= 0x2666 ) || // E0.6   [2] (♥️..♦️)    heart suit..diamond suit\n\t\tcode === 0x2667 || // E0.0   [1] (♧)       WHITE CLUB SUIT\n\t\tcode === 0x2668 || // E0.6   [1] (♨️)       hot springs\n\t\t( 0x2669 <= code && code <= 0x267A ) || // E0.0  [18] (♩..♺)    QUARTER NOTE..RECYCLING SYMBOL FOR GENERIC MATERIALS\n\t\tcode === 0x267B || // E0.6   [1] (♻️)       recycling symbol\n\t\t( 0x267C <= code && code <= 0x267D ) || // E0.0   [2] (♼..♽)    RECYCLED PAPER SYMBOL..PARTIALLY-RECYCLED PAPER SYMBOL\n\t\tcode === 0x267E || // E11.0  [1] (♾️)       infinity\n\t\tcode === 0x267F || // E0.6   [1] (♿)       wheelchair symbol\n\t\t( 0x2680 <= code && code <= 0x2685 ) || // E0.0   [6] (⚀..⚅)    DIE FACE-1..DIE FACE-6\n\t\t( 0x2690 <= code && code <= 0x2691 ) || // E0.0   [2] (⚐..⚑)    WHITE FLAG..BLACK FLAG\n\t\tcode === 0x2692 || // E1.0   [1] (⚒️)       hammer and pick\n\t\tcode === 0x2693 || // E0.6   [1] (⚓)       anchor\n\t\tcode === 0x2694 || // E1.0   [1] (⚔️)       crossed swords\n\t\tcode === 0x2695 || // E4.0   [1] (⚕️)       medical symbol\n\t\t( 0x2696 <= code && code <= 0x2697 ) || // E1.0   [2] (⚖️..⚗️)    balance scale..alembic\n\t\tcode === 0x2698 || // E0.0   [1] (⚘)       FLOWER\n\t\tcode === 0x2699 || // E1.0   [1] (⚙️)       gear\n\t\tcode === 0x269A || // E0.0   [1] (⚚)       STAFF OF HERMES\n\t\t( 0x269B <= code && code <= 0x269C ) || // E1.0   [2] (⚛️..⚜️)    atom symbol..fleur-de-lis\n\t\t( 0x269D <= code && code <= 0x269F ) || // E0.0   [3] (⚝..⚟)    OUTLINED WHITE STAR..THREE LINES CONVERGING LEFT\n\t\t( 0x26A0 <= code && code <= 0x26A1 ) || // E0.6   [2] (⚠️..⚡)    warning..high voltage\n\t\t( 0x26A2 <= code && code <= 0x26A6 ) || // E0.0   [5] (⚢..⚦)    DOUBLED FEMALE SIGN..MALE WITH STROKE SIGN\n\t\tcode === 0x26A7 || // E13.0  [1] (⚧️)       transgender symbol\n\t\t( 0x26A8 <= code && code <= 0x26A9 ) || // E0.0   [2] (⚨..⚩)    VERTICAL MALE WITH STROKE SIGN..HORIZONTAL MALE WITH STROKE SIGN\n\t\t( 0x26AA <= code && code <= 0x26AB ) || // E0.6   [2] (⚪..⚫)    white circle..black circle\n\t\t( 0x26AC <= code && code <= 0x26AF ) || // E0.0   [4] (⚬..⚯)    MEDIUM SMALL WHITE CIRCLE..UNMARRIED PARTNERSHIP SYMBOL\n\t\t( 0x26B0 <= code && code <= 0x26B1 ) || // E1.0   [2] (⚰️..⚱️)    coffin..funeral urn\n\t\t( 0x26B2 <= code && code <= 0x26BC ) || // E0.0  [11] (⚲..⚼)    NEUTER..SESQUIQUADRATE\n\t\t( 0x26BD <= code && code <= 0x26BE ) || // E0.6   [2] (⚽..⚾)    soccer ball..baseball\n\t\t( 0x26BF <= code && code <= 0x26C3 ) || // E0.0   [5] (⚿..⛃)    SQUARED KEY..BLACK DRAUGHTS KING\n\t\t( 0x26C4 <= code && code <= 0x26C5 ) || // E0.6   [2] (⛄..⛅)    snowman without snow..sun behind cloud\n\t\t( 0x26C6 <= code && code <= 0x26C7 ) || // E0.0   [2] (⛆..⛇)    RAIN..BLACK SNOWMAN\n\t\tcode === 0x26C8 || // E0.7   [1] (⛈️)       cloud with lightning and rain\n\t\t( 0x26C9 <= code && code <= 0x26CD ) || // E0.0   [5] (⛉..⛍)    TURNED WHITE SHOGI PIECE..DISABLED CAR\n\t\tcode === 0x26CE || // E0.6   [1] (⛎)       Ophiuchus\n\t\tcode === 0x26CF || // E0.7   [1] (⛏️)       pick\n\t\tcode === 0x26D0 || // E0.0   [1] (⛐)       CAR SLIDING\n\t\tcode === 0x26D1 || // E0.7   [1] (⛑️)       rescue worker’s helmet\n\t\tcode === 0x26D2 || // E0.0   [1] (⛒)       CIRCLED CROSSING LANES\n\t\tcode === 0x26D3 || // E0.7   [1] (⛓️)       chains\n\t\tcode === 0x26D4 || // E0.6   [1] (⛔)       no entry\n\t\t( 0x26D5 <= code && code <= 0x26E8 ) || // E0.0  [20] (⛕..⛨)    ALTERNATE ONE-WAY LEFT WAY TRAFFIC..BLACK CROSS ON SHIELD\n\t\tcode === 0x26E9 || // E0.7   [1] (⛩️)       shinto shrine\n\t\tcode === 0x26EA || // E0.6   [1] (⛪)       church\n\t\t( 0x26EB <= code && code <= 0x26EF ) || // E0.0   [5] (⛫..⛯)    CASTLE..MAP SYMBOL FOR LIGHTHOUSE\n\t\t( 0x26F0 <= code && code <= 0x26F1 ) || // E0.7   [2] (⛰️..⛱️)    mountain..umbrella on ground\n\t\t( 0x26F2 <= code && code <= 0x26F3 ) || // E0.6   [2] (⛲..⛳)    fountain..flag in hole\n\t\tcode === 0x26F4 || // E0.7   [1] (⛴️)       ferry\n\t\tcode === 0x26F5 || // E0.6   [1] (⛵)       sailboat\n\t\tcode === 0x26F6 || // E0.0   [1] (⛶)       SQUARE FOUR CORNERS\n\t\t( 0x26F7 <= code && code <= 0x26F9 ) || // E0.7   [3] (⛷️..⛹️)    skier..person bouncing ball\n\t\tcode === 0x26FA || // E0.6   [1] (⛺)       tent\n\t\t( 0x26FB <= code && code <= 0x26FC ) || // E0.0   [2] (⛻..⛼)    JAPANESE BANK SYMBOL..HEADSTONE GRAVEYARD SYMBOL\n\t\tcode === 0x26FD || // E0.6   [1] (⛽)       fuel pump\n\t\t( 0x26FE <= code && code <= 0x2701 ) || // E0.0   [4] (⛾..✁)    CUP ON BLACK SQUARE..UPPER BLADE SCISSORS\n\t\tcode === 0x2702 || // E0.6   [1] (✂️)       scissors\n\t\t( 0x2703 <= code && code <= 0x2704 ) || // E0.0   [2] (✃..✄)    LOWER BLADE SCISSORS..WHITE SCISSORS\n\t\tcode === 0x2705 || // E0.6   [1] (✅)       check mark button\n\t\t( 0x2708 <= code && code <= 0x270C ) || // E0.6   [5] (✈️..✌️)    airplane..victory hand\n\t\tcode === 0x270D || // E0.7   [1] (✍️)       writing hand\n\t\tcode === 0x270E || // E0.0   [1] (✎)       LOWER RIGHT PENCIL\n\t\tcode === 0x270F || // E0.6   [1] (✏️)       pencil\n\t\t( 0x2710 <= code && code <= 0x2711 ) || // E0.0   [2] (✐..✑)    UPPER RIGHT PENCIL..WHITE NIB\n\t\tcode === 0x2712 || // E0.6   [1] (✒️)       black nib\n\t\tcode === 0x2714 || // E0.6   [1] (✔️)       check mark\n\t\tcode === 0x2716 || // E0.6   [1] (✖️)       multiply\n\t\tcode === 0x271D || // E0.7   [1] (✝️)       latin cross\n\t\tcode === 0x2721 || // E0.7   [1] (✡️)       star of David\n\t\tcode === 0x2728 || // E0.6   [1] (✨)       sparkles\n\t\t( 0x2733 <= code && code <= 0x2734 ) || // E0.6   [2] (✳️..✴️)    eight-spoked asterisk..eight-pointed star\n\t\tcode === 0x2744 || // E0.6   [1] (❄️)       snowflake\n\t\tcode === 0x2747 || // E0.6   [1] (❇️)       sparkle\n\t\tcode === 0x274C || // E0.6   [1] (❌)       cross mark\n\t\tcode === 0x274E || // E0.6   [1] (❎)       cross mark button\n\t\t( 0x2753 <= code && code <= 0x2755 ) || // E0.6   [3] (❓..❕)    question mark..white exclamation mark\n\t\tcode === 0x2757 || // E0.6   [1] (❗)       exclamation mark\n\t\tcode === 0x2763 || // E1.0   [1] (❣️)       heart exclamation\n\t\tcode === 0x2764 || // E0.6   [1] (❤️)       red heart\n\t\t( 0x2765 <= code && code <= 0x2767 ) || // E0.0   [3] (❥..❧)    ROTATED HEAVY BLACK HEART BULLET..ROTATED FLORAL HEART BULLET\n\t\t( 0x2795 <= code && code <= 0x2797 ) || // E0.6   [3] (➕..➗)    plus..divide\n\t\tcode === 0x27A1 || // E0.6   [1] (➡️)       right arrow\n\t\tcode === 0x27B0 || // E0.6   [1] (➰)       curly loop\n\t\tcode === 0x27BF || // E1.0   [1] (➿)       double curly loop\n\t\t( 0x2934 <= code && code <= 0x2935 ) || // E0.6   [2] (⤴️..⤵️)    right arrow curving up..right arrow curving down\n\t\t( 0x2B05 <= code && code <= 0x2B07 ) || // E0.6   [3] (⬅️..⬇️)    left arrow..down arrow\n\t\t( 0x2B1B <= code && code <= 0x2B1C ) || // E0.6   [2] (⬛..⬜)    black large square..white large square\n\t\tcode === 0x2B50 || // E0.6   [1] (⭐)       star\n\t\tcode === 0x2B55 || // E0.6   [1] (⭕)       hollow red circle\n\t\tcode === 0x3030 || // E0.6   [1] (〰️)       wavy dash\n\t\tcode === 0x303D || // E0.6   [1] (〽️)       part alternation mark\n\t\tcode === 0x3297 || // E0.6   [1] (㊗️)       Japanese “congratulations” button\n\t\tcode === 0x3299 || // E0.6   [1] (㊙️)       Japanese “secret” button\n\t\t( 0x1F000 <= code && code <= 0x1F003 ) || // E0.0   [4] (🀀..🀃)    MAHJONG TILE EAST WIND..MAHJONG TILE NORTH WIND\n\t\tcode === 0x1F004 || // E0.6   [1] (🀄)       mahjong red dragon\n\t\t( 0x1F005 <= code && code <= 0x1F0CE ) || // E0.0 [202] (🀅..🃎)    MAHJONG TILE GREEN DRAGON..PLAYING CARD KING OF DIAMONDS\n\t\tcode === 0x1F0CF || // E0.6   [1] (🃏)       joker\n\t\t( 0x1F0D0 <= code && code <= 0x1F0FF ) || // E0.0  [48] (🃐..🃿)    <reserved-1F0D0>..<reserved-1F0FF>\n\t\t( 0x1F10D <= code && code <= 0x1F10F ) || // E0.0   [3] (🄍..🄏)    CIRCLED ZERO WITH SLASH..CIRCLED DOLLAR SIGN WITH OVERLAID BACKSLASH\n\t\tcode === 0x1F12F || // E0.0   [1] (🄯)       COPYLEFT SYMBOL\n\t\t( 0x1F16C <= code && code <= 0x1F16F ) || // E0.0   [4] (🅬..🅯)    RAISED MR SIGN..CIRCLED HUMAN FIGURE\n\t\t( 0x1F170 <= code && code <= 0x1F171 ) || // E0.6   [2] (🅰️..🅱️)    A button (blood type)..B button (blood type)\n\t\t( 0x1F17E <= code && code <= 0x1F17F ) || // E0.6   [2] (🅾️..🅿️)    O button (blood type)..P button\n\t\tcode === 0x1F18E || // E0.6   [1] (🆎)       AB button (blood type)\n\t\t( 0x1F191 <= code && code <= 0x1F19A ) || // E0.6  [10] (🆑..🆚)    CL button..VS button\n\t\t( 0x1F1AD <= code && code <= 0x1F1E5 ) || // E0.0  [57] (🆭..🇥)    MASK WORK SYMBOL..<reserved-1F1E5>\n\t\t( 0x1F201 <= code && code <= 0x1F202 ) || // E0.6   [2] (🈁..🈂️)    Japanese “here” button..Japanese “service charge” button\n\t\t( 0x1F203 <= code && code <= 0x1F20F ) || // E0.0  [13] (🈃..🈏)    <reserved-1F203>..<reserved-1F20F>\n\t\tcode === 0x1F21A || // E0.6   [1] (🈚)       Japanese “free of charge” button\n\t\tcode === 0x1F22F || // E0.6   [1] (🈯)       Japanese “reserved” button\n\t\t( 0x1F232 <= code && code <= 0x1F23A ) || // E0.6   [9] (🈲..🈺)    Japanese “prohibited” button..Japanese “open for business” button\n\t\t( 0x1F23C <= code && code <= 0x1F23F ) || // E0.0   [4] (🈼..🈿)    <reserved-1F23C>..<reserved-1F23F>\n\t\t( 0x1F249 <= code && code <= 0x1F24F ) || // E0.0   [7] (🉉..🉏)    <reserved-1F249>..<reserved-1F24F>\n\t\t( 0x1F250 <= code && code <= 0x1F251 ) || // E0.6   [2] (🉐..🉑)    Japanese “bargain” button..Japanese “acceptable” button\n\t\t( 0x1F252 <= code && code <= 0x1F2FF ) || // E0.0 [174] (🉒..🋿)    <reserved-1F252>..<reserved-1F2FF>\n\t\t( 0x1F300 <= code && code <= 0x1F30C ) || // E0.6  [13] (🌀..🌌)    cyclone..milky way\n\t\t( 0x1F30D <= code && code <= 0x1F30E ) || // E0.7   [2] (🌍..🌎)    globe showing Europe-Africa..globe showing Americas\n\t\tcode === 0x1F30F || // E0.6   [1] (🌏)       globe showing Asia-Australia\n\t\tcode === 0x1F310 || // E1.0   [1] (🌐)       globe with meridians\n\t\tcode === 0x1F311 || // E0.6   [1] (🌑)       new moon\n\t\tcode === 0x1F312 || // E1.0   [1] (🌒)       waxing crescent moon\n\t\t( 0x1F313 <= code && code <= 0x1F315 ) || // E0.6   [3] (🌓..🌕)    first quarter moon..full moon\n\t\t( 0x1F316 <= code && code <= 0x1F318 ) || // E1.0   [3] (🌖..🌘)    waning gibbous moon..waning crescent moon\n\t\tcode === 0x1F319 || // E0.6   [1] (🌙)       crescent moon\n\t\tcode === 0x1F31A || // E1.0   [1] (🌚)       new moon face\n\t\tcode === 0x1F31B || // E0.6   [1] (🌛)       first quarter moon face\n\t\tcode === 0x1F31C || // E0.7   [1] (🌜)       last quarter moon face\n\t\t( 0x1F31D <= code && code <= 0x1F31E ) || // E1.0   [2] (🌝..🌞)    full moon face..sun with face\n\t\t( 0x1F31F <= code && code <= 0x1F320 ) || // E0.6   [2] (🌟..🌠)    glowing star..shooting star\n\t\tcode === 0x1F321 || // E0.7   [1] (🌡️)       thermometer\n\t\t( 0x1F322 <= code && code <= 0x1F323 ) || // E0.0   [2] (🌢..🌣)    BLACK DROPLET..WHITE SUN\n\t\t( 0x1F324 <= code && code <= 0x1F32C ) || // E0.7   [9] (🌤️..🌬️)    sun behind small cloud..wind face\n\t\t( 0x1F32D <= code && code <= 0x1F32F ) || // E1.0   [3] (🌭..🌯)    hot dog..burrito\n\t\t( 0x1F330 <= code && code <= 0x1F331 ) || // E0.6   [2] (🌰..🌱)    chestnut..seedling\n\t\t( 0x1F332 <= code && code <= 0x1F333 ) || // E1.0   [2] (🌲..🌳)    evergreen tree..deciduous tree\n\t\t( 0x1F334 <= code && code <= 0x1F335 ) || // E0.6   [2] (🌴..🌵)    palm tree..cactus\n\t\tcode === 0x1F336 || // E0.7   [1] (🌶️)       hot pepper\n\t\t( 0x1F337 <= code && code <= 0x1F34A ) || // E0.6  [20] (🌷..🍊)    tulip..tangerine\n\t\tcode === 0x1F34B || // E1.0   [1] (🍋)       lemon\n\t\t( 0x1F34C <= code && code <= 0x1F34F ) || // E0.6   [4] (🍌..🍏)    banana..green apple\n\t\tcode === 0x1F350 || // E1.0   [1] (🍐)       pear\n\t\t( 0x1F351 <= code && code <= 0x1F37B ) || // E0.6  [43] (🍑..🍻)    peach..clinking beer mugs\n\t\tcode === 0x1F37C || // E1.0   [1] (🍼)       baby bottle\n\t\tcode === 0x1F37D || // E0.7   [1] (🍽️)       fork and knife with plate\n\t\t( 0x1F37E <= code && code <= 0x1F37F ) || // E1.0   [2] (🍾..🍿)    bottle with popping cork..popcorn\n\t\t( 0x1F380 <= code && code <= 0x1F393 ) || // E0.6  [20] (🎀..🎓)    ribbon..graduation cap\n\t\t( 0x1F394 <= code && code <= 0x1F395 ) || // E0.0   [2] (🎔..🎕)    HEART WITH TIP ON THE LEFT..BOUQUET OF FLOWERS\n\t\t( 0x1F396 <= code && code <= 0x1F397 ) || // E0.7   [2] (🎖️..🎗️)    military medal..reminder ribbon\n\t\tcode === 0x1F398 || // E0.0   [1] (🎘)       MUSICAL KEYBOARD WITH JACKS\n\t\t( 0x1F399 <= code && code <= 0x1F39B ) || // E0.7   [3] (🎙️..🎛️)    studio microphone..control knobs\n\t\t( 0x1F39C <= code && code <= 0x1F39D ) || // E0.0   [2] (🎜..🎝)    BEAMED ASCENDING MUSICAL NOTES..BEAMED DESCENDING MUSICAL NOTES\n\t\t( 0x1F39E <= code && code <= 0x1F39F ) || // E0.7   [2] (🎞️..🎟️)    film frames..admission tickets\n\t\t( 0x1F3A0 <= code && code <= 0x1F3C4 ) || // E0.6  [37] (🎠..🏄)    carousel horse..person surfing\n\t\tcode === 0x1F3C5 || // E1.0   [1] (🏅)       sports medal\n\t\tcode === 0x1F3C6 || // E0.6   [1] (🏆)       trophy\n\t\tcode === 0x1F3C7 || // E1.0   [1] (🏇)       horse racing\n\t\tcode === 0x1F3C8 || // E0.6   [1] (🏈)       american football\n\t\tcode === 0x1F3C9 || // E1.0   [1] (🏉)       rugby football\n\t\tcode === 0x1F3CA || // E0.6   [1] (🏊)       person swimming\n\t\t( 0x1F3CB <= code && code <= 0x1F3CE ) || // E0.7   [4] (🏋️..🏎️)    person lifting weights..racing car\n\t\t( 0x1F3CF <= code && code <= 0x1F3D3 ) || // E1.0   [5] (🏏..🏓)    cricket game..ping pong\n\t\t( 0x1F3D4 <= code && code <= 0x1F3DF ) || // E0.7  [12] (🏔️..🏟️)    snow-capped mountain..stadium\n\t\t( 0x1F3E0 <= code && code <= 0x1F3E3 ) || // E0.6   [4] (🏠..🏣)    house..Japanese post office\n\t\tcode === 0x1F3E4 || // E1.0   [1] (🏤)       post office\n\t\t( 0x1F3E5 <= code && code <= 0x1F3F0 ) || // E0.6  [12] (🏥..🏰)    hospital..castle\n\t\t( 0x1F3F1 <= code && code <= 0x1F3F2 ) || // E0.0   [2] (🏱..🏲)    WHITE PENNANT..BLACK PENNANT\n\t\tcode === 0x1F3F3 || // E0.7   [1] (🏳️)       white flag\n\t\tcode === 0x1F3F4 || // E1.0   [1] (🏴)       black flag\n\t\tcode === 0x1F3F5 || // E0.7   [1] (🏵️)       rosette\n\t\tcode === 0x1F3F6 || // E0.0   [1] (🏶)       BLACK ROSETTE\n\t\tcode === 0x1F3F7 || // E0.7   [1] (🏷️)       label\n\t\t( 0x1F3F8 <= code && code <= 0x1F3FA ) || // E1.0   [3] (🏸..🏺)    badminton..amphora\n\t\t( 0x1F400 <= code && code <= 0x1F407 ) || // E1.0   [8] (🐀..🐇)    rat..rabbit\n\t\tcode === 0x1F408 || // E0.7   [1] (🐈)       cat\n\t\t( 0x1F409 <= code && code <= 0x1F40B ) || // E1.0   [3] (🐉..🐋)    dragon..whale\n\t\t( 0x1F40C <= code && code <= 0x1F40E ) || // E0.6   [3] (🐌..🐎)    snail..horse\n\t\t( 0x1F40F <= code && code <= 0x1F410 ) || // E1.0   [2] (🐏..🐐)    ram..goat\n\t\t( 0x1F411 <= code && code <= 0x1F412 ) || // E0.6   [2] (🐑..🐒)    ewe..monkey\n\t\tcode === 0x1F413 || // E1.0   [1] (🐓)       rooster\n\t\tcode === 0x1F414 || // E0.6   [1] (🐔)       chicken\n\t\tcode === 0x1F415 || // E0.7   [1] (🐕)       dog\n\t\tcode === 0x1F416 || // E1.0   [1] (🐖)       pig\n\t\t( 0x1F417 <= code && code <= 0x1F429 ) || // E0.6  [19] (🐗..🐩)    boar..poodle\n\t\tcode === 0x1F42A || // E1.0   [1] (🐪)       camel\n\t\t( 0x1F42B <= code && code <= 0x1F43E ) || // E0.6  [20] (🐫..🐾)    two-hump camel..paw prints\n\t\tcode === 0x1F43F || // E0.7   [1] (🐿️)       chipmunk\n\t\tcode === 0x1F440 || // E0.6   [1] (👀)       eyes\n\t\tcode === 0x1F441 || // E0.7   [1] (👁️)       eye\n\t\t( 0x1F442 <= code && code <= 0x1F464 ) || // E0.6  [35] (👂..👤)    ear..bust in silhouette\n\t\tcode === 0x1F465 || // E1.0   [1] (👥)       busts in silhouette\n\t\t( 0x1F466 <= code && code <= 0x1F46B ) || // E0.6   [6] (👦..👫)    boy..woman and man holding hands\n\t\t( 0x1F46C <= code && code <= 0x1F46D ) || // E1.0   [2] (👬..👭)    men holding hands..women holding hands\n\t\t( 0x1F46E <= code && code <= 0x1F4AC ) || // E0.6  [63] (👮..💬)    police officer..speech balloon\n\t\tcode === 0x1F4AD || // E1.0   [1] (💭)       thought balloon\n\t\t( 0x1F4AE <= code && code <= 0x1F4B5 ) || // E0.6   [8] (💮..💵)    white flower..dollar banknote\n\t\t( 0x1F4B6 <= code && code <= 0x1F4B7 ) || // E1.0   [2] (💶..💷)    euro banknote..pound banknote\n\t\t( 0x1F4B8 <= code && code <= 0x1F4EB ) || // E0.6  [52] (💸..📫)    money with wings..closed mailbox with raised flag\n\t\t( 0x1F4EC <= code && code <= 0x1F4ED ) || // E0.7   [2] (📬..📭)    open mailbox with raised flag..open mailbox with lowered flag\n\t\tcode === 0x1F4EE || // E0.6   [1] (📮)       postbox\n\t\tcode === 0x1F4EF || // E1.0   [1] (📯)       postal horn\n\t\t( 0x1F4F0 <= code && code <= 0x1F4F4 ) || // E0.6   [5] (📰..📴)    newspaper..mobile phone off\n\t\tcode === 0x1F4F5 || // E1.0   [1] (📵)       no mobile phones\n\t\t( 0x1F4F6 <= code && code <= 0x1F4F7 ) || // E0.6   [2] (📶..📷)    antenna bars..camera\n\t\tcode === 0x1F4F8 || // E1.0   [1] (📸)       camera with flash\n\t\t( 0x1F4F9 <= code && code <= 0x1F4FC ) || // E0.6   [4] (📹..📼)    video camera..videocassette\n\t\tcode === 0x1F4FD || // E0.7   [1] (📽️)       film projector\n\t\tcode === 0x1F4FE || // E0.0   [1] (📾)       PORTABLE STEREO\n\t\t( 0x1F4FF <= code && code <= 0x1F502 ) || // E1.0   [4] (📿..🔂)    prayer beads..repeat single button\n\t\tcode === 0x1F503 || // E0.6   [1] (🔃)       clockwise vertical arrows\n\t\t( 0x1F504 <= code && code <= 0x1F507 ) || // E1.0   [4] (🔄..🔇)    counterclockwise arrows button..muted speaker\n\t\tcode === 0x1F508 || // E0.7   [1] (🔈)       speaker low volume\n\t\tcode === 0x1F509 || // E1.0   [1] (🔉)       speaker medium volume\n\t\t( 0x1F50A <= code && code <= 0x1F514 ) || // E0.6  [11] (🔊..🔔)    speaker high volume..bell\n\t\tcode === 0x1F515 || // E1.0   [1] (🔕)       bell with slash\n\t\t( 0x1F516 <= code && code <= 0x1F52B ) || // E0.6  [22] (🔖..🔫)    bookmark..pistol\n\t\t( 0x1F52C <= code && code <= 0x1F52D ) || // E1.0   [2] (🔬..🔭)    microscope..telescope\n\t\t( 0x1F52E <= code && code <= 0x1F53D ) || // E0.6  [16] (🔮..🔽)    crystal ball..downwards button\n\t\t( 0x1F546 <= code && code <= 0x1F548 ) || // E0.0   [3] (🕆..🕈)    WHITE LATIN CROSS..CELTIC CROSS\n\t\t( 0x1F549 <= code && code <= 0x1F54A ) || // E0.7   [2] (🕉️..🕊️)    om..dove\n\t\t( 0x1F54B <= code && code <= 0x1F54E ) || // E1.0   [4] (🕋..🕎)    kaaba..menorah\n\t\tcode === 0x1F54F || // E0.0   [1] (🕏)       BOWL OF HYGIEIA\n\t\t( 0x1F550 <= code && code <= 0x1F55B ) || // E0.6  [12] (🕐..🕛)    one o’clock..twelve o’clock\n\t\t( 0x1F55C <= code && code <= 0x1F567 ) || // E0.7  [12] (🕜..🕧)    one-thirty..twelve-thirty\n\t\t( 0x1F568 <= code && code <= 0x1F56E ) || // E0.0   [7] (🕨..🕮)    RIGHT SPEAKER..BOOK\n\t\t( 0x1F56F <= code && code <= 0x1F570 ) || // E0.7   [2] (🕯️..🕰️)    candle..mantelpiece clock\n\t\t( 0x1F571 <= code && code <= 0x1F572 ) || // E0.0   [2] (🕱..🕲)    BLACK SKULL AND CROSSBONES..NO PIRACY\n\t\t( 0x1F573 <= code && code <= 0x1F579 ) || // E0.7   [7] (🕳️..🕹️)    hole..joystick\n\t\tcode === 0x1F57A || // E3.0   [1] (🕺)       man dancing\n\t\t( 0x1F57B <= code && code <= 0x1F586 ) || // E0.0  [12] (🕻..🖆)    LEFT HAND TELEPHONE RECEIVER..PEN OVER STAMPED ENVELOPE\n\t\tcode === 0x1F587 || // E0.7   [1] (🖇️)       linked paperclips\n\t\t( 0x1F588 <= code && code <= 0x1F589 ) || // E0.0   [2] (🖈..🖉)    BLACK PUSHPIN..LOWER LEFT PENCIL\n\t\t( 0x1F58A <= code && code <= 0x1F58D ) || // E0.7   [4] (🖊️..🖍️)    pen..crayon\n\t\t( 0x1F58E <= code && code <= 0x1F58F ) || // E0.0   [2] (🖎..🖏)    LEFT WRITING HAND..TURNED OK HAND SIGN\n\t\tcode === 0x1F590 || // E0.7   [1] (🖐️)       hand with fingers splayed\n\t\t( 0x1F591 <= code && code <= 0x1F594 ) || // E0.0   [4] (🖑..🖔)    REVERSED RAISED HAND WITH FINGERS SPLAYED..REVERSED VICTORY HAND\n\t\t( 0x1F595 <= code && code <= 0x1F596 ) || // E1.0   [2] (🖕..🖖)    middle finger..vulcan salute\n\t\t( 0x1F597 <= code && code <= 0x1F5A3 ) || // E0.0  [13] (🖗..🖣)    WHITE DOWN POINTING LEFT HAND INDEX..BLACK DOWN POINTING BACKHAND INDEX\n\t\tcode === 0x1F5A4 || // E3.0   [1] (🖤)       black heart\n\t\tcode === 0x1F5A5 || // E0.7   [1] (🖥️)       desktop computer\n\t\t( 0x1F5A6 <= code && code <= 0x1F5A7 ) || // E0.0   [2] (🖦..🖧)    KEYBOARD AND MOUSE..THREE NETWORKED COMPUTERS\n\t\tcode === 0x1F5A8 || // E0.7   [1] (🖨️)       printer\n\t\t( 0x1F5A9 <= code && code <= 0x1F5B0 ) || // E0.0   [8] (🖩..🖰)    POCKET CALCULATOR..TWO BUTTON MOUSE\n\t\t( 0x1F5B1 <= code && code <= 0x1F5B2 ) || // E0.7   [2] (🖱️..🖲️)    computer mouse..trackball\n\t\t( 0x1F5B3 <= code && code <= 0x1F5BB ) || // E0.0   [9] (🖳..🖻)    OLD PERSONAL COMPUTER..DOCUMENT WITH PICTURE\n\t\tcode === 0x1F5BC || // E0.7   [1] (🖼️)       framed picture\n\t\t( 0x1F5BD <= code && code <= 0x1F5C1 ) || // E0.0   [5] (🖽..🗁)    FRAME WITH TILES..OPEN FOLDER\n\t\t( 0x1F5C2 <= code && code <= 0x1F5C4 ) || // E0.7   [3] (🗂️..🗄️)    card index dividers..file cabinet\n\t\t( 0x1F5C5 <= code && code <= 0x1F5D0 ) || // E0.0  [12] (🗅..🗐)    EMPTY NOTE..PAGES\n\t\t( 0x1F5D1 <= code && code <= 0x1F5D3 ) || // E0.7   [3] (🗑️..🗓️)    wastebasket..spiral calendar\n\t\t( 0x1F5D4 <= code && code <= 0x1F5DB ) || // E0.0   [8] (🗔..🗛)    DESKTOP WINDOW..DECREASE FONT SIZE SYMBOL\n\t\t( 0x1F5DC <= code && code <= 0x1F5DE ) || // E0.7   [3] (🗜️..🗞️)    clamp..rolled-up newspaper\n\t\t( 0x1F5DF <= code && code <= 0x1F5E0 ) || // E0.0   [2] (🗟..🗠)    PAGE WITH CIRCLED TEXT..STOCK CHART\n\t\tcode === 0x1F5E1 || // E0.7   [1] (🗡️)       dagger\n\t\tcode === 0x1F5E2 || // E0.0   [1] (🗢)       LIPS\n\t\tcode === 0x1F5E3 || // E0.7   [1] (🗣️)       speaking head\n\t\t( 0x1F5E4 <= code && code <= 0x1F5E7 ) || // E0.0   [4] (🗤..🗧)    THREE RAYS ABOVE..THREE RAYS RIGHT\n\t\tcode === 0x1F5E8 || // E2.0   [1] (🗨️)       left speech bubble\n\t\t( 0x1F5E9 <= code && code <= 0x1F5EE ) || // E0.0   [6] (🗩..🗮)    RIGHT SPEECH BUBBLE..LEFT ANGER BUBBLE\n\t\tcode === 0x1F5EF || // E0.7   [1] (🗯️)       right anger bubble\n\t\t( 0x1F5F0 <= code && code <= 0x1F5F2 ) || // E0.0   [3] (🗰..🗲)    MOOD BUBBLE..LIGHTNING MOOD\n\t\tcode === 0x1F5F3 || // E0.7   [1] (🗳️)       ballot box with ballot\n\t\t( 0x1F5F4 <= code && code <= 0x1F5F9 ) || // E0.0   [6] (🗴..🗹)    BALLOT SCRIPT X..BALLOT BOX WITH BOLD CHECK\n\t\tcode === 0x1F5FA || // E0.7   [1] (🗺️)       world map\n\t\t( 0x1F5FB <= code && code <= 0x1F5FF ) || // E0.6   [5] (🗻..🗿)    mount fuji..moai\n\t\tcode === 0x1F600 || // E1.0   [1] (😀)       grinning face\n\t\t( 0x1F601 <= code && code <= 0x1F606 ) || // E0.6   [6] (😁..😆)    beaming face with smiling eyes..grinning squinting face\n\t\t( 0x1F607 <= code && code <= 0x1F608 ) || // E1.0   [2] (😇..😈)    smiling face with halo..smiling face with horns\n\t\t( 0x1F609 <= code && code <= 0x1F60D ) || // E0.6   [5] (😉..😍)    winking face..smiling face with heart-eyes\n\t\tcode === 0x1F60E || // E1.0   [1] (😎)       smiling face with sunglasses\n\t\tcode === 0x1F60F || // E0.6   [1] (😏)       smirking face\n\t\tcode === 0x1F610 || // E0.7   [1] (😐)       neutral face\n\t\tcode === 0x1F611 || // E1.0   [1] (😑)       expressionless face\n\t\t( 0x1F612 <= code && code <= 0x1F614 ) || // E0.6   [3] (😒..😔)    unamused face..pensive face\n\t\tcode === 0x1F615 || // E1.0   [1] (😕)       confused face\n\t\tcode === 0x1F616 || // E0.6   [1] (😖)       confounded face\n\t\tcode === 0x1F617 || // E1.0   [1] (😗)       kissing face\n\t\tcode === 0x1F618 || // E0.6   [1] (😘)       face blowing a kiss\n\t\tcode === 0x1F619 || // E1.0   [1] (😙)       kissing face with smiling eyes\n\t\tcode === 0x1F61A || // E0.6   [1] (😚)       kissing face with closed eyes\n\t\tcode === 0x1F61B || // E1.0   [1] (😛)       face with tongue\n\t\t( 0x1F61C <= code && code <= 0x1F61E ) || // E0.6   [3] (😜..😞)    winking face with tongue..disappointed face\n\t\tcode === 0x1F61F || // E1.0   [1] (😟)       worried face\n\t\t( 0x1F620 <= code && code <= 0x1F625 ) || // E0.6   [6] (😠..😥)    angry face..sad but relieved face\n\t\t( 0x1F626 <= code && code <= 0x1F627 ) || // E1.0   [2] (😦..😧)    frowning face with open mouth..anguished face\n\t\t( 0x1F628 <= code && code <= 0x1F62B ) || // E0.6   [4] (😨..😫)    fearful face..tired face\n\t\tcode === 0x1F62C || // E1.0   [1] (😬)       grimacing face\n\t\tcode === 0x1F62D || // E0.6   [1] (😭)       loudly crying face\n\t\t( 0x1F62E <= code && code <= 0x1F62F ) || // E1.0   [2] (😮..😯)    face with open mouth..hushed face\n\t\t( 0x1F630 <= code && code <= 0x1F633 ) || // E0.6   [4] (😰..😳)    anxious face with sweat..flushed face\n\t\tcode === 0x1F634 || // E1.0   [1] (😴)       sleeping face\n\t\tcode === 0x1F635 || // E0.6   [1] (😵)       dizzy face\n\t\tcode === 0x1F636 || // E1.0   [1] (😶)       face without mouth\n\t\t( 0x1F637 <= code && code <= 0x1F640 ) || // E0.6  [10] (😷..🙀)    face with medical mask..weary cat\n\t\t( 0x1F641 <= code && code <= 0x1F644 ) || // E1.0   [4] (🙁..🙄)    slightly frowning face..face with rolling eyes\n\t\t( 0x1F645 <= code && code <= 0x1F64F ) || // E0.6  [11] (🙅..🙏)    person gesturing NO..folded hands\n\t\tcode === 0x1F680 || // E0.6   [1] (🚀)       rocket\n\t\t( 0x1F681 <= code && code <= 0x1F682 ) || // E1.0   [2] (🚁..🚂)    helicopter..locomotive\n\t\t( 0x1F683 <= code && code <= 0x1F685 ) || // E0.6   [3] (🚃..🚅)    railway car..bullet train\n\t\tcode === 0x1F686 || // E1.0   [1] (🚆)       train\n\t\tcode === 0x1F687 || // E0.6   [1] (🚇)       metro\n\t\tcode === 0x1F688 || // E1.0   [1] (🚈)       light rail\n\t\tcode === 0x1F689 || // E0.6   [1] (🚉)       station\n\t\t( 0x1F68A <= code && code <= 0x1F68B ) || // E1.0   [2] (🚊..🚋)    tram..tram car\n\t\tcode === 0x1F68C || // E0.6   [1] (🚌)       bus\n\t\tcode === 0x1F68D || // E0.7   [1] (🚍)       oncoming bus\n\t\tcode === 0x1F68E || // E1.0   [1] (🚎)       trolleybus\n\t\tcode === 0x1F68F || // E0.6   [1] (🚏)       bus stop\n\t\tcode === 0x1F690 || // E1.0   [1] (🚐)       minibus\n\t\t( 0x1F691 <= code && code <= 0x1F693 ) || // E0.6   [3] (🚑..🚓)    ambulance..police car\n\t\tcode === 0x1F694 || // E0.7   [1] (🚔)       oncoming police car\n\t\tcode === 0x1F695 || // E0.6   [1] (🚕)       taxi\n\t\tcode === 0x1F696 || // E1.0   [1] (🚖)       oncoming taxi\n\t\tcode === 0x1F697 || // E0.6   [1] (🚗)       automobile\n\t\tcode === 0x1F698 || // E0.7   [1] (🚘)       oncoming automobile\n\t\t( 0x1F699 <= code && code <= 0x1F69A ) || // E0.6   [2] (🚙..🚚)    sport utility vehicle..delivery truck\n\t\t( 0x1F69B <= code && code <= 0x1F6A1 ) || // E1.0   [7] (🚛..🚡)    articulated lorry..aerial tramway\n\t\tcode === 0x1F6A2 || // E0.6   [1] (🚢)       ship\n\t\tcode === 0x1F6A3 || // E1.0   [1] (🚣)       person rowing boat\n\t\t( 0x1F6A4 <= code && code <= 0x1F6A5 ) || // E0.6   [2] (🚤..🚥)    speedboat..horizontal traffic light\n\t\tcode === 0x1F6A6 || // E1.0   [1] (🚦)       vertical traffic light\n\t\t( 0x1F6A7 <= code && code <= 0x1F6AD ) || // E0.6   [7] (🚧..🚭)    construction..no smoking\n\t\t( 0x1F6AE <= code && code <= 0x1F6B1 ) || // E1.0   [4] (🚮..🚱)    litter in bin sign..non-potable water\n\t\tcode === 0x1F6B2 || // E0.6   [1] (🚲)       bicycle\n\t\t( 0x1F6B3 <= code && code <= 0x1F6B5 ) || // E1.0   [3] (🚳..🚵)    no bicycles..person mountain biking\n\t\tcode === 0x1F6B6 || // E0.6   [1] (🚶)       person walking\n\t\t( 0x1F6B7 <= code && code <= 0x1F6B8 ) || // E1.0   [2] (🚷..🚸)    no pedestrians..children crossing\n\t\t( 0x1F6B9 <= code && code <= 0x1F6BE ) || // E0.6   [6] (🚹..🚾)    men’s room..water closet\n\t\tcode === 0x1F6BF || // E1.0   [1] (🚿)       shower\n\t\tcode === 0x1F6C0 || // E0.6   [1] (🛀)       person taking bath\n\t\t( 0x1F6C1 <= code && code <= 0x1F6C5 ) || // E1.0   [5] (🛁..🛅)    bathtub..left luggage\n\t\t( 0x1F6C6 <= code && code <= 0x1F6CA ) || // E0.0   [5] (🛆..🛊)    TRIANGLE WITH ROUNDED CORNERS..GIRLS SYMBOL\n\t\tcode === 0x1F6CB || // E0.7   [1] (🛋️)       couch and lamp\n\t\tcode === 0x1F6CC || // E1.0   [1] (🛌)       person in bed\n\t\t( 0x1F6CD <= code && code <= 0x1F6CF ) || // E0.7   [3] (🛍️..🛏️)    shopping bags..bed\n\t\tcode === 0x1F6D0 || // E1.0   [1] (🛐)       place of worship\n\t\t( 0x1F6D1 <= code && code <= 0x1F6D2 ) || // E3.0   [2] (🛑..🛒)    stop sign..shopping cart\n\t\t( 0x1F6D3 <= code && code <= 0x1F6D4 ) || // E0.0   [2] (🛓..🛔)    STUPA..PAGODA\n\t\tcode === 0x1F6D5 || // E12.0  [1] (🛕)       hindu temple\n\t\t( 0x1F6D6 <= code && code <= 0x1F6D7 ) || // E13.0  [2] (🛖..🛗)    hut..elevator\n\t\t( 0x1F6D8 <= code && code <= 0x1F6DF ) || // E0.0   [8] (🛘..🛟)    <reserved-1F6D8>..<reserved-1F6DF>\n\t\t( 0x1F6E0 <= code && code <= 0x1F6E5 ) || // E0.7   [6] (🛠️..🛥️)    hammer and wrench..motor boat\n\t\t( 0x1F6E6 <= code && code <= 0x1F6E8 ) || // E0.0   [3] (🛦..🛨)    UP-POINTING MILITARY AIRPLANE..UP-POINTING SMALL AIRPLANE\n\t\tcode === 0x1F6E9 || // E0.7   [1] (🛩️)       small airplane\n\t\tcode === 0x1F6EA || // E0.0   [1] (🛪)       NORTHEAST-POINTING AIRPLANE\n\t\t( 0x1F6EB <= code && code <= 0x1F6EC ) || // E1.0   [2] (🛫..🛬)    airplane departure..airplane arrival\n\t\t( 0x1F6ED <= code && code <= 0x1F6EF ) || // E0.0   [3] (🛭..🛯)    <reserved-1F6ED>..<reserved-1F6EF>\n\t\tcode === 0x1F6F0 || // E0.7   [1] (🛰️)       satellite\n\t\t( 0x1F6F1 <= code && code <= 0x1F6F2 ) || // E0.0   [2] (🛱..🛲)    ONCOMING FIRE ENGINE..DIESEL LOCOMOTIVE\n\t\tcode === 0x1F6F3 || // E0.7   [1] (🛳️)       passenger ship\n\t\t( 0x1F6F4 <= code && code <= 0x1F6F6 ) || // E3.0   [3] (🛴..🛶)    kick scooter..canoe\n\t\t( 0x1F6F7 <= code && code <= 0x1F6F8 ) || // E5.0   [2] (🛷..🛸)    sled..flying saucer\n\t\tcode === 0x1F6F9 || // E11.0  [1] (🛹)       skateboard\n\t\tcode === 0x1F6FA || // E12.0  [1] (🛺)       auto rickshaw\n\t\t( 0x1F6FB <= code && code <= 0x1F6FC ) || // E13.0  [2] (🛻..🛼)    pickup truck..roller skate\n\t\t( 0x1F6FD <= code && code <= 0x1F6FF ) || // E0.0   [3] (🛽..🛿)    <reserved-1F6FD>..<reserved-1F6FF>\n\t\t( 0x1F774 <= code && code <= 0x1F77F ) || // E0.0  [12] (🝴..🝿)    <reserved-1F774>..<reserved-1F77F>\n\t\t( 0x1F7D5 <= code && code <= 0x1F7DF ) || // E0.0  [11] (🟕..🟟)    CIRCLED TRIANGLE..<reserved-1F7DF>\n\t\t( 0x1F7E0 <= code && code <= 0x1F7EB ) || // E12.0 [12] (🟠..🟫)    orange circle..brown square\n\t\t( 0x1F7EC <= code && code <= 0x1F7FF ) || // E0.0  [20] (🟬..🟿)    <reserved-1F7EC>..<reserved-1F7FF>\n\t\t( 0x1F80C <= code && code <= 0x1F80F ) || // E0.0   [4] (🠌..🠏)    <reserved-1F80C>..<reserved-1F80F>\n\t\t( 0x1F848 <= code && code <= 0x1F84F ) || // E0.0   [8] (🡈..🡏)    <reserved-1F848>..<reserved-1F84F>\n\t\t( 0x1F85A <= code && code <= 0x1F85F ) || // E0.0   [6] (🡚..🡟)    <reserved-1F85A>..<reserved-1F85F>\n\t\t( 0x1F888 <= code && code <= 0x1F88F ) || // E0.0   [8] (🢈..🢏)    <reserved-1F888>..<reserved-1F88F>\n\t\t( 0x1F8AE <= code && code <= 0x1F8FF ) || // E0.0  [82] (🢮..🣿)    <reserved-1F8AE>..<reserved-1F8FF>\n\t\tcode === 0x1F90C || // E13.0  [1] (🤌)       pinched fingers\n\t\t( 0x1F90D <= code && code <= 0x1F90F ) || // E12.0  [3] (🤍..🤏)    white heart..pinching hand\n\t\t( 0x1F910 <= code && code <= 0x1F918 ) || // E1.0   [9] (🤐..🤘)    zipper-mouth face..sign of the horns\n\t\t( 0x1F919 <= code && code <= 0x1F91E ) || // E3.0   [6] (🤙..🤞)    call me hand..crossed fingers\n\t\tcode === 0x1F91F || // E5.0   [1] (🤟)       love-you gesture\n\t\t( 0x1F920 <= code && code <= 0x1F927 ) || // E3.0   [8] (🤠..🤧)    cowboy hat face..sneezing face\n\t\t( 0x1F928 <= code && code <= 0x1F92F ) || // E5.0   [8] (🤨..🤯)    face with raised eyebrow..exploding head\n\t\tcode === 0x1F930 || // E3.0   [1] (🤰)       pregnant woman\n\t\t( 0x1F931 <= code && code <= 0x1F932 ) || // E5.0   [2] (🤱..🤲)    breast-feeding..palms up together\n\t\t( 0x1F933 <= code && code <= 0x1F93A ) || // E3.0   [8] (🤳..🤺)    selfie..person fencing\n\t\t( 0x1F93C <= code && code <= 0x1F93E ) || // E3.0   [3] (🤼..🤾)    people wrestling..person playing handball\n\t\tcode === 0x1F93F || // E12.0  [1] (🤿)       diving mask\n\t\t( 0x1F940 <= code && code <= 0x1F945 ) || // E3.0   [6] (🥀..🥅)    wilted flower..goal net\n\t\t( 0x1F947 <= code && code <= 0x1F94B ) || // E3.0   [5] (🥇..🥋)    1st place medal..martial arts uniform\n\t\tcode === 0x1F94C || // E5.0   [1] (🥌)       curling stone\n\t\t( 0x1F94D <= code && code <= 0x1F94F ) || // E11.0  [3] (🥍..🥏)    lacrosse..flying disc\n\t\t( 0x1F950 <= code && code <= 0x1F95E ) || // E3.0  [15] (🥐..🥞)    croissant..pancakes\n\t\t( 0x1F95F <= code && code <= 0x1F96B ) || // E5.0  [13] (🥟..🥫)    dumpling..canned food\n\t\t( 0x1F96C <= code && code <= 0x1F970 ) || // E11.0  [5] (🥬..🥰)    leafy green..smiling face with hearts\n\t\tcode === 0x1F971 || // E12.0  [1] (🥱)       yawning face\n\t\tcode === 0x1F972 || // E13.0  [1] (🥲)       smiling face with tear\n\t\t( 0x1F973 <= code && code <= 0x1F976 ) || // E11.0  [4] (🥳..🥶)    partying face..cold face\n\t\t( 0x1F977 <= code && code <= 0x1F978 ) || // E13.0  [2] (🥷..🥸)    ninja..disguised face\n\t\tcode === 0x1F979 || // E0.0   [1] (🥹)       <reserved-1F979>\n\t\tcode === 0x1F97A || // E11.0  [1] (🥺)       pleading face\n\t\tcode === 0x1F97B || // E12.0  [1] (🥻)       sari\n\t\t( 0x1F97C <= code && code <= 0x1F97F ) || // E11.0  [4] (🥼..🥿)    lab coat..flat shoe\n\t\t( 0x1F980 <= code && code <= 0x1F984 ) || // E1.0   [5] (🦀..🦄)    crab..unicorn\n\t\t( 0x1F985 <= code && code <= 0x1F991 ) || // E3.0  [13] (🦅..🦑)    eagle..squid\n\t\t( 0x1F992 <= code && code <= 0x1F997 ) || // E5.0   [6] (🦒..🦗)    giraffe..cricket\n\t\t( 0x1F998 <= code && code <= 0x1F9A2 ) || // E11.0 [11] (🦘..🦢)    kangaroo..swan\n\t\t( 0x1F9A3 <= code && code <= 0x1F9A4 ) || // E13.0  [2] (🦣..🦤)    mammoth..dodo\n\t\t( 0x1F9A5 <= code && code <= 0x1F9AA ) || // E12.0  [6] (🦥..🦪)    sloth..oyster\n\t\t( 0x1F9AB <= code && code <= 0x1F9AD ) || // E13.0  [3] (🦫..🦭)    beaver..seal\n\t\t( 0x1F9AE <= code && code <= 0x1F9AF ) || // E12.0  [2] (🦮..🦯)    guide dog..white cane\n\t\t( 0x1F9B0 <= code && code <= 0x1F9B9 ) || // E11.0 [10] (🦰..🦹)    red hair..supervillain\n\t\t( 0x1F9BA <= code && code <= 0x1F9BF ) || // E12.0  [6] (🦺..🦿)    safety vest..mechanical leg\n\t\tcode === 0x1F9C0 || // E1.0   [1] (🧀)       cheese wedge\n\t\t( 0x1F9C1 <= code && code <= 0x1F9C2 ) || // E11.0  [2] (🧁..🧂)    cupcake..salt\n\t\t( 0x1F9C3 <= code && code <= 0x1F9CA ) || // E12.0  [8] (🧃..🧊)    beverage box..ice\n\t\tcode === 0x1F9CB || // E13.0  [1] (🧋)       bubble tea\n\t\tcode === 0x1F9CC || // E0.0   [1] (🧌)       <reserved-1F9CC>\n\t\t( 0x1F9CD <= code && code <= 0x1F9CF ) || // E12.0  [3] (🧍..🧏)    person standing..deaf person\n\t\t( 0x1F9D0 <= code && code <= 0x1F9E6 ) || // E5.0  [23] (🧐..🧦)    face with monocle..socks\n\t\t( 0x1F9E7 <= code && code <= 0x1F9FF ) || // E11.0 [25] (🧧..🧿)    red envelope..nazar amulet\n\t\t( 0x1FA00 <= code && code <= 0x1FA6F ) || // E0.0 [112] (🨀..🩯)    NEUTRAL CHESS KING..<reserved-1FA6F>\n\t\t( 0x1FA70 <= code && code <= 0x1FA73 ) || // E12.0  [4] (🩰..🩳)    ballet shoes..shorts\n\t\tcode === 0x1FA74 || // E13.0  [1] (🩴)       thong sandal\n\t\t( 0x1FA75 <= code && code <= 0x1FA77 ) || // E0.0   [3] (🩵..🩷)    <reserved-1FA75>..<reserved-1FA77>\n\t\t( 0x1FA78 <= code && code <= 0x1FA7A ) || // E12.0  [3] (🩸..🩺)    drop of blood..stethoscope\n\t\t( 0x1FA7B <= code && code <= 0x1FA7F ) || // E0.0   [5] (🩻..🩿)    <reserved-1FA7B>..<reserved-1FA7F>\n\t\t( 0x1FA80 <= code && code <= 0x1FA82 ) || // E12.0  [3] (🪀..🪂)    yo-yo..parachute\n\t\t( 0x1FA83 <= code && code <= 0x1FA86 ) || // E13.0  [4] (🪃..🪆)    boomerang..nesting dolls\n\t\t( 0x1FA87 <= code && code <= 0x1FA8F ) || // E0.0   [9] (🪇..🪏)    <reserved-1FA87>..<reserved-1FA8F>\n\t\t( 0x1FA90 <= code && code <= 0x1FA95 ) || // E12.0  [6] (🪐..🪕)    ringed planet..banjo\n\t\t( 0x1FA96 <= code && code <= 0x1FAA8 ) || // E13.0 [19] (🪖..🪨)    military helmet..rock\n\t\t( 0x1FAA9 <= code && code <= 0x1FAAF ) || // E0.0   [7] (🪩..🪯)    <reserved-1FAA9>..<reserved-1FAAF>\n\t\t( 0x1FAB0 <= code && code <= 0x1FAB6 ) || // E13.0  [7] (🪰..🪶)    fly..feather\n\t\t( 0x1FAB7 <= code && code <= 0x1FABF ) || // E0.0   [9] (🪷..🪿)    <reserved-1FAB7>..<reserved-1FABF>\n\t\t( 0x1FAC0 <= code && code <= 0x1FAC2 ) || // E13.0  [3] (🫀..🫂)    anatomical heart..people hugging\n\t\t( 0x1FAC3 <= code && code <= 0x1FACF ) || // E0.0  [13] (🫃..🫏)    <reserved-1FAC3>..<reserved-1FACF>\n\t\t( 0x1FAD0 <= code && code <= 0x1FAD6 ) || // E13.0  [7] (🫐..🫖)    blueberries..teapot\n\t\t( 0x1FAD7 <= code && code <= 0x1FAFF ) || // E0.0  [41] (🫗..🫿)    <reserved-1FAD7>..<reserved-1FAFF>\n\t\t( 0x1FC00 <= code && code <= 0x1FFFD ) // E0.0[1022] (🰀..🿽)    <reserved-1FC00>..<reserved-1FFFD>\n\t) {\n\t\treturn constants.ExtendedPictographic;\n\t}\n\treturn constants.Other;\n}\n\n\n// EXPORTS //\n\nmodule.exports = emojiProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constants = require( './constants.js' );\n\n\n// MAIN //\n\n/**\n* Returns the grapheme break property from the [Unicode Standard][1].\n*\n* [1]: https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt\n*\n* @private\n* @param {NonNegativeInteger} code - Unicode code point\n* @returns {NonNegativeInteger} grapheme break property\n*\n* @example\n* var out = graphemeBreakProperty( 0x008f );\n* // returns 2\n*\n* @example\n* var out = graphemeBreakProperty( 0x111C2 );\n* // returns 12\n*\n* @example\n* var out = graphemeBreakProperty( 0x1F3FC );\n* // returns 3\n*/\nfunction graphemeBreakProperty( code ) {\n\tif (\n\t\t( 0x0600 <= code && code <= 0x0605 ) || // Cf   [6] ARABIC NUMBER SIGN..ARABIC NUMBER MARK ABOVE\n\t\tcode === 0x06DD || // Cf       ARABIC END OF AYAH\n\t\tcode === 0x070F || // Cf       SYRIAC ABBREVIATION MARK\n\t\tcode === 0x08E2 || // Cf       ARABIC DISPUTED END OF AYAH\n\t\tcode === 0x0D4E || // Lo       MALAYALAM LETTER DOT REPH\n\t\tcode === 0x110BD || // Cf       KAITHI NUMBER SIGN\n\t\tcode === 0x110CD || // Cf       KAITHI NUMBER SIGN ABOVE\n\t\t( 0x111C2 <= code && code <= 0x111C3 ) || // Lo   [2] SHARADA SIGN JIHVAMULIYA..SHARADA SIGN UPADHMANIYA\n\t\tcode === 0x1193F || // Lo       DIVES AKURU PREFIXED NASAL SIGN\n\t\tcode === 0x11941 || // Lo       DIVES AKURU INITIAL RA\n\t\tcode === 0x11A3A || // Lo       ZANABAZAR SQUARE CLUSTER-INITIAL LETTER RA\n\t\t( 0x11A84 <= code && code <= 0x11A89 ) || // Lo   [6] SOYOMBO SIGN JIHVAMULIYA..SOYOMBO CLUSTER-INITIAL LETTER SA\n\t\tcode === 0x11D46 // Lo       MASARAM GONDI REPHA\n\t) {\n\t\treturn constants.Prepend;\n\t}\n\tif (\n\t\tcode === 0x000D // Cc       <control-000D>\n\t) {\n\t\treturn constants.CR;\n\t}\n\tif (\n\t\tcode === 0x000A // Cc       <control-000A>\n\t) {\n\t\treturn constants.LF;\n\t}\n\tif (\n\t\t( 0x0000 <= code && code <= 0x0009 ) || // Cc  [10] <control-0000>..<control-0009>\n\t\t( 0x000B <= code && code <= 0x000C ) || // Cc   [2] <control-000B>..<control-000C>\n\t\t( 0x000E <= code && code <= 0x001F ) || // Cc  [18] <control-000E>..<control-001F>\n\t\t( 0x007F <= code && code <= 0x009F ) || // Cc  [33] <control-007F>..<control-009F>\n\t\tcode === 0x00AD || // Cf       SOFT HYPHEN\n\t\tcode === 0x061C || // Cf       ARABIC LETTER MARK\n\t\tcode === 0x180E || // Cf       MONGOLIAN VOWEL SEPARATOR\n\t\tcode === 0x200B || // Cf       ZERO WIDTH SPACE\n\t\t( 0x200E <= code && code <= 0x200F ) || // Cf   [2] LEFT-TO-RIGHT MARK..RIGHT-TO-LEFT MARK\n\t\tcode === 0x2028 || // Zl       LINE SEPARATOR\n\t\tcode === 0x2029 || // Zp       PARAGRAPH SEPARATOR\n\t\t( 0x202A <= code && code <= 0x202E ) || // Cf   [5] LEFT-TO-RIGHT EMBEDDING..RIGHT-TO-LEFT OVERRIDE\n\t\t( 0x2060 <= code && code <= 0x2064 ) || // Cf   [5] WORD JOINER..INVISIBLE PLUS\n\t\tcode === 0x2065 || // Cn       <reserved-2065>\n\t\t( 0x2066 <= code && code <= 0x206F ) || // Cf  [10] LEFT-TO-RIGHT ISOLATE..NOMINAL DIGIT SHAPES\n\t\tcode === 0xFEFF || // Cf       ZERO WIDTH NO-BREAK SPACE\n\t\t( 0xFFF0 <= code && code <= 0xFFF8 ) || // Cn   [9] <reserved-FFF0>..<reserved-FFF8>\n\t\t( 0xFFF9 <= code && code <= 0xFFFB ) || // Cf   [3] INTERLINEAR ANNOTATION ANCHOR..INTERLINEAR ANNOTATION TERMINATOR\n\t\t( 0x13430 <= code && code <= 0x13438 ) || // Cf   [9] EGYPTIAN HIEROGLYPH VERTICAL JOINER..EGYPTIAN HIEROGLYPH END SEGMENT\n\t\t( 0x1BCA0 <= code && code <= 0x1BCA3 ) || // Cf   [4] SHORTHAND FORMAT LETTER OVERLAP..SHORTHAND FORMAT UP STEP\n\t\t( 0x1D173 <= code && code <= 0x1D17A ) || // Cf   [8] MUSICAL SYMBOL BEGIN BEAM..MUSICAL SYMBOL END PHRASE\n\t\tcode === 0xE0000 || // Cn       <reserved-E0000>\n\t\tcode === 0xE0001 || // Cf       LANGUAGE TAG\n\t\t( 0xE0002 <= code && code <= 0xE001F ) || // Cn  [30] <reserved-E0002>..<reserved-E001F>\n\t\t( 0xE0080 <= code && code <= 0xE00FF ) || // Cn [128] <reserved-E0080>..<reserved-E00FF>\n\t\t( 0xE01F0 <= code && code <= 0xE0FFF ) // Cn [3600] <reserved-E01F0>..<reserved-E0FFF>\n\t) {\n\t\treturn constants.Control;\n\t}\n\tif (\n\t\t( 0x0300 <= code && code <= 0x036F ) || // Mn [112] COMBINING GRAVE ACCENT..COMBINING LATIN SMALL LETTER X\n\t\t( 0x0483 <= code && code <= 0x0487 ) || // Mn   [5] COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\n\t\t( 0x0488 <= code && code <= 0x0489 ) || // Me   [2] COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..COMBINING CYRILLIC MILLIONS SIGN\n\t\t( 0x0591 <= code && code <= 0x05BD ) || // Mn  [45] HEBREW ACCENT ETNAHTA..HEBREW POINT METEG\n\t\tcode === 0x05BF || // Mn       HEBREW POINT RAFE\n\t\t( 0x05C1 <= code && code <= 0x05C2 ) || // Mn   [2] HEBREW POINT SHIN DOT..HEBREW POINT SIN DOT\n\t\t( 0x05C4 <= code && code <= 0x05C5 ) || // Mn   [2] HEBREW MARK UPPER DOT..HEBREW MARK LOWER DOT\n\t\tcode === 0x05C7 || // Mn       HEBREW POINT QAMATS QATAN\n\t\t( 0x0610 <= code && code <= 0x061A ) || // Mn  [11] ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM..ARABIC SMALL KASRA\n\t\t( 0x064B <= code && code <= 0x065F ) || // Mn  [21] ARABIC FATHATAN..ARABIC WAVY HAMZA BELOW\n\t\tcode === 0x0670 || // Mn       ARABIC LETTER SUPERSCRIPT ALEF\n\t\t( 0x06D6 <= code && code <= 0x06DC ) || // Mn   [7] ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA..ARABIC SMALL HIGH SEEN\n\t\t( 0x06DF <= code && code <= 0x06E4 ) || // Mn   [6] ARABIC SMALL HIGH ROUNDED ZERO..ARABIC SMALL HIGH MADDA\n\t\t( 0x06E7 <= code && code <= 0x06E8 ) || // Mn   [2] ARABIC SMALL HIGH YEH..ARABIC SMALL HIGH NOON\n\t\t( 0x06EA <= code && code <= 0x06ED ) || // Mn   [4] ARABIC EMPTY CENTRE LOW STOP..ARABIC SMALL LOW MEEM\n\t\tcode === 0x0711 || // Mn       SYRIAC LETTER SUPERSCRIPT ALAPH\n\t\t( 0x0730 <= code && code <= 0x074A ) || // Mn  [27] SYRIAC PTHAHA ABOVE..SYRIAC BARREKH\n\t\t( 0x07A6 <= code && code <= 0x07B0 ) || // Mn  [11] THAANA ABAFILI..THAANA SUKUN\n\t\t( 0x07EB <= code && code <= 0x07F3 ) || // Mn   [9] NKO COMBINING SHORT HIGH TONE..NKO COMBINING DOUBLE DOT ABOVE\n\t\tcode === 0x07FD || // Mn       NKO DANTAYALAN\n\t\t( 0x0816 <= code && code <= 0x0819 ) || // Mn   [4] SAMARITAN MARK IN..SAMARITAN MARK DAGESH\n\t\t( 0x081B <= code && code <= 0x0823 ) || // Mn   [9] SAMARITAN MARK EPENTHETIC YUT..SAMARITAN VOWEL SIGN A\n\t\t( 0x0825 <= code && code <= 0x0827 ) || // Mn   [3] SAMARITAN VOWEL SIGN SHORT A..SAMARITAN VOWEL SIGN U\n\t\t( 0x0829 <= code && code <= 0x082D ) || // Mn   [5] SAMARITAN VOWEL SIGN LONG I..SAMARITAN MARK NEQUDAA\n\t\t( 0x0859 <= code && code <= 0x085B ) || // Mn   [3] MANDAIC AFFRICATION MARK..MANDAIC GEMINATION MARK\n\t\t( 0x08D3 <= code && code <= 0x08E1 ) || // Mn  [15] ARABIC SMALL LOW WAW..ARABIC SMALL HIGH SIGN SAFHA\n\t\t( 0x08E3 <= code && code <= 0x0902 ) || // Mn  [32] ARABIC TURNED DAMMA BELOW..DEVANAGARI SIGN ANUSVARA\n\t\tcode === 0x093A || // Mn       DEVANAGARI VOWEL SIGN OE\n\t\tcode === 0x093C || // Mn       DEVANAGARI SIGN NUKTA\n\t\t( 0x0941 <= code && code <= 0x0948 ) || // Mn   [8] DEVANAGARI VOWEL SIGN U..DEVANAGARI VOWEL SIGN AI\n\t\tcode === 0x094D || // Mn       DEVANAGARI SIGN VIRAMA\n\t\t( 0x0951 <= code && code <= 0x0957 ) || // Mn   [7] DEVANAGARI STRESS SIGN UDATTA..DEVANAGARI VOWEL SIGN UUE\n\t\t( 0x0962 <= code && code <= 0x0963 ) || // Mn   [2] DEVANAGARI VOWEL SIGN VOCALIC L..DEVANAGARI VOWEL SIGN VOCALIC LL\n\t\tcode === 0x0981 || // Mn       BENGALI SIGN CANDRABINDU\n\t\tcode === 0x09BC || // Mn       BENGALI SIGN NUKTA\n\t\tcode === 0x09BE || // Mc       BENGALI VOWEL SIGN AA\n\t\t( 0x09C1 <= code && code <= 0x09C4 ) || // Mn   [4] BENGALI VOWEL SIGN U..BENGALI VOWEL SIGN VOCALIC RR\n\t\tcode === 0x09CD || // Mn       BENGALI SIGN VIRAMA\n\t\tcode === 0x09D7 || // Mc       BENGALI AU LENGTH MARK\n\t\t( 0x09E2 <= code && code <= 0x09E3 ) || // Mn   [2] BENGALI VOWEL SIGN VOCALIC L..BENGALI VOWEL SIGN VOCALIC LL\n\t\tcode === 0x09FE || // Mn       BENGALI SANDHI MARK\n\t\t( 0x0A01 <= code && code <= 0x0A02 ) || // Mn   [2] GURMUKHI SIGN ADAK BINDI..GURMUKHI SIGN BINDI\n\t\tcode === 0x0A3C || // Mn       GURMUKHI SIGN NUKTA\n\t\t( 0x0A41 <= code && code <= 0x0A42 ) || // Mn   [2] GURMUKHI VOWEL SIGN U..GURMUKHI VOWEL SIGN UU\n\t\t( 0x0A47 <= code && code <= 0x0A48 ) || // Mn   [2] GURMUKHI VOWEL SIGN EE..GURMUKHI VOWEL SIGN AI\n\t\t( 0x0A4B <= code && code <= 0x0A4D ) || // Mn   [3] GURMUKHI VOWEL SIGN OO..GURMUKHI SIGN VIRAMA\n\t\tcode === 0x0A51 || // Mn       GURMUKHI SIGN UDAAT\n\t\t( 0x0A70 <= code && code <= 0x0A71 ) || // Mn   [2] GURMUKHI TIPPI..GURMUKHI ADDAK\n\t\tcode === 0x0A75 || // Mn       GURMUKHI SIGN YAKASH\n\t\t( 0x0A81 <= code && code <= 0x0A82 ) || // Mn   [2] GUJARATI SIGN CANDRABINDU..GUJARATI SIGN ANUSVARA\n\t\tcode === 0x0ABC || // Mn       GUJARATI SIGN NUKTA\n\t\t( 0x0AC1 <= code && code <= 0x0AC5 ) || // Mn   [5] GUJARATI VOWEL SIGN U..GUJARATI VOWEL SIGN CANDRA E\n\t\t( 0x0AC7 <= code && code <= 0x0AC8 ) || // Mn   [2] GUJARATI VOWEL SIGN E..GUJARATI VOWEL SIGN AI\n\t\tcode === 0x0ACD || // Mn       GUJARATI SIGN VIRAMA\n\t\t( 0x0AE2 <= code && code <= 0x0AE3 ) || // Mn   [2] GUJARATI VOWEL SIGN VOCALIC L..GUJARATI VOWEL SIGN VOCALIC LL\n\t\t( 0x0AFA <= code && code <= 0x0AFF ) || // Mn   [6] GUJARATI SIGN SUKUN..GUJARATI SIGN TWO-CIRCLE NUKTA ABOVE\n\t\tcode === 0x0B01 || // Mn       ORIYA SIGN CANDRABINDU\n\t\tcode === 0x0B3C || // Mn       ORIYA SIGN NUKTA\n\t\tcode === 0x0B3E || // Mc       ORIYA VOWEL SIGN AA\n\t\tcode === 0x0B3F || // Mn       ORIYA VOWEL SIGN I\n\t\t( 0x0B41 <= code && code <= 0x0B44 ) || // Mn   [4] ORIYA VOWEL SIGN U..ORIYA VOWEL SIGN VOCALIC RR\n\t\tcode === 0x0B4D || // Mn       ORIYA SIGN VIRAMA\n\t\t( 0x0B55 <= code && code <= 0x0B56 ) || // Mn   [2] ORIYA SIGN OVERLINE..ORIYA AI LENGTH MARK\n\t\tcode === 0x0B57 || // Mc       ORIYA AU LENGTH MARK\n\t\t( 0x0B62 <= code && code <= 0x0B63 ) || // Mn   [2] ORIYA VOWEL SIGN VOCALIC L..ORIYA VOWEL SIGN VOCALIC LL\n\t\tcode === 0x0B82 || // Mn       TAMIL SIGN ANUSVARA\n\t\tcode === 0x0BBE || // Mc       TAMIL VOWEL SIGN AA\n\t\tcode === 0x0BC0 || // Mn       TAMIL VOWEL SIGN II\n\t\tcode === 0x0BCD || // Mn       TAMIL SIGN VIRAMA\n\t\tcode === 0x0BD7 || // Mc       TAMIL AU LENGTH MARK\n\t\tcode === 0x0C00 || // Mn       TELUGU SIGN COMBINING CANDRABINDU ABOVE\n\t\tcode === 0x0C04 || // Mn       TELUGU SIGN COMBINING ANUSVARA ABOVE\n\t\t( 0x0C3E <= code && code <= 0x0C40 ) || // Mn   [3] TELUGU VOWEL SIGN AA..TELUGU VOWEL SIGN II\n\t\t( 0x0C46 <= code && code <= 0x0C48 ) || // Mn   [3] TELUGU VOWEL SIGN E..TELUGU VOWEL SIGN AI\n\t\t( 0x0C4A <= code && code <= 0x0C4D ) || // Mn   [4] TELUGU VOWEL SIGN O..TELUGU SIGN VIRAMA\n\t\t( 0x0C55 <= code && code <= 0x0C56 ) || // Mn   [2] TELUGU LENGTH MARK..TELUGU AI LENGTH MARK\n\t\t( 0x0C62 <= code && code <= 0x0C63 ) || // Mn   [2] TELUGU VOWEL SIGN VOCALIC L..TELUGU VOWEL SIGN VOCALIC LL\n\t\tcode === 0x0C81 || // Mn       KANNADA SIGN CANDRABINDU\n\t\tcode === 0x0CBC || // Mn       KANNADA SIGN NUKTA\n\t\tcode === 0x0CBF || // Mn       KANNADA VOWEL SIGN I\n\t\tcode === 0x0CC2 || // Mc       KANNADA VOWEL SIGN UU\n\t\tcode === 0x0CC6 || // Mn       KANNADA VOWEL SIGN E\n\t\t( 0x0CCC <= code && code <= 0x0CCD ) || // Mn   [2] KANNADA VOWEL SIGN AU..KANNADA SIGN VIRAMA\n\t\t( 0x0CD5 <= code && code <= 0x0CD6 ) || // Mc   [2] KANNADA LENGTH MARK..KANNADA AI LENGTH MARK\n\t\t( 0x0CE2 <= code && code <= 0x0CE3 ) || // Mn   [2] KANNADA VOWEL SIGN VOCALIC L..KANNADA VOWEL SIGN VOCALIC LL\n\t\t( 0x0D00 <= code && code <= 0x0D01 ) || // Mn   [2] MALAYALAM SIGN COMBINING ANUSVARA ABOVE..MALAYALAM SIGN CANDRABINDU\n\t\t( 0x0D3B <= code && code <= 0x0D3C ) || // Mn   [2] MALAYALAM SIGN VERTICAL BAR VIRAMA..MALAYALAM SIGN CIRCULAR VIRAMA\n\t\tcode === 0x0D3E || // Mc       MALAYALAM VOWEL SIGN AA\n\t\t( 0x0D41 <= code && code <= 0x0D44 ) || // Mn   [4] MALAYALAM VOWEL SIGN U..MALAYALAM VOWEL SIGN VOCALIC RR\n\t\tcode === 0x0D4D || // Mn       MALAYALAM SIGN VIRAMA\n\t\tcode === 0x0D57 || // Mc       MALAYALAM AU LENGTH MARK\n\t\t( 0x0D62 <= code && code <= 0x0D63 ) || // Mn   [2] MALAYALAM VOWEL SIGN VOCALIC L..MALAYALAM VOWEL SIGN VOCALIC LL\n\t\tcode === 0x0D81 || // Mn       SINHALA SIGN CANDRABINDU\n\t\tcode === 0x0DCA || // Mn       SINHALA SIGN AL-LAKUNA\n\t\tcode === 0x0DCF || // Mc       SINHALA VOWEL SIGN AELA-PILLA\n\t\t( 0x0DD2 <= code && code <= 0x0DD4 ) || // Mn   [3] SINHALA VOWEL SIGN KETTI IS-PILLA..SINHALA VOWEL SIGN KETTI PAA-PILLA\n\t\tcode === 0x0DD6 || // Mn       SINHALA VOWEL SIGN DIGA PAA-PILLA\n\t\tcode === 0x0DDF || // Mc       SINHALA VOWEL SIGN GAYANUKITTA\n\t\tcode === 0x0E31 || // Mn       THAI CHARACTER MAI HAN-AKAT\n\t\t( 0x0E34 <= code && code <= 0x0E3A ) || // Mn   [7] THAI CHARACTER SARA I..THAI CHARACTER PHINTHU\n\t\t( 0x0E47 <= code && code <= 0x0E4E ) || // Mn   [8] THAI CHARACTER MAITAIKHU..THAI CHARACTER YAMAKKAN\n\t\tcode === 0x0EB1 || // Mn       LAO VOWEL SIGN MAI KAN\n\t\t( 0x0EB4 <= code && code <= 0x0EBC ) || // Mn   [9] LAO VOWEL SIGN I..LAO SEMIVOWEL SIGN LO\n\t\t( 0x0EC8 <= code && code <= 0x0ECD ) || // Mn   [6] LAO TONE MAI EK..LAO NIGGAHITA\n\t\t( 0x0F18 <= code && code <= 0x0F19 ) || // Mn   [2] TIBETAN ASTROLOGICAL SIGN -KHYUD PA..TIBETAN ASTROLOGICAL SIGN SDONG TSHUGS\n\t\tcode === 0x0F35 || // Mn       TIBETAN MARK NGAS BZUNG NYI ZLA\n\t\tcode === 0x0F37 || // Mn       TIBETAN MARK NGAS BZUNG SGOR RTAGS\n\t\tcode === 0x0F39 || // Mn       TIBETAN MARK TSA -PHRU\n\t\t( 0x0F71 <= code && code <= 0x0F7E ) || // Mn  [14] TIBETAN VOWEL SIGN AA..TIBETAN SIGN RJES SU NGA RO\n\t\t( 0x0F80 <= code && code <= 0x0F84 ) || // Mn   [5] TIBETAN VOWEL SIGN REVERSED I..TIBETAN MARK HALANTA\n\t\t( 0x0F86 <= code && code <= 0x0F87 ) || // Mn   [2] TIBETAN SIGN LCI RTAGS..TIBETAN SIGN YANG RTAGS\n\t\t( 0x0F8D <= code && code <= 0x0F97 ) || // Mn  [11] TIBETAN SUBJOINED SIGN LCE TSA CAN..TIBETAN SUBJOINED LETTER JA\n\t\t( 0x0F99 <= code && code <= 0x0FBC ) || // Mn  [36] TIBETAN SUBJOINED LETTER NYA..TIBETAN SUBJOINED LETTER FIXED-FORM RA\n\t\tcode === 0x0FC6 || // Mn       TIBETAN SYMBOL PADMA GDAN\n\t\t( 0x102D <= code && code <= 0x1030 ) || // Mn   [4] MYANMAR VOWEL SIGN I..MYANMAR VOWEL SIGN UU\n\t\t( 0x1032 <= code && code <= 0x1037 ) || // Mn   [6] MYANMAR VOWEL SIGN AI..MYANMAR SIGN DOT BELOW\n\t\t( 0x1039 <= code && code <= 0x103A ) || // Mn   [2] MYANMAR SIGN VIRAMA..MYANMAR SIGN ASAT\n\t\t( 0x103D <= code && code <= 0x103E ) || // Mn   [2] MYANMAR CONSONANT SIGN MEDIAL WA..MYANMAR CONSONANT SIGN MEDIAL HA\n\t\t( 0x1058 <= code && code <= 0x1059 ) || // Mn   [2] MYANMAR VOWEL SIGN VOCALIC L..MYANMAR VOWEL SIGN VOCALIC LL\n\t\t( 0x105E <= code && code <= 0x1060 ) || // Mn   [3] MYANMAR CONSONANT SIGN MON MEDIAL NA..MYANMAR CONSONANT SIGN MON MEDIAL LA\n\t\t( 0x1071 <= code && code <= 0x1074 ) || // Mn   [4] MYANMAR VOWEL SIGN GEBA KAREN I..MYANMAR VOWEL SIGN KAYAH EE\n\t\tcode === 0x1082 || // Mn       MYANMAR CONSONANT SIGN SHAN MEDIAL WA\n\t\t( 0x1085 <= code && code <= 0x1086 ) || // Mn   [2] MYANMAR VOWEL SIGN SHAN E ABOVE..MYANMAR VOWEL SIGN SHAN FINAL Y\n\t\tcode === 0x108D || // Mn       MYANMAR SIGN SHAN COUNCIL EMPHATIC TONE\n\t\tcode === 0x109D || // Mn       MYANMAR VOWEL SIGN AITON AI\n\t\t( 0x135D <= code && code <= 0x135F ) || // Mn   [3] ETHIOPIC COMBINING GEMINATION AND VOWEL LENGTH MARK..ETHIOPIC COMBINING GEMINATION MARK\n\t\t( 0x1712 <= code && code <= 0x1714 ) || // Mn   [3] TAGALOG VOWEL SIGN I..TAGALOG SIGN VIRAMA\n\t\t( 0x1732 <= code && code <= 0x1734 ) || // Mn   [3] HANUNOO VOWEL SIGN I..HANUNOO SIGN PAMUDPOD\n\t\t( 0x1752 <= code && code <= 0x1753 ) || // Mn   [2] BUHID VOWEL SIGN I..BUHID VOWEL SIGN U\n\t\t( 0x1772 <= code && code <= 0x1773 ) || // Mn   [2] TAGBANWA VOWEL SIGN I..TAGBANWA VOWEL SIGN U\n\t\t( 0x17B4 <= code && code <= 0x17B5 ) || // Mn   [2] KHMER VOWEL INHERENT AQ..KHMER VOWEL INHERENT AA\n\t\t( 0x17B7 <= code && code <= 0x17BD ) || // Mn   [7] KHMER VOWEL SIGN I..KHMER VOWEL SIGN UA\n\t\tcode === 0x17C6 || // Mn       KHMER SIGN NIKAHIT\n\t\t( 0x17C9 <= code && code <= 0x17D3 ) || // Mn  [11] KHMER SIGN MUUSIKATOAN..KHMER SIGN BATHAMASAT\n\t\tcode === 0x17DD || // Mn       KHMER SIGN ATTHACAN\n\t\t( 0x180B <= code && code <= 0x180D ) || // Mn   [3] MONGOLIAN FREE VARIATION SELECTOR ONE..MONGOLIAN FREE VARIATION SELECTOR THREE\n\t\t( 0x1885 <= code && code <= 0x1886 ) || // Mn   [2] MONGOLIAN LETTER ALI GALI BALUDA..MONGOLIAN LETTER ALI GALI THREE BALUDA\n\t\tcode === 0x18A9 || // Mn       MONGOLIAN LETTER ALI GALI DAGALGA\n\t\t( 0x1920 <= code && code <= 0x1922 ) || // Mn   [3] LIMBU VOWEL SIGN A..LIMBU VOWEL SIGN U\n\t\t( 0x1927 <= code && code <= 0x1928 ) || // Mn   [2] LIMBU VOWEL SIGN E..LIMBU VOWEL SIGN O\n\t\tcode === 0x1932 || // Mn       LIMBU SMALL LETTER ANUSVARA\n\t\t( 0x1939 <= code && code <= 0x193B ) || // Mn   [3] LIMBU SIGN MUKPHRENG..LIMBU SIGN SA-I\n\t\t( 0x1A17 <= code && code <= 0x1A18 ) || // Mn   [2] BUGINESE VOWEL SIGN I..BUGINESE VOWEL SIGN U\n\t\tcode === 0x1A1B || // Mn       BUGINESE VOWEL SIGN AE\n\t\tcode === 0x1A56 || // Mn       TAI THAM CONSONANT SIGN MEDIAL LA\n\t\t( 0x1A58 <= code && code <= 0x1A5E ) || // Mn   [7] TAI THAM SIGN MAI KANG LAI..TAI THAM CONSONANT SIGN SA\n\t\tcode === 0x1A60 || // Mn       TAI THAM SIGN SAKOT\n\t\tcode === 0x1A62 || // Mn       TAI THAM VOWEL SIGN MAI SAT\n\t\t( 0x1A65 <= code && code <= 0x1A6C ) || // Mn   [8] TAI THAM VOWEL SIGN I..TAI THAM VOWEL SIGN OA BELOW\n\t\t( 0x1A73 <= code && code <= 0x1A7C ) || // Mn  [10] TAI THAM VOWEL SIGN OA ABOVE..TAI THAM SIGN KHUEN-LUE KARAN\n\t\tcode === 0x1A7F || // Mn       TAI THAM COMBINING CRYPTOGRAMMIC DOT\n\t\t( 0x1AB0 <= code && code <= 0x1ABD ) || // Mn  [14] COMBINING DOUBLED CIRCUMFLEX ACCENT..COMBINING PARENTHESES BELOW\n\t\tcode === 0x1ABE || // Me       COMBINING PARENTHESES OVERLAY\n\t\t( 0x1ABF <= code && code <= 0x1AC0 ) || // Mn   [2] COMBINING LATIN SMALL LETTER W BELOW..COMBINING LATIN SMALL LETTER TURNED W BELOW\n\t\t( 0x1B00 <= code && code <= 0x1B03 ) || // Mn   [4] BALINESE SIGN ULU RICEM..BALINESE SIGN SURANG\n\t\tcode === 0x1B34 || // Mn       BALINESE SIGN REREKAN\n\t\tcode === 0x1B35 || // Mc       BALINESE VOWEL SIGN TEDUNG\n\t\t( 0x1B36 <= code && code <= 0x1B3A) || // Mn   [5] BALINESE VOWEL SIGN ULU..BALINESE VOWEL SIGN RA REPA\n\t\tcode === 0x1B3C || // Mn       BALINESE VOWEL SIGN LA LENGA\n\t\tcode === 0x1B42 || // Mn       BALINESE VOWEL SIGN PEPET\n\t\t( 0x1B6B <= code && code <= 0x1B73 ) || // Mn   [9] BALINESE MUSICAL SYMBOL COMBINING TEGEH..BALINESE MUSICAL SYMBOL COMBINING GONG\n\t\t( 0x1B80 <= code && code <= 0x1B81 ) || // Mn   [2] SUNDANESE SIGN PANYECEK..SUNDANESE SIGN PANGLAYAR\n\t\t( 0x1BA2 <= code && code <= 0x1BA5 ) || // Mn   [4] SUNDANESE CONSONANT SIGN PANYAKRA..SUNDANESE VOWEL SIGN PANYUKU\n\t\t( 0x1BA8 <= code && code <= 0x1BA9 ) || // Mn   [2] SUNDANESE VOWEL SIGN PAMEPET..SUNDANESE VOWEL SIGN PANEULEUNG\n\t\t( 0x1BAB <= code && code <= 0x1BAD ) || // Mn   [3] SUNDANESE SIGN VIRAMA..SUNDANESE CONSONANT SIGN PASANGAN WA\n\t\tcode === 0x1BE6 || // Mn       BATAK SIGN TOMPI\n\t\t( 0x1BE8 <= code && code <= 0x1BE9) || // Mn   [2] BATAK VOWEL SIGN PAKPAK E..BATAK VOWEL SIGN EE\n\t\tcode === 0x1BED || // Mn       BATAK VOWEL SIGN KARO O\n\t\t( 0x1BEF <= code && code <= 0x1BF1 ) || // Mn   [3] BATAK VOWEL SIGN U FOR SIMALUNGUN SA..BATAK CONSONANT SIGN H\n\t\t( 0x1C2C <= code && code <= 0x1C33 ) || // Mn   [8] LEPCHA VOWEL SIGN E..LEPCHA CONSONANT SIGN T\n\t\t( 0x1C36 <= code && code <= 0x1C37 ) || // Mn   [2] LEPCHA SIGN RAN..LEPCHA SIGN NUKTA\n\t\t( 0x1CD0 <= code && code <= 0x1CD2 ) || // Mn   [3] VEDIC TONE KARSHANA..VEDIC TONE PRENKHA\n\t\t( 0x1CD4 <= code && code <= 0x1CE0 ) || // Mn  [13] VEDIC SIGN YAJURVEDIC MIDLINE SVARITA..VEDIC TONE RIGVEDIC KASHMIRI INDEPENDENT SVARITA\n\t\t( 0x1CE2 <= code && code <= 0x1CE8 ) || // Mn   [7] VEDIC SIGN VISARGA SVARITA..VEDIC SIGN VISARGA ANUDATTA WITH TAIL\n\t\tcode === 0x1CED || // Mn       VEDIC SIGN TIRYAK\n\t\tcode === 0x1CF4 || // Mn       VEDIC TONE CANDRA ABOVE\n\t\t( 0x1CF8 <= code && code <= 0x1CF9 ) || // Mn   [2] VEDIC TONE RING ABOVE..VEDIC TONE DOUBLE RING ABOVE\n\t\t( 0x1DC0 <= code && code <= 0x1DF9 ) || // Mn  [58] COMBINING DOTTED GRAVE ACCENT..COMBINING WIDE INVERTED BRIDGE BELOW\n\t\t( 0x1DFB <= code && code <= 0x1DFF ) || // Mn   [5] COMBINING DELETION MARK..COMBINING RIGHT ARROWHEAD AND DOWN ARROWHEAD BELOW\n\t\tcode === 0x200C || // Cf       ZERO WIDTH NON-JOINER\n\t\t( 0x20D0 <= code && code <= 0x20DC ) || // Mn  [13] COMBINING LEFT HARPOON ABOVE..COMBINING FOUR DOTS ABOVE\n\t\t( 0x20DD <= code && code <= 0x20E0 ) || // Me   [4] COMBINING ENCLOSING CIRCLE..COMBINING ENCLOSING CIRCLE BACKSLASH\n\t\tcode === 0x20E1 || // Mn       COMBINING LEFT RIGHT ARROW ABOVE\n\t\t( 0x20E2 <= code && code <= 0x20E4 ) || // Me   [3] COMBINING ENCLOSING SCREEN..COMBINING ENCLOSING UPWARD POINTING TRIANGLE\n\t\t( 0x20E5 <= code && code <= 0x20F0 ) || // Mn  [12] COMBINING REVERSE SOLIDUS OVERLAY..COMBINING ASTERISK ABOVE\n\t\t( 0x2CEF <= code && code <= 0x2CF1 ) || // Mn   [3] COPTIC COMBINING NI ABOVE..COPTIC COMBINING SPIRITUS LENIS\n\t\tcode === 0x2D7F || // Mn       TIFINAGH CONSONANT JOINER\n\t\t( 0x2DE0 <= code && code <= 0x2DFF ) || // Mn  [32] COMBINING CYRILLIC LETTER BE..COMBINING CYRILLIC LETTER IOTIFIED BIG YUS\n\t\t( 0x302A <= code && code <= 0x302D ) || // Mn   [4] IDEOGRAPHIC LEVEL TONE MARK..IDEOGRAPHIC ENTERING TONE MARK\n\t\t( 0x302E <= code && code <= 0x302F ) || // Mc   [2] HANGUL SINGLE DOT TONE MARK..HANGUL DOUBLE DOT TONE MARK\n\t\t( 0x3099 <= code && code <= 0x309A ) || // Mn   [2] COMBINING KATAKANA-HIRAGANA VOICED SOUND MARK..COMBINING KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK\n\t\tcode === 0xA66F || // Mn       COMBINING CYRILLIC VZMET\n\t\t( 0xA670 <= code && code <= 0xA672 ) || // Me   [3] COMBINING CYRILLIC TEN MILLIONS SIGN..COMBINING CYRILLIC THOUSAND MILLIONS SIGN\n\t\t( 0xA674 <= code && code <= 0xA67D ) || // Mn  [10] COMBINING CYRILLIC LETTER UKRAINIAN IE..COMBINING CYRILLIC PAYEROK\n\t\t( 0xA69E <= code && code <= 0xA69F ) || // Mn   [2] COMBINING CYRILLIC LETTER EF..COMBINING CYRILLIC LETTER IOTIFIED E\n\t\t( 0xA6F0 <= code && code <= 0xA6F1 ) || // Mn   [2] BAMUM COMBINING MARK KOQNDON..BAMUM COMBINING MARK TUKWENTIS\n\t\tcode === 0xA802 || // Mn       SYLOTI NAGRI SIGN DVISVARA\n\t\tcode === 0xA806 || // Mn       SYLOTI NAGRI SIGN HASANTA\n\t\tcode === 0xA80B || // Mn       SYLOTI NAGRI SIGN ANUSVARA\n\t\t( 0xA825 <= code && code <= 0xA826 ) || // Mn   [2] SYLOTI NAGRI VOWEL SIGN U..SYLOTI NAGRI VOWEL SIGN E\n\t\tcode === 0xA82C || // Mn       SYLOTI NAGRI SIGN ALTERNATE HASANTA\n\t\t( 0xA8C4 <= code && code <= 0xA8C5 ) || // Mn   [2] SAURASHTRA SIGN VIRAMA..SAURASHTRA SIGN CANDRABINDU\n\t\t( 0xA8E0 <= code && code <= 0xA8F1 ) || // Mn  [18] COMBINING DEVANAGARI DIGIT ZERO..COMBINING DEVANAGARI SIGN AVAGRAHA\n\t\tcode === 0xA8FF || // Mn       DEVANAGARI VOWEL SIGN AY\n\t\t( 0xA926 <= code && code <= 0xA92D ) || // Mn   [8] KAYAH LI VOWEL UE..KAYAH LI TONE CALYA PLOPHU\n\t\t( 0xA947 <= code && code <= 0xA951 ) || // Mn  [11] REJANG VOWEL SIGN I..REJANG CONSONANT SIGN R\n\t\t( 0xA980 <= code && code <= 0xA982 ) || // Mn   [3] JAVANESE SIGN PANYANGGA..JAVANESE SIGN LAYAR\n\t\tcode === 0xA9B3 || // Mn       JAVANESE SIGN CECAK TELU\n\t\t( 0xA9B6 <= code && code <= 0xA9B9 ) || // Mn   [4] JAVANESE VOWEL SIGN WULU..JAVANESE VOWEL SIGN SUKU MENDUT\n\t\t( 0xA9BC <= code && code <= 0xA9BD ) || // Mn   [2] JAVANESE VOWEL SIGN PEPET..JAVANESE CONSONANT SIGN KERET\n\t\tcode === 0xA9E5 || // Mn       MYANMAR SIGN SHAN SAW\n\t\t( 0xAA29 <= code && code <= 0xAA2E ) || // Mn   [6] CHAM VOWEL SIGN AA..CHAM VOWEL SIGN OE\n\t\t( 0xAA31 <= code && code <= 0xAA32 ) || // Mn   [2] CHAM VOWEL SIGN AU..CHAM VOWEL SIGN UE\n\t\t( 0xAA35 <= code && code <= 0xAA36 ) || // Mn   [2] CHAM CONSONANT SIGN LA..CHAM CONSONANT SIGN WA\n\t\tcode === 0xAA43 || // Mn       CHAM CONSONANT SIGN FINAL NG\n\t\tcode === 0xAA4C || // Mn       CHAM CONSONANT SIGN FINAL M\n\t\tcode === 0xAA7C || // Mn       MYANMAR SIGN TAI LAING TONE-2\n\t\tcode === 0xAAB0 || // Mn       TAI VIET MAI KANG\n\t\t( 0xAAB2 <= code && code <= 0xAAB4 ) || // Mn   [3] TAI VIET VOWEL I..TAI VIET VOWEL U\n\t\t( 0xAAB7 <= code && code <= 0xAAB8 ) || // Mn   [2] TAI VIET MAI KHIT..TAI VIET VOWEL IA\n\t\t( 0xAABE <= code && code <= 0xAABF ) || // Mn   [2] TAI VIET VOWEL AM..TAI VIET TONE MAI EK\n\t\tcode === 0xAAC1 || // Mn       TAI VIET TONE MAI THO\n\t\t( 0xAAEC <= code && code <= 0xAAED ) || // Mn   [2] MEETEI MAYEK VOWEL SIGN UU..MEETEI MAYEK VOWEL SIGN AAI\n\t\tcode === 0xAAF6 || // Mn       MEETEI MAYEK VIRAMA\n\t\tcode === 0xABE5 || // Mn       MEETEI MAYEK VOWEL SIGN ANAP\n\t\tcode === 0xABE8 || // Mn       MEETEI MAYEK VOWEL SIGN UNAP\n\t\tcode === 0xABED || // Mn       MEETEI MAYEK APUN IYEK\n\t\tcode === 0xFB1E || // Mn       HEBREW POINT JUDEO-SPANISH VARIKA\n\t\t( 0xFE00 <= code && code <= 0xFE0F ) || // Mn  [16] VARIATION SELECTOR-1..VARIATION SELECTOR-16\n\t\t( 0xFE20 <= code && code <= 0xFE2F ) || // Mn  [16] COMBINING LIGATURE LEFT HALF..COMBINING CYRILLIC TITLO RIGHT HALF\n\t\t( 0xFF9E <= code && code <= 0xFF9F ) || // Lm   [2] HALFWIDTH KATAKANA VOICED SOUND MARK..HALFWIDTH KATAKANA SEMI-VOICED SOUND MARK\n\t\tcode === 0x101FD || // Mn       PHAISTOS DISC SIGN COMBINING OBLIQUE STROKE\n\t\tcode === 0x102E0 || // Mn       COPTIC EPACT THOUSANDS MARK\n\t\t( 0x10376 <= code && code <= 0x1037A ) || // Mn   [5] COMBINING OLD PERMIC LETTER AN..COMBINING OLD PERMIC LETTER SII\n\t\t( 0x10A01 <= code && code <= 0x10A03 ) || // Mn   [3] KHAROSHTHI VOWEL SIGN I..KHAROSHTHI VOWEL SIGN VOCALIC R\n\t\t( 0x10A05 <= code && code <= 0x10A06 ) || // Mn   [2] KHAROSHTHI VOWEL SIGN E..KHAROSHTHI VOWEL SIGN O\n\t\t( 0x10A0C <= code && code <= 0x10A0F ) || // Mn   [4] KHAROSHTHI VOWEL LENGTH MARK..KHAROSHTHI SIGN VISARGA\n\t\t( 0x10A38 <= code && code <= 0x10A3A ) || // Mn   [3] KHAROSHTHI SIGN BAR ABOVE..KHAROSHTHI SIGN DOT BELOW\n\t\tcode === 0x10A3F || // Mn       KHAROSHTHI VIRAMA\n\t\t( 0x10AE5 <= code && code <= 0x10AE6 ) || // Mn   [2] MANICHAEAN ABBREVIATION MARK ABOVE..MANICHAEAN ABBREVIATION MARK BELOW\n\t\t( 0x10D24 <= code && code <= 0x10D27 ) || // Mn   [4] HANIFI ROHINGYA SIGN HARBAHAY..HANIFI ROHINGYA SIGN TASSI\n\t\t( 0x10EAB <= code && code <= 0x10EAC ) || // Mn   [2] YEZIDI COMBINING HAMZA MARK..YEZIDI COMBINING MADDA MARK\n\t\t( 0x10F46 <= code && code <= 0x10F50 ) || // Mn  [11] SOGDIAN COMBINING DOT BELOW..SOGDIAN COMBINING STROKE BELOW\n\t\tcode === 0x11001 || // Mn       BRAHMI SIGN ANUSVARA\n\t\t( 0x11038 <= code && code <= 0x11046 ) || // Mn  [15] BRAHMI VOWEL SIGN AA..BRAHMI VIRAMA\n\t\t( 0x1107F <= code && code <= 0x11081 ) || // Mn   [3] BRAHMI NUMBER JOINER..KAITHI SIGN ANUSVARA\n\t\t( 0x110B3 <= code && code <= 0x110B6 ) || // Mn   [4] KAITHI VOWEL SIGN U..KAITHI VOWEL SIGN AI\n\t\t( 0x110B9 <= code && code <= 0x110BA ) || // Mn   [2] KAITHI SIGN VIRAMA..KAITHI SIGN NUKTA\n\t\t( 0x11100 <= code && code <= 0x11102 ) || // Mn   [3] CHAKMA SIGN CANDRABINDU..CHAKMA SIGN VISARGA\n\t\t( 0x11127 <= code && code <= 0x1112B ) || // Mn   [5] CHAKMA VOWEL SIGN A..CHAKMA VOWEL SIGN UU\n\t\t( 0x1112D <= code && code <= 0x11134 ) || // Mn   [8] CHAKMA VOWEL SIGN AI..CHAKMA MAAYYAA\n\t\tcode === 0x11173 || // Mn       MAHAJANI SIGN NUKTA\n\t\t( 0x11180 <= code && code <= 0x11181 ) || // Mn   [2] SHARADA SIGN CANDRABINDU..SHARADA SIGN ANUSVARA\n\t\t( 0x111B6 <= code && code <= 0x111BE ) || // Mn   [9] SHARADA VOWEL SIGN U..SHARADA VOWEL SIGN O\n\t\t( 0x111C9 <= code && code <= 0x111CC ) || // Mn   [4] SHARADA SANDHI MARK..SHARADA EXTRA SHORT VOWEL MARK\n\t\tcode === 0x111CF || // Mn       SHARADA SIGN INVERTED CANDRABINDU\n\t\t( 0x1122F <= code && code <= 0x11231 ) || // Mn   [3] KHOJKI VOWEL SIGN U..KHOJKI VOWEL SIGN AI\n\t\tcode === 0x11234 || // Mn       KHOJKI SIGN ANUSVARA\n\t\t( 0x11236 <= code && code <= 0x11237 ) || // Mn   [2] KHOJKI SIGN NUKTA..KHOJKI SIGN SHADDA\n\t\tcode === 0x1123E || // Mn       KHOJKI SIGN SUKUN\n\t\tcode === 0x112DF || // Mn       KHUDAWADI SIGN ANUSVARA\n\t\t( 0x112E3 <= code && code <= 0x112EA ) || // Mn   [8] KHUDAWADI VOWEL SIGN U..KHUDAWADI SIGN VIRAMA\n\t\t( 0x11300 <= code && code <= 0x11301 ) || // Mn   [2] GRANTHA SIGN COMBINING ANUSVARA ABOVE..GRANTHA SIGN CANDRABINDU\n\t\t( 0x1133B <= code && code <= 0x1133C ) || // Mn   [2] COMBINING BINDU BELOW..GRANTHA SIGN NUKTA\n\t\tcode === 0x1133E || // Mc       GRANTHA VOWEL SIGN AA\n\t\tcode === 0x11340 || // Mn       GRANTHA VOWEL SIGN II\n\t\tcode === 0x11357 || // Mc       GRANTHA AU LENGTH MARK\n\t\t( 0x11366 <= code && code <= 0x1136C ) || // Mn   [7] COMBINING GRANTHA DIGIT ZERO..COMBINING GRANTHA DIGIT SIX\n\t\t( 0x11370 <= code && code <= 0x11374 ) || // Mn   [5] COMBINING GRANTHA LETTER A..COMBINING GRANTHA LETTER PA\n\t\t( 0x11438 <= code && code <= 0x1143F ) || // Mn   [8] NEWA VOWEL SIGN U..NEWA VOWEL SIGN AI\n\t\t( 0x11442 <= code && code <= 0x11444 ) || // Mn   [3] NEWA SIGN VIRAMA..NEWA SIGN ANUSVARA\n\t\tcode === 0x11446 || // Mn       NEWA SIGN NUKTA\n\t\tcode === 0x1145E || // Mn       NEWA SANDHI MARK\n\t\tcode === 0x114B0 || // Mc       TIRHUTA VOWEL SIGN AA\n\t\t( 0x114B3 <= code && code <= 0x114B8 ) || // Mn   [6] TIRHUTA VOWEL SIGN U..TIRHUTA VOWEL SIGN VOCALIC LL\n\t\tcode === 0x114BA || // Mn       TIRHUTA VOWEL SIGN SHORT E\n\t\tcode === 0x114BD || // Mc       TIRHUTA VOWEL SIGN SHORT O\n\t\t( 0x114BF <= code && code <= 0x114C0 ) || // Mn   [2] TIRHUTA SIGN CANDRABINDU..TIRHUTA SIGN ANUSVARA\n\t\t( 0x114C2 <= code && code <= 0x114C3 ) || // Mn   [2] TIRHUTA SIGN VIRAMA..TIRHUTA SIGN NUKTA\n\t\tcode === 0x115AF || // Mc       SIDDHAM VOWEL SIGN AA\n\t\t( 0x115B2 <= code && code <= 0x115B5 ) || // Mn   [4] SIDDHAM VOWEL SIGN U..SIDDHAM VOWEL SIGN VOCALIC RR\n\t\t( 0x115BC <= code && code <= 0x115BD ) || // Mn   [2] SIDDHAM SIGN CANDRABINDU..SIDDHAM SIGN ANUSVARA\n\t\t( 0x115BF <= code && code <= 0x115C0 ) || // Mn   [2] SIDDHAM SIGN VIRAMA..SIDDHAM SIGN NUKTA\n\t\t( 0x115DC <= code && code <= 0x115DD ) || // Mn   [2] SIDDHAM VOWEL SIGN ALTERNATE U..SIDDHAM VOWEL SIGN ALTERNATE UU\n\t\t( 0x11633 <= code && code <= 0x1163A ) || // Mn   [8] MODI VOWEL SIGN U..MODI VOWEL SIGN AI\n\t\tcode === 0x1163D || // Mn       MODI SIGN ANUSVARA\n\t\t( 0x1163F <= code && code <= 0x11640 ) || // Mn   [2] MODI SIGN VIRAMA..MODI SIGN ARDHACANDRA\n\t\tcode === 0x116AB || // Mn       TAKRI SIGN ANUSVARA\n\t\tcode === 0x116AD || // Mn       TAKRI VOWEL SIGN AA\n\t\t( 0x116B0 <= code && code <= 0x116B5 ) || // Mn   [6] TAKRI VOWEL SIGN U..TAKRI VOWEL SIGN AU\n\t\tcode === 0x116B7 || // Mn       TAKRI SIGN NUKTA\n\t\t( 0x1171D <= code && code <= 0x1171F ) || // Mn   [3] AHOM CONSONANT SIGN MEDIAL LA..AHOM CONSONANT SIGN MEDIAL LIGATING RA\n\t\t( 0x11722 <= code && code <= 0x11725 ) || // Mn   [4] AHOM VOWEL SIGN I..AHOM VOWEL SIGN UU\n\t\t( 0x11727 <= code && code <= 0x1172B ) || // Mn   [5] AHOM VOWEL SIGN AW..AHOM SIGN KILLER\n\t\t( 0x1182F <= code && code <= 0x11837 ) || // Mn   [9] DOGRA VOWEL SIGN U..DOGRA SIGN ANUSVARA\n\t\t( 0x11839 <= code && code <= 0x1183A ) || // Mn   [2] DOGRA SIGN VIRAMA..DOGRA SIGN NUKTA\n\t\tcode === 0x11930 || // Mc       DIVES AKURU VOWEL SIGN AA\n\t\t( 0x1193B <= code && code <= 0x1193C ) || // Mn   [2] DIVES AKURU SIGN ANUSVARA..DIVES AKURU SIGN CANDRABINDU\n\t\tcode === 0x1193E || // Mn       DIVES AKURU VIRAMA\n\t\tcode === 0x11943 || // Mn       DIVES AKURU SIGN NUKTA\n\t\t( 0x119D4 <= code && code <= 0x119D7 ) || // Mn   [4] NANDINAGARI VOWEL SIGN U..NANDINAGARI VOWEL SIGN VOCALIC RR\n\t\t( 0x119DA <= code && code <= 0x119DB ) || // Mn   [2] NANDINAGARI VOWEL SIGN E..NANDINAGARI VOWEL SIGN AI\n\t\tcode === 0x119E0 || // Mn       NANDINAGARI SIGN VIRAMA\n\t\t( 0x11A01 <= code && code <= 0x11A0A ) || // Mn  [10] ZANABAZAR SQUARE VOWEL SIGN I..ZANABAZAR SQUARE VOWEL LENGTH MARK\n\t\t( 0x11A33 <= code && code <= 0x11A38 ) || // Mn   [6] ZANABAZAR SQUARE FINAL CONSONANT MARK..ZANABAZAR SQUARE SIGN ANUSVARA\n\t\t( 0x11A3B <= code && code <= 0x11A3E ) || // Mn   [4] ZANABAZAR SQUARE CLUSTER-FINAL LETTER YA..ZANABAZAR SQUARE CLUSTER-FINAL LETTER VA\n\t\tcode === 0x11A47 || // Mn       ZANABAZAR SQUARE SUBJOINER\n\t\t( 0x11A51 <= code && code <= 0x11A56 ) || // Mn   [6] SOYOMBO VOWEL SIGN I..SOYOMBO VOWEL SIGN OE\n\t\t( 0x11A59 <= code && code <= 0x11A5B ) || // Mn   [3] SOYOMBO VOWEL SIGN VOCALIC R..SOYOMBO VOWEL LENGTH MARK\n\t\t( 0x11A8A <= code && code <= 0x11A96 ) || // Mn  [13] SOYOMBO FINAL CONSONANT SIGN G..SOYOMBO SIGN ANUSVARA\n\t\t( 0x11A98 <= code && code <= 0x11A99 ) || // Mn   [2] SOYOMBO GEMINATION MARK..SOYOMBO SUBJOINER\n\t\t( 0x11C30 <= code && code <= 0x11C36 ) || // Mn   [7] BHAIKSUKI VOWEL SIGN I..BHAIKSUKI VOWEL SIGN VOCALIC L\n\t\t( 0x11C38 <= code && code <= 0x11C3D ) || // Mn   [6] BHAIKSUKI VOWEL SIGN E..BHAIKSUKI SIGN ANUSVARA\n\t\tcode === 0x11C3F || // Mn       BHAIKSUKI SIGN VIRAMA\n\t\t( 0x11C92 <= code && code <= 0x11CA7 ) || // Mn  [22] MARCHEN SUBJOINED LETTER KA..MARCHEN SUBJOINED LETTER ZA\n\t\t( 0x11CAA <= code && code <= 0x11CB0 ) || // Mn   [7] MARCHEN SUBJOINED LETTER RA..MARCHEN VOWEL SIGN AA\n\t\t( 0x11CB2 <= code && code <= 0x11CB3 ) || // Mn   [2] MARCHEN VOWEL SIGN U..MARCHEN VOWEL SIGN E\n\t\t( 0x11CB5 <= code && code <= 0x11CB6 ) || // Mn   [2] MARCHEN SIGN ANUSVARA..MARCHEN SIGN CANDRABINDU\n\t\t( 0x11D31 <= code && code <= 0x11D36 ) || // Mn   [6] MASARAM GONDI VOWEL SIGN AA..MASARAM GONDI VOWEL SIGN VOCALIC R\n\t\tcode === 0x11D3A || // Mn       MASARAM GONDI VOWEL SIGN E\n\t\t( 0x11D3C <= code && code <= 0x11D3D ) || // Mn   [2] MASARAM GONDI VOWEL SIGN AI..MASARAM GONDI VOWEL SIGN O\n\t\t( 0x11D3F <= code && code <= 0x11D45 ) || // Mn   [7] MASARAM GONDI VOWEL SIGN AU..MASARAM GONDI VIRAMA\n\t\tcode === 0x11D47 || // Mn       MASARAM GONDI RA-KARA\n\t\t( 0x11D90 <= code && code <= 0x11D91 ) || // Mn   [2] GUNJALA GONDI VOWEL SIGN EE..GUNJALA GONDI VOWEL SIGN AI\n\t\tcode === 0x11D95 || // Mn       GUNJALA GONDI SIGN ANUSVARA\n\t\tcode === 0x11D97 || // Mn       GUNJALA GONDI VIRAMA\n\t\t( 0x11EF3 <= code && code <= 0x11EF4 ) || // Mn   [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n\t\t( 0x16AF0 <= code && code <= 0x16AF4 ) || // Mn   [5] BASSA VAH COMBINING HIGH TONE..BASSA VAH COMBINING HIGH-LOW TONE\n\t\t( 0x16B30 <= code && code <= 0x16B36 ) || // Mn   [7] PAHAWH HMONG MARK CIM TUB..PAHAWH HMONG MARK CIM TAUM\n\t\tcode === 0x16F4F || // Mn       MIAO SIGN CONSONANT MODIFIER BAR\n\t\t( 0x16F8F <= code && code <= 0x16F92 ) || // Mn   [4] MIAO TONE RIGHT..MIAO TONE BELOW\n\t\tcode === 0x16FE4 || // Mn       KHITAN SMALL SCRIPT FILLER\n\t\t( 0x1BC9D <= code && code <= 0x1BC9E ) || // Mn   [2] DUPLOYAN THICK LETTER SELECTOR..DUPLOYAN DOUBLE MARK\n\t\tcode === 0x1D165 || // Mc       MUSICAL SYMBOL COMBINING STEM\n\t\t( 0x1D167 <= code && code <= 0x1D169 ) || // Mn   [3] MUSICAL SYMBOL COMBINING TREMOLO-1..MUSICAL SYMBOL COMBINING TREMOLO-3\n\t\t( 0x1D16E <= code && code <= 0x1D172 ) || // Mc   [5] MUSICAL SYMBOL COMBINING FLAG-1..MUSICAL SYMBOL COMBINING FLAG-5\n\t\t( 0x1D17B <= code && code <= 0x1D182 ) || // Mn   [8] MUSICAL SYMBOL COMBINING ACCENT..MUSICAL SYMBOL COMBINING LOURE\n\t\t( 0x1D185 <= code && code <= 0x1D18B ) || // Mn   [7] MUSICAL SYMBOL COMBINING DOIT..MUSICAL SYMBOL COMBINING TRIPLE TONGUE\n\t\t( 0x1D1AA <= code && code <= 0x1D1AD ) || // Mn   [4] MUSICAL SYMBOL COMBINING DOWN BOW..MUSICAL SYMBOL COMBINING SNAP PIZZICATO\n\t\t( 0x1D242 <= code && code <= 0x1D244 ) || // Mn   [3] COMBINING GREEK MUSICAL TRISEME..COMBINING GREEK MUSICAL PENTASEME\n\t\t( 0x1DA00 <= code && code <= 0x1DA36 ) || // Mn  [55] SIGNWRITING HEAD RIM..SIGNWRITING AIR SUCKING IN\n\t\t( 0x1DA3B <= code && code <= 0x1DA6C ) || // Mn  [50] SIGNWRITING MOUTH CLOSED NEUTRAL..SIGNWRITING EXCITEMENT\n\t\tcode === 0x1DA75 || // Mn       SIGNWRITING UPPER BODY TILTING FROM HIP JOINTS\n\t\tcode === 0x1DA84 || // Mn       SIGNWRITING LOCATION HEAD NECK\n\t\t( 0x1DA9B <= code && code <= 0x1DA9F ) || // Mn   [5] SIGNWRITING FILL MODIFIER-2..SIGNWRITING FILL MODIFIER-6\n\t\t( 0x1DAA1 <= code && code <= 0x1DAAF ) || // Mn  [15] SIGNWRITING ROTATION MODIFIER-2..SIGNWRITING ROTATION MODIFIER-16\n\t\t( 0x1E000 <= code && code <= 0x1E006 ) || // Mn   [7] COMBINING GLAGOLITIC LETTER AZU..COMBINING GLAGOLITIC LETTER ZHIVETE\n\t\t( 0x1E008 <= code && code <= 0x1E018 ) || // Mn  [17] COMBINING GLAGOLITIC LETTER ZEMLJA..COMBINING GLAGOLITIC LETTER HERU\n\t\t( 0x1E01B <= code && code <= 0x1E021 ) || // Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n\t\t( 0x1E023 <= code && code <= 0x1E024 ) || // Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n\t\t( 0x1E026 <= code && code <= 0x1E02A ) || // Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n\t\t( 0x1E130 <= code && code <= 0x1E136 ) || // Mn   [7] NYIAKENG PUACHUE HMONG TONE-B..NYIAKENG PUACHUE HMONG TONE-D\n\t\t( 0x1E2EC <= code && code <= 0x1E2EF ) || // Mn   [4] WANCHO TONE TUP..WANCHO TONE KOINI\n\t\t( 0x1E8D0 <= code && code <= 0x1E8D6 ) || // Mn   [7] MENDE KIKAKUI COMBINING NUMBER TEENS..MENDE KIKAKUI COMBINING NUMBER MILLIONS\n\t\t( 0x1E944 <= code && code <= 0x1E94A ) || // Mn   [7] ADLAM ALIF LENGTHENER..ADLAM NUKTA\n\t\t( 0x1F3FB <= code && code <= 0x1F3FF ) || // Sk   [5] EMOJI MODIFIER FITZPATRICK TYPE-1-2..EMOJI MODIFIER FITZPATRICK TYPE-6\n\t\t( 0xE0020 <= code && code <= 0xE007F ) || // Cf  [96] TAG SPACE..CANCEL TAG\n\t\t( 0xE0100 <= code && code <= 0xE01EF ) // Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\n\t) {\n\t\treturn constants.Extend;\n\t}\n\tif (\n\t\t( 0x1F1E6 <= code && code <= 0x1F1FF ) // So  [26] REGIONAL INDICATOR SYMBOL LETTER A..REGIONAL INDICATOR SYMBOL LETTER Z\n\t) {\n\t\treturn constants.RegionalIndicator;\n\t}\n\tif (\n\t\tcode === 0x0903 || // Mc       DEVANAGARI SIGN VISARGA\n\t\tcode === 0x093B || // Mc       DEVANAGARI VOWEL SIGN OOE\n\t\t( 0x093E <= code && code <= 0x0940 ) || // Mc   [3] DEVANAGARI VOWEL SIGN AA..DEVANAGARI VOWEL SIGN II\n\t\t( 0x0949 <= code && code <= 0x094C ) || // Mc   [4] DEVANAGARI VOWEL SIGN CANDRA O..DEVANAGARI VOWEL SIGN AU\n\t\t( 0x094E <= code && code <= 0x094F ) || // Mc   [2] DEVANAGARI VOWEL SIGN PRISHTHAMATRA E..DEVANAGARI VOWEL SIGN AW\n\t\t( 0x0982 <= code && code <= 0x0983 ) || // Mc   [2] BENGALI SIGN ANUSVARA..BENGALI SIGN VISARGA\n\t\t( 0x09BF <= code && code <= 0x09C0 ) || // Mc   [2] BENGALI VOWEL SIGN I..BENGALI VOWEL SIGN II\n\t\t( 0x09C7 <= code && code <= 0x09C8 ) || // Mc   [2] BENGALI VOWEL SIGN E..BENGALI VOWEL SIGN AI\n\t\t( 0x09CB <= code && code <= 0x09CC ) || // Mc   [2] BENGALI VOWEL SIGN O..BENGALI VOWEL SIGN AU\n\t\tcode === 0x0A03 || // Mc       GURMUKHI SIGN VISARGA\n\t\t( 0x0A3E <= code && code <= 0x0A40 ) || // Mc   [3] GURMUKHI VOWEL SIGN AA..GURMUKHI VOWEL SIGN II\n\t\tcode === 0x0A83 || // Mc       GUJARATI SIGN VISARGA\n\t\t( 0x0ABE <= code && code <= 0x0AC0 ) || // Mc   [3] GUJARATI VOWEL SIGN AA..GUJARATI VOWEL SIGN II\n\t\tcode === 0x0AC9 || // Mc       GUJARATI VOWEL SIGN CANDRA O\n\t\t( 0x0ACB <= code && code <= 0x0ACC ) || // Mc   [2] GUJARATI VOWEL SIGN O..GUJARATI VOWEL SIGN AU\n\t\t( 0x0B02 <= code && code <= 0x0B03 ) || // Mc   [2] ORIYA SIGN ANUSVARA..ORIYA SIGN VISARGA\n\t\tcode === 0x0B40 || // Mc       ORIYA VOWEL SIGN II\n\t\t( 0x0B47 <= code && code <= 0x0B48 ) || // Mc   [2] ORIYA VOWEL SIGN E..ORIYA VOWEL SIGN AI\n\t\t( 0x0B4B <= code && code <= 0x0B4C ) || // Mc   [2] ORIYA VOWEL SIGN O..ORIYA VOWEL SIGN AU\n\t\tcode === 0x0BBF || // Mc       TAMIL VOWEL SIGN I\n\t\t( 0x0BC1 <= code && code <= 0x0BC2 ) || // Mc   [2] TAMIL VOWEL SIGN U..TAMIL VOWEL SIGN UU\n\t\t( 0x0BC6 <= code && code <= 0x0BC8 ) || // Mc   [3] TAMIL VOWEL SIGN E..TAMIL VOWEL SIGN AI\n\t\t( 0x0BCA <= code && code <= 0x0BCC ) || // Mc   [3] TAMIL VOWEL SIGN O..TAMIL VOWEL SIGN AU\n\t\t( 0x0C01 <= code && code <= 0x0C03 ) || // Mc   [3] TELUGU SIGN CANDRABINDU..TELUGU SIGN VISARGA\n\t\t( 0x0C41 <= code && code <= 0x0C44 ) || // Mc   [4] TELUGU VOWEL SIGN U..TELUGU VOWEL SIGN VOCALIC RR\n\t\t( 0x0C82 <= code && code <= 0x0C83 ) || // Mc   [2] KANNADA SIGN ANUSVARA..KANNADA SIGN VISARGA\n\t\tcode === 0x0CBE || // Mc       KANNADA VOWEL SIGN AA\n\t\t( 0x0CC0 <= code && code <= 0x0CC1 ) || // Mc   [2] KANNADA VOWEL SIGN II..KANNADA VOWEL SIGN U\n\t\t( 0x0CC3 <= code && code <= 0x0CC4 ) || // Mc   [2] KANNADA VOWEL SIGN VOCALIC R..KANNADA VOWEL SIGN VOCALIC RR\n\t\t( 0x0CC7 <= code && code <= 0x0CC8 ) || // Mc   [2] KANNADA VOWEL SIGN EE..KANNADA VOWEL SIGN AI\n\t\t( 0x0CCA <= code && code <= 0x0CCB ) || // Mc   [2] KANNADA VOWEL SIGN O..KANNADA VOWEL SIGN OO\n\t\t( 0x0D02 <= code && code <= 0x0D03 ) || // Mc   [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\n\t\t( 0x0D3F <= code && code <= 0x0D40 ) || // Mc   [2] MALAYALAM VOWEL SIGN I..MALAYALAM VOWEL SIGN II\n\t\t( 0x0D46 <= code && code <= 0x0D48 ) || // Mc   [3] MALAYALAM VOWEL SIGN E..MALAYALAM VOWEL SIGN AI\n\t\t( 0x0D4A <= code && code <= 0x0D4C ) || // Mc   [3] MALAYALAM VOWEL SIGN O..MALAYALAM VOWEL SIGN AU\n\t\t( 0x0D82 <= code && code <= 0x0D83 ) || // Mc   [2] SINHALA SIGN ANUSVARAYA..SINHALA SIGN VISARGAYA\n\t\t( 0x0DD0 <= code && code <= 0x0DD1 ) || // Mc   [2] SINHALA VOWEL SIGN KETTI AEDA-PILLA..SINHALA VOWEL SIGN DIGA AEDA-PILLA\n\t\t( 0x0DD8 <= code && code <= 0x0DDE ) || // Mc   [7] SINHALA VOWEL SIGN GAETTA-PILLA..SINHALA VOWEL SIGN KOMBUVA HAA GAYANUKITTA\n\t\t( 0x0DF2 <= code && code <= 0x0DF3 ) || // Mc   [2] SINHALA VOWEL SIGN DIGA GAETTA-PILLA..SINHALA VOWEL SIGN DIGA GAYANUKITTA\n\t\tcode === 0x0E33 || // Lo       THAI CHARACTER SARA AM\n\t\tcode === 0x0EB3 || // Lo       LAO VOWEL SIGN AM\n\t\t( 0x0F3E <= code && code <= 0x0F3F ) || // Mc   [2] TIBETAN SIGN YAR TSHES..TIBETAN SIGN MAR TSHES\n\t\tcode === 0x0F7F || // Mc       TIBETAN SIGN RNAM BCAD\n\t\tcode === 0x1031 || // Mc       MYANMAR VOWEL SIGN E\n\t\t( 0x103B <= code && code <= 0x103C ) || // Mc   [2] MYANMAR CONSONANT SIGN MEDIAL YA..MYANMAR CONSONANT SIGN MEDIAL RA\n\t\t( 0x1056 <= code && code <= 0x1057 ) || // Mc   [2] MYANMAR VOWEL SIGN VOCALIC R..MYANMAR VOWEL SIGN VOCALIC RR\n\t\tcode === 0x1084 || // Mc       MYANMAR VOWEL SIGN SHAN E\n\t\tcode === 0x17B6 || // Mc       KHMER VOWEL SIGN AA\n\t\t( 0x17BE <= code && code <= 0x17C5 ) || // Mc   [8] KHMER VOWEL SIGN OE..KHMER VOWEL SIGN AU\n\t\t( 0x17C7 <= code && code <= 0x17C8 ) || // Mc   [2] KHMER SIGN REAHMUK..KHMER SIGN YUUKALEAPINTU\n\t\t( 0x1923 <= code && code <= 0x1926 ) || // Mc   [4] LIMBU VOWEL SIGN EE..LIMBU VOWEL SIGN AU\n\t\t( 0x1929 <= code && code <= 0x192B ) || // Mc   [3] LIMBU SUBJOINED LETTER YA..LIMBU SUBJOINED LETTER WA\n\t\t( 0x1930 <= code && code <= 0x1931 ) || // Mc   [2] LIMBU SMALL LETTER KA..LIMBU SMALL LETTER NGA\n\t\t( 0x1933 <= code && code <= 0x1938 ) || // Mc   [6] LIMBU SMALL LETTER TA..LIMBU SMALL LETTER LA\n\t\t( 0x1A19 <= code && code <= 0x1A1A ) || // Mc   [2] BUGINESE VOWEL SIGN E..BUGINESE VOWEL SIGN O\n\t\tcode === 0x1A55 || // Mc       TAI THAM CONSONANT SIGN MEDIAL RA\n\t\tcode === 0x1A57 || // Mc       TAI THAM CONSONANT SIGN LA TANG LAI\n\t\t( 0x1A6D <= code && code <= 0x1A72 ) || // Mc   [6] TAI THAM VOWEL SIGN OY..TAI THAM VOWEL SIGN THAM AI\n\t\tcode === 0x1B04 || // Mc       BALINESE SIGN BISAH\n\t\tcode === 0x1B3B || // Mc       BALINESE VOWEL SIGN RA REPA TEDUNG\n\t\t( 0x1B3D <= code && code <= 0x1B41 ) || // Mc   [5] BALINESE VOWEL SIGN LA LENGA TEDUNG..BALINESE VOWEL SIGN TALING REPA TEDUNG\n\t\t( 0x1B43 <= code && code <= 0x1B44 ) || // Mc   [2] BALINESE VOWEL SIGN PEPET TEDUNG..BALINESE ADEG ADEG\n\t\tcode === 0x1B82 || // Mc       SUNDANESE SIGN PANGWISAD\n\t\tcode === 0x1BA1 || // Mc       SUNDANESE CONSONANT SIGN PAMINGKAL\n\t\t( 0x1BA6 <= code && code <= 0x1BA7 ) || // Mc   [2] SUNDANESE VOWEL SIGN PANAELAENG..SUNDANESE VOWEL SIGN PANOLONG\n\t\tcode === 0x1BAA || // Mc       SUNDANESE SIGN PAMAAEH\n\t\tcode === 0x1BE7 || // Mc       BATAK VOWEL SIGN E\n\t\t( 0x1BEA <= code && code <= 0x1BEC ) || // Mc   [3] BATAK VOWEL SIGN I..BATAK VOWEL SIGN O\n\t\tcode === 0x1BEE || // Mc       BATAK VOWEL SIGN U\n\t\t( 0x1BF2 <= code && code <= 0x1BF3 ) || // Mc   [2] BATAK PANGOLAT..BATAK PANONGONAN\n\t\t( 0x1C24 <= code && code <= 0x1C2B ) || // Mc   [8] LEPCHA SUBJOINED LETTER YA..LEPCHA VOWEL SIGN UU\n\t\t( 0x1C34 <= code && code <= 0x1C35 ) || // Mc   [2] LEPCHA CONSONANT SIGN NYIN-DO..LEPCHA CONSONANT SIGN KANG\n\t\tcode === 0x1CE1 || // Mc       VEDIC TONE ATHARVAVEDIC INDEPENDENT SVARITA\n\t\tcode === 0x1CF7 || // Mc       VEDIC SIGN ATIKRAMA\n\t\t( 0xA823 <= code && code <= 0xA824 ) || // Mc   [2] SYLOTI NAGRI VOWEL SIGN A..SYLOTI NAGRI VOWEL SIGN I\n\t\tcode === 0xA827 || // Mc       SYLOTI NAGRI VOWEL SIGN OO\n\t\t( 0xA880 <= code && code <= 0xA881 ) || // Mc   [2] SAURASHTRA SIGN ANUSVARA..SAURASHTRA SIGN VISARGA\n\t\t( 0xA8B4 <= code && code <= 0xA8C3 ) || // Mc  [16] SAURASHTRA CONSONANT SIGN HAARU..SAURASHTRA VOWEL SIGN AU\n\t\t( 0xA952 <= code && code <= 0xA953 ) || // Mc   [2] REJANG CONSONANT SIGN H..REJANG VIRAMA\n\t\tcode === 0xA983 || // Mc       JAVANESE SIGN WIGNYAN\n\t\t( 0xA9B4 <= code && code <= 0xA9B5 ) || // Mc   [2] JAVANESE VOWEL SIGN TARUNG..JAVANESE VOWEL SIGN TOLONG\n\t\t( 0xA9BA <= code && code <= 0xA9BB ) || // Mc   [2] JAVANESE VOWEL SIGN TALING..JAVANESE VOWEL SIGN DIRGA MURE\n\t\t( 0xA9BE <= code && code <= 0xA9C0 ) || // Mc   [3] JAVANESE CONSONANT SIGN PENGKAL..JAVANESE PANGKON\n\t\t( 0xAA2F <= code && code <= 0xAA30 ) || // Mc   [2] CHAM VOWEL SIGN O..CHAM VOWEL SIGN AI\n\t\t( 0xAA33 <= code && code <= 0xAA34 ) || // Mc   [2] CHAM CONSONANT SIGN YA..CHAM CONSONANT SIGN RA\n\t\tcode === 0xAA4D || // Mc       CHAM CONSONANT SIGN FINAL H\n\t\tcode === 0xAAEB || // Mc       MEETEI MAYEK VOWEL SIGN II\n\t\t( 0xAAEE <= code && code <= 0xAAEF ) || // Mc   [2] MEETEI MAYEK VOWEL SIGN AU..MEETEI MAYEK VOWEL SIGN AAU\n\t\tcode === 0xAAF5 || // Mc       MEETEI MAYEK VOWEL SIGN VISARGA\n\t\t( 0xABE3 <= code && code <= 0xABE4 ) || // Mc   [2] MEETEI MAYEK VOWEL SIGN ONAP..MEETEI MAYEK VOWEL SIGN INAP\n\t\t( 0xABE6 <= code && code <= 0xABE7 ) || // Mc   [2] MEETEI MAYEK VOWEL SIGN YENAP..MEETEI MAYEK VOWEL SIGN SOUNAP\n\t\t( 0xABE9 <= code && code <= 0xABEA ) || // Mc   [2] MEETEI MAYEK VOWEL SIGN CHEINAP..MEETEI MAYEK VOWEL SIGN NUNG\n\t\tcode === 0xABEC || // Mc       MEETEI MAYEK LUM IYEK\n\t\tcode === 0x11000 || // Mc       BRAHMI SIGN CANDRABINDU\n\t\tcode === 0x11002 || // Mc       BRAHMI SIGN VISARGA\n\t\tcode === 0x11082 || // Mc       KAITHI SIGN VISARGA\n\t\t( 0x110B0 <= code && code <= 0x110B2 ) || // Mc   [3] KAITHI VOWEL SIGN AA..KAITHI VOWEL SIGN II\n\t\t( 0x110B7 <= code && code <= 0x110B8 ) || // Mc   [2] KAITHI VOWEL SIGN O..KAITHI VOWEL SIGN AU\n\t\tcode === 0x1112C || // Mc       CHAKMA VOWEL SIGN E\n\t\t( 0x11145 <= code && code <= 0x11146 ) || // Mc   [2] CHAKMA VOWEL SIGN AA..CHAKMA VOWEL SIGN EI\n\t\tcode === 0x11182 || // Mc       SHARADA SIGN VISARGA\n\t\t( 0x111B3 <= code && code <= 0x111B5 ) || // Mc   [3] SHARADA VOWEL SIGN AA..SHARADA VOWEL SIGN II\n\t\t( 0x111BF <= code && code <= 0x111C0 ) || // Mc   [2] SHARADA VOWEL SIGN AU..SHARADA SIGN VIRAMA\n\t\tcode === 0x111CE || // Mc       SHARADA VOWEL SIGN PRISHTHAMATRA E\n\t\t( 0x1122C <= code && code <= 0x1122E ) || // Mc   [3] KHOJKI VOWEL SIGN AA..KHOJKI VOWEL SIGN II\n\t\t( 0x11232 <= code && code <= 0x11233 ) || // Mc   [2] KHOJKI VOWEL SIGN O..KHOJKI VOWEL SIGN AU\n\t\tcode === 0x11235 || // Mc       KHOJKI SIGN VIRAMA\n\t\t( 0x112E0 <= code && code <= 0x112E2 ) || // Mc   [3] KHUDAWADI VOWEL SIGN AA..KHUDAWADI VOWEL SIGN II\n\t\t( 0x11302 <= code && code <= 0x11303 ) || // Mc   [2] GRANTHA SIGN ANUSVARA..GRANTHA SIGN VISARGA\n\t\tcode === 0x1133F || // Mc       GRANTHA VOWEL SIGN I\n\t\t( 0x11341 <= code && code <= 0x11344 ) || // Mc   [4] GRANTHA VOWEL SIGN U..GRANTHA VOWEL SIGN VOCALIC RR\n\t\t( 0x11347 <= code && code <= 0x11348 ) || // Mc   [2] GRANTHA VOWEL SIGN EE..GRANTHA VOWEL SIGN AI\n\t\t( 0x1134B <= code && code <= 0x1134D ) || // Mc   [3] GRANTHA VOWEL SIGN OO..GRANTHA SIGN VIRAMA\n\t\t( 0x11362 <= code && code <= 0x11363 ) || // Mc   [2] GRANTHA VOWEL SIGN VOCALIC L..GRANTHA VOWEL SIGN VOCALIC LL\n\t\t( 0x11435 <= code && code <= 0x11437 ) || // Mc   [3] NEWA VOWEL SIGN AA..NEWA VOWEL SIGN II\n\t\t( 0x11440 <= code && code <= 0x11441 ) || // Mc   [2] NEWA VOWEL SIGN O..NEWA VOWEL SIGN AU\n\t\tcode === 0x11445 || // Mc       NEWA SIGN VISARGA\n\t\t( 0x114B1 <= code && code <= 0x114B2 ) || // Mc   [2] TIRHUTA VOWEL SIGN I..TIRHUTA VOWEL SIGN II\n\t\tcode === 0x114B9 || // Mc       TIRHUTA VOWEL SIGN E\n\t\t( 0x114BB <= code && code <= 0x114BC ) || // Mc   [2] TIRHUTA VOWEL SIGN AI..TIRHUTA VOWEL SIGN O\n\t\tcode === 0x114BE || // Mc       TIRHUTA VOWEL SIGN AU\n\t\tcode === 0x114C1 || // Mc       TIRHUTA SIGN VISARGA\n\t\t( 0x115B0 <= code && code <= 0x115B1 ) || // Mc   [2] SIDDHAM VOWEL SIGN I..SIDDHAM VOWEL SIGN II\n\t\t( 0x115B8 <= code && code <= 0x115BB ) || // Mc   [4] SIDDHAM VOWEL SIGN E..SIDDHAM VOWEL SIGN AU\n\t\tcode === 0x115BE || // Mc       SIDDHAM SIGN VISARGA\n\t\t( 0x11630 <= code && code <= 0x11632 ) || // Mc   [3] MODI VOWEL SIGN AA..MODI VOWEL SIGN II\n\t\t( 0x1163B <= code && code <= 0x1163C ) || // Mc   [2] MODI VOWEL SIGN O..MODI VOWEL SIGN AU\n\t\tcode === 0x1163E || // Mc       MODI SIGN VISARGA\n\t\tcode === 0x116AC || // Mc       TAKRI SIGN VISARGA\n\t\t( 0x116AE <= code && code <= 0x116AF ) || // Mc   [2] TAKRI VOWEL SIGN I..TAKRI VOWEL SIGN II\n\t\tcode === 0x116B6 || // Mc       TAKRI SIGN VIRAMA\n\t\t( 0x11720 <= code && code <= 0x11721 ) || // Mc   [2] AHOM VOWEL SIGN A..AHOM VOWEL SIGN AA\n\t\tcode === 0x11726 || // Mc       AHOM VOWEL SIGN E\n\t\t( 0x1182C <= code && code <= 0x1182E ) || // Mc   [3] DOGRA VOWEL SIGN AA..DOGRA VOWEL SIGN II\n\t\tcode === 0x11838 || // Mc       DOGRA SIGN VISARGA\n\t\t( 0x11931 <= code && code <= 0x11935 ) || // Mc   [5] DIVES AKURU VOWEL SIGN I..DIVES AKURU VOWEL SIGN E\n\t\t( 0x11937 <= code && code <= 0x11938 ) || // Mc   [2] DIVES AKURU VOWEL SIGN AI..DIVES AKURU VOWEL SIGN O\n\t\tcode === 0x1193D || // Mc       DIVES AKURU SIGN HALANTA\n\t\tcode === 0x11940 || // Mc       DIVES AKURU MEDIAL YA\n\t\tcode === 0x11942 || // Mc       DIVES AKURU MEDIAL RA\n\t\t( 0x119D1 <= code && code <= 0x119D3 ) || // Mc   [3] NANDINAGARI VOWEL SIGN AA..NANDINAGARI VOWEL SIGN II\n\t\t( 0x119DC <= code && code <= 0x119DF ) || // Mc   [4] NANDINAGARI VOWEL SIGN O..NANDINAGARI SIGN VISARGA\n\t\tcode === 0x119E4 || // Mc       NANDINAGARI VOWEL SIGN PRISHTHAMATRA E\n\t\tcode === 0x11A39 || // Mc       ZANABAZAR SQUARE SIGN VISARGA\n\t\t( 0x11A57 <= code && code <= 0x11A58 ) || // Mc   [2] SOYOMBO VOWEL SIGN AI..SOYOMBO VOWEL SIGN AU\n\t\tcode === 0x11A97 || // Mc       SOYOMBO SIGN VISARGA\n\t\tcode === 0x11C2F || // Mc       BHAIKSUKI VOWEL SIGN AA\n\t\tcode === 0x11C3E || // Mc       BHAIKSUKI SIGN VISARGA\n\t\tcode === 0x11CA9 || // Mc       MARCHEN SUBJOINED LETTER YA\n\t\tcode === 0x11CB1 || // Mc       MARCHEN VOWEL SIGN I\n\t\tcode === 0x11CB4 || // Mc       MARCHEN VOWEL SIGN O\n\t\t( 0x11D8A <= code && code <= 0x11D8E ) || // Mc   [5] GUNJALA GONDI VOWEL SIGN AA..GUNJALA GONDI VOWEL SIGN UU\n\t\t( 0x11D93 <= code && code <= 0x11D94 ) || // Mc   [2] GUNJALA GONDI VOWEL SIGN OO..GUNJALA GONDI VOWEL SIGN AU\n\t\tcode === 0x11D96 || // Mc       GUNJALA GONDI SIGN VISARGA\n\t\t( 0x11EF5 <= code && code <= 0x11EF6 ) || // Mc   [2] MAKASAR VOWEL SIGN E..MAKASAR VOWEL SIGN O\n\t\t( 0x16F51 <= code && code <= 0x16F87 ) || // Mc  [55] MIAO SIGN ASPIRATION..MIAO VOWEL SIGN UI\n\t\t( 0x16FF0 <= code && code <= 0x16FF1 ) || // Mc   [2] VIETNAMESE ALTERNATE READING MARK CA..VIETNAMESE ALTERNATE READING MARK NHAY\n\t\tcode === 0x1D166 || // Mc       MUSICAL SYMBOL COMBINING SPRECHGESANG STEM\n\t\tcode === 0x1D16D // Mc       MUSICAL SYMBOL COMBINING AUGMENTATION DOT\n\t) {\n\t\treturn constants.SpacingMark;\n\t}\n\tif (\n\t\t( 0x1100 <= code && code <= 0x115F ) || // Lo  [96] HANGUL CHOSEONG KIYEOK..HANGUL CHOSEONG FILLER\n\t\t( 0xA960 <= code && code <= 0xA97C ) // Lo  [29] HANGUL CHOSEONG TIKEUT-MIEUM..HANGUL CHOSEONG SSANGYEORINHIEUH\n\t) {\n\t\treturn constants.L;\n\t}\n\tif (\n\t\t( 0x1160 <= code && code <= 0x11A7 ) || // Lo  [72] HANGUL JUNGSEONG FILLER..HANGUL JUNGSEONG O-YAE\n\t\t( 0xD7B0 <= code && code <= 0xD7C6 ) // Lo  [23] HANGUL JUNGSEONG O-YEO..HANGUL JUNGSEONG ARAEA-E\n\t) {\n\t\treturn constants.V;\n\t}\n\tif (\n\t\t( 0x11A8 <= code && code <= 0x11FF ) || // Lo  [88] HANGUL JONGSEONG KIYEOK..HANGUL JONGSEONG SSANGNIEUN\n\t\t( 0xD7CB <= code && code <= 0xD7FB ) // Lo  [49] HANGUL JONGSEONG NIEUN-RIEUL..HANGUL JONGSEONG PHIEUPH-THIEUTH\n\t) {\n\t\treturn constants.T;\n\t}\n\tif (\n\t\tcode === 0xAC00 || // Lo       HANGUL SYLLABLE GA\n\t\tcode === 0xAC1C || // Lo       HANGUL SYLLABLE GAE\n\t\tcode === 0xAC38 || // Lo       HANGUL SYLLABLE GYA\n\t\tcode === 0xAC54 || // Lo       HANGUL SYLLABLE GYAE\n\t\tcode === 0xAC70 || // Lo       HANGUL SYLLABLE GEO\n\t\tcode === 0xAC8C || // Lo       HANGUL SYLLABLE GE\n\t\tcode === 0xACA8 || // Lo       HANGUL SYLLABLE GYEO\n\t\tcode === 0xACC4 || // Lo       HANGUL SYLLABLE GYE\n\t\tcode === 0xACE0 || // Lo       HANGUL SYLLABLE GO\n\t\tcode === 0xACFC || // Lo       HANGUL SYLLABLE GWA\n\t\tcode === 0xAD18 || // Lo       HANGUL SYLLABLE GWAE\n\t\tcode === 0xAD34 || // Lo       HANGUL SYLLABLE GOE\n\t\tcode === 0xAD50 || // Lo       HANGUL SYLLABLE GYO\n\t\tcode === 0xAD6C || // Lo       HANGUL SYLLABLE GU\n\t\tcode === 0xAD88 || // Lo       HANGUL SYLLABLE GWEO\n\t\tcode === 0xADA4 || // Lo       HANGUL SYLLABLE GWE\n\t\tcode === 0xADC0 || // Lo       HANGUL SYLLABLE GWI\n\t\tcode === 0xADDC || // Lo       HANGUL SYLLABLE GYU\n\t\tcode === 0xADF8 || // Lo       HANGUL SYLLABLE GEU\n\t\tcode === 0xAE14 || // Lo       HANGUL SYLLABLE GYI\n\t\tcode === 0xAE30 || // Lo       HANGUL SYLLABLE GI\n\t\tcode === 0xAE4C || // Lo       HANGUL SYLLABLE GGA\n\t\tcode === 0xAE68 || // Lo       HANGUL SYLLABLE GGAE\n\t\tcode === 0xAE84 || // Lo       HANGUL SYLLABLE GGYA\n\t\tcode === 0xAEA0 || // Lo       HANGUL SYLLABLE GGYAE\n\t\tcode === 0xAEBC || // Lo       HANGUL SYLLABLE GGEO\n\t\tcode === 0xAED8 || // Lo       HANGUL SYLLABLE GGE\n\t\tcode === 0xAEF4 || // Lo       HANGUL SYLLABLE GGYEO\n\t\tcode === 0xAF10 || // Lo       HANGUL SYLLABLE GGYE\n\t\tcode === 0xAF2C || // Lo       HANGUL SYLLABLE GGO\n\t\tcode === 0xAF48 || // Lo       HANGUL SYLLABLE GGWA\n\t\tcode === 0xAF64 || // Lo       HANGUL SYLLABLE GGWAE\n\t\tcode === 0xAF80 || // Lo       HANGUL SYLLABLE GGOE\n\t\tcode === 0xAF9C || // Lo       HANGUL SYLLABLE GGYO\n\t\tcode === 0xAFB8 || // Lo       HANGUL SYLLABLE GGU\n\t\tcode === 0xAFD4 || // Lo       HANGUL SYLLABLE GGWEO\n\t\tcode === 0xAFF0 || // Lo       HANGUL SYLLABLE GGWE\n\t\tcode === 0xB00C || // Lo       HANGUL SYLLABLE GGWI\n\t\tcode === 0xB028 || // Lo       HANGUL SYLLABLE GGYU\n\t\tcode === 0xB044 || // Lo       HANGUL SYLLABLE GGEU\n\t\tcode === 0xB060 || // Lo       HANGUL SYLLABLE GGYI\n\t\tcode === 0xB07C || // Lo       HANGUL SYLLABLE GGI\n\t\tcode === 0xB098 || // Lo       HANGUL SYLLABLE NA\n\t\tcode === 0xB0B4 || // Lo       HANGUL SYLLABLE NAE\n\t\tcode === 0xB0D0 || // Lo       HANGUL SYLLABLE NYA\n\t\tcode === 0xB0EC || // Lo       HANGUL SYLLABLE NYAE\n\t\tcode === 0xB108 || // Lo       HANGUL SYLLABLE NEO\n\t\tcode === 0xB124 || // Lo       HANGUL SYLLABLE NE\n\t\tcode === 0xB140 || // Lo       HANGUL SYLLABLE NYEO\n\t\tcode === 0xB15C || // Lo       HANGUL SYLLABLE NYE\n\t\tcode === 0xB178 || // Lo       HANGUL SYLLABLE NO\n\t\tcode === 0xB194 || // Lo       HANGUL SYLLABLE NWA\n\t\tcode === 0xB1B0 || // Lo       HANGUL SYLLABLE NWAE\n\t\tcode === 0xB1CC || // Lo       HANGUL SYLLABLE NOE\n\t\tcode === 0xB1E8 || // Lo       HANGUL SYLLABLE NYO\n\t\tcode === 0xB204 || // Lo       HANGUL SYLLABLE NU\n\t\tcode === 0xB220 || // Lo       HANGUL SYLLABLE NWEO\n\t\tcode === 0xB23C || // Lo       HANGUL SYLLABLE NWE\n\t\tcode === 0xB258 || // Lo       HANGUL SYLLABLE NWI\n\t\tcode === 0xB274 || // Lo       HANGUL SYLLABLE NYU\n\t\tcode === 0xB290 || // Lo       HANGUL SYLLABLE NEU\n\t\tcode === 0xB2AC || // Lo       HANGUL SYLLABLE NYI\n\t\tcode === 0xB2C8 || // Lo       HANGUL SYLLABLE NI\n\t\tcode === 0xB2E4 || // Lo       HANGUL SYLLABLE DA\n\t\tcode === 0xB300 || // Lo       HANGUL SYLLABLE DAE\n\t\tcode === 0xB31C || // Lo       HANGUL SYLLABLE DYA\n\t\tcode === 0xB338 || // Lo       HANGUL SYLLABLE DYAE\n\t\tcode === 0xB354 || // Lo       HANGUL SYLLABLE DEO\n\t\tcode === 0xB370 || // Lo       HANGUL SYLLABLE DE\n\t\tcode === 0xB38C || // Lo       HANGUL SYLLABLE DYEO\n\t\tcode === 0xB3A8 || // Lo       HANGUL SYLLABLE DYE\n\t\tcode === 0xB3C4 || // Lo       HANGUL SYLLABLE DO\n\t\tcode === 0xB3E0 || // Lo       HANGUL SYLLABLE DWA\n\t\tcode === 0xB3FC || // Lo       HANGUL SYLLABLE DWAE\n\t\tcode === 0xB418 || // Lo       HANGUL SYLLABLE DOE\n\t\tcode === 0xB434 || // Lo       HANGUL SYLLABLE DYO\n\t\tcode === 0xB450 || // Lo       HANGUL SYLLABLE DU\n\t\tcode === 0xB46C || // Lo       HANGUL SYLLABLE DWEO\n\t\tcode === 0xB488 || // Lo       HANGUL SYLLABLE DWE\n\t\tcode === 0xB4A4 || // Lo       HANGUL SYLLABLE DWI\n\t\tcode === 0xB4C0 || // Lo       HANGUL SYLLABLE DYU\n\t\tcode === 0xB4DC || // Lo       HANGUL SYLLABLE DEU\n\t\tcode === 0xB4F8 || // Lo       HANGUL SYLLABLE DYI\n\t\tcode === 0xB514 || // Lo       HANGUL SYLLABLE DI\n\t\tcode === 0xB530 || // Lo       HANGUL SYLLABLE DDA\n\t\tcode === 0xB54C || // Lo       HANGUL SYLLABLE DDAE\n\t\tcode === 0xB568 || // Lo       HANGUL SYLLABLE DDYA\n\t\tcode === 0xB584 || // Lo       HANGUL SYLLABLE DDYAE\n\t\tcode === 0xB5A0 || // Lo       HANGUL SYLLABLE DDEO\n\t\tcode === 0xB5BC || // Lo       HANGUL SYLLABLE DDE\n\t\tcode === 0xB5D8 || // Lo       HANGUL SYLLABLE DDYEO\n\t\tcode === 0xB5F4 || // Lo       HANGUL SYLLABLE DDYE\n\t\tcode === 0xB610 || // Lo       HANGUL SYLLABLE DDO\n\t\tcode === 0xB62C || // Lo       HANGUL SYLLABLE DDWA\n\t\tcode === 0xB648 || // Lo       HANGUL SYLLABLE DDWAE\n\t\tcode === 0xB664 || // Lo       HANGUL SYLLABLE DDOE\n\t\tcode === 0xB680 || // Lo       HANGUL SYLLABLE DDYO\n\t\tcode === 0xB69C || // Lo       HANGUL SYLLABLE DDU\n\t\tcode === 0xB6B8 || // Lo       HANGUL SYLLABLE DDWEO\n\t\tcode === 0xB6D4 || // Lo       HANGUL SYLLABLE DDWE\n\t\tcode === 0xB6F0 || // Lo       HANGUL SYLLABLE DDWI\n\t\tcode === 0xB70C || // Lo       HANGUL SYLLABLE DDYU\n\t\tcode === 0xB728 || // Lo       HANGUL SYLLABLE DDEU\n\t\tcode === 0xB744 || // Lo       HANGUL SYLLABLE DDYI\n\t\tcode === 0xB760 || // Lo       HANGUL SYLLABLE DDI\n\t\tcode === 0xB77C || // Lo       HANGUL SYLLABLE RA\n\t\tcode === 0xB798 || // Lo       HANGUL SYLLABLE RAE\n\t\tcode === 0xB7B4 || // Lo       HANGUL SYLLABLE RYA\n\t\tcode === 0xB7D0 || // Lo       HANGUL SYLLABLE RYAE\n\t\tcode === 0xB7EC || // Lo       HANGUL SYLLABLE REO\n\t\tcode === 0xB808 || // Lo       HANGUL SYLLABLE RE\n\t\tcode === 0xB824 || // Lo       HANGUL SYLLABLE RYEO\n\t\tcode === 0xB840 || // Lo       HANGUL SYLLABLE RYE\n\t\tcode === 0xB85C || // Lo       HANGUL SYLLABLE RO\n\t\tcode === 0xB878 || // Lo       HANGUL SYLLABLE RWA\n\t\tcode === 0xB894 || // Lo       HANGUL SYLLABLE RWAE\n\t\tcode === 0xB8B0 || // Lo       HANGUL SYLLABLE ROE\n\t\tcode === 0xB8CC || // Lo       HANGUL SYLLABLE RYO\n\t\tcode === 0xB8E8 || // Lo       HANGUL SYLLABLE RU\n\t\tcode === 0xB904 || // Lo       HANGUL SYLLABLE RWEO\n\t\tcode === 0xB920 || // Lo       HANGUL SYLLABLE RWE\n\t\tcode === 0xB93C || // Lo       HANGUL SYLLABLE RWI\n\t\tcode === 0xB958 || // Lo       HANGUL SYLLABLE RYU\n\t\tcode === 0xB974 || // Lo       HANGUL SYLLABLE REU\n\t\tcode === 0xB990 || // Lo       HANGUL SYLLABLE RYI\n\t\tcode === 0xB9AC || // Lo       HANGUL SYLLABLE RI\n\t\tcode === 0xB9C8 || // Lo       HANGUL SYLLABLE MA\n\t\tcode === 0xB9E4 || // Lo       HANGUL SYLLABLE MAE\n\t\tcode === 0xBA00 || // Lo       HANGUL SYLLABLE MYA\n\t\tcode === 0xBA1C || // Lo       HANGUL SYLLABLE MYAE\n\t\tcode === 0xBA38 || // Lo       HANGUL SYLLABLE MEO\n\t\tcode === 0xBA54 || // Lo       HANGUL SYLLABLE ME\n\t\tcode === 0xBA70 || // Lo       HANGUL SYLLABLE MYEO\n\t\tcode === 0xBA8C || // Lo       HANGUL SYLLABLE MYE\n\t\tcode === 0xBAA8 || // Lo       HANGUL SYLLABLE MO\n\t\tcode === 0xBAC4 || // Lo       HANGUL SYLLABLE MWA\n\t\tcode === 0xBAE0 || // Lo       HANGUL SYLLABLE MWAE\n\t\tcode === 0xBAFC || // Lo       HANGUL SYLLABLE MOE\n\t\tcode === 0xBB18 || // Lo       HANGUL SYLLABLE MYO\n\t\tcode === 0xBB34 || // Lo       HANGUL SYLLABLE MU\n\t\tcode === 0xBB50 || // Lo       HANGUL SYLLABLE MWEO\n\t\tcode === 0xBB6C || // Lo       HANGUL SYLLABLE MWE\n\t\tcode === 0xBB88 || // Lo       HANGUL SYLLABLE MWI\n\t\tcode === 0xBBA4 || // Lo       HANGUL SYLLABLE MYU\n\t\tcode === 0xBBC0 || // Lo       HANGUL SYLLABLE MEU\n\t\tcode === 0xBBDC || // Lo       HANGUL SYLLABLE MYI\n\t\tcode === 0xBBF8 || // Lo       HANGUL SYLLABLE MI\n\t\tcode === 0xBC14 || // Lo       HANGUL SYLLABLE BA\n\t\tcode === 0xBC30 || // Lo       HANGUL SYLLABLE BAE\n\t\tcode === 0xBC4C || // Lo       HANGUL SYLLABLE BYA\n\t\tcode === 0xBC68 || // Lo       HANGUL SYLLABLE BYAE\n\t\tcode === 0xBC84 || // Lo       HANGUL SYLLABLE BEO\n\t\tcode === 0xBCA0 || // Lo       HANGUL SYLLABLE BE\n\t\tcode === 0xBCBC || // Lo       HANGUL SYLLABLE BYEO\n\t\tcode === 0xBCD8 || // Lo       HANGUL SYLLABLE BYE\n\t\tcode === 0xBCF4 || // Lo       HANGUL SYLLABLE BO\n\t\tcode === 0xBD10 || // Lo       HANGUL SYLLABLE BWA\n\t\tcode === 0xBD2C || // Lo       HANGUL SYLLABLE BWAE\n\t\tcode === 0xBD48 || // Lo       HANGUL SYLLABLE BOE\n\t\tcode === 0xBD64 || // Lo       HANGUL SYLLABLE BYO\n\t\tcode === 0xBD80 || // Lo       HANGUL SYLLABLE BU\n\t\tcode === 0xBD9C || // Lo       HANGUL SYLLABLE BWEO\n\t\tcode === 0xBDB8 || // Lo       HANGUL SYLLABLE BWE\n\t\tcode === 0xBDD4 || // Lo       HANGUL SYLLABLE BWI\n\t\tcode === 0xBDF0 || // Lo       HANGUL SYLLABLE BYU\n\t\tcode === 0xBE0C || // Lo       HANGUL SYLLABLE BEU\n\t\tcode === 0xBE28 || // Lo       HANGUL SYLLABLE BYI\n\t\tcode === 0xBE44 || // Lo       HANGUL SYLLABLE BI\n\t\tcode === 0xBE60 || // Lo       HANGUL SYLLABLE BBA\n\t\tcode === 0xBE7C || // Lo       HANGUL SYLLABLE BBAE\n\t\tcode === 0xBE98 || // Lo       HANGUL SYLLABLE BBYA\n\t\tcode === 0xBEB4 || // Lo       HANGUL SYLLABLE BBYAE\n\t\tcode === 0xBED0 || // Lo       HANGUL SYLLABLE BBEO\n\t\tcode === 0xBEEC || // Lo       HANGUL SYLLABLE BBE\n\t\tcode === 0xBF08 || // Lo       HANGUL SYLLABLE BBYEO\n\t\tcode === 0xBF24 || // Lo       HANGUL SYLLABLE BBYE\n\t\tcode === 0xBF40 || // Lo       HANGUL SYLLABLE BBO\n\t\tcode === 0xBF5C || // Lo       HANGUL SYLLABLE BBWA\n\t\tcode === 0xBF78 || // Lo       HANGUL SYLLABLE BBWAE\n\t\tcode === 0xBF94 || // Lo       HANGUL SYLLABLE BBOE\n\t\tcode === 0xBFB0 || // Lo       HANGUL SYLLABLE BBYO\n\t\tcode === 0xBFCC || // Lo       HANGUL SYLLABLE BBU\n\t\tcode === 0xBFE8 || // Lo       HANGUL SYLLABLE BBWEO\n\t\tcode === 0xC004 || // Lo       HANGUL SYLLABLE BBWE\n\t\tcode === 0xC020 || // Lo       HANGUL SYLLABLE BBWI\n\t\tcode === 0xC03C || // Lo       HANGUL SYLLABLE BBYU\n\t\tcode === 0xC058 || // Lo       HANGUL SYLLABLE BBEU\n\t\tcode === 0xC074 || // Lo       HANGUL SYLLABLE BBYI\n\t\tcode === 0xC090 || // Lo       HANGUL SYLLABLE BBI\n\t\tcode === 0xC0AC || // Lo       HANGUL SYLLABLE SA\n\t\tcode === 0xC0C8 || // Lo       HANGUL SYLLABLE SAE\n\t\tcode === 0xC0E4 || // Lo       HANGUL SYLLABLE SYA\n\t\tcode === 0xC100 || // Lo       HANGUL SYLLABLE SYAE\n\t\tcode === 0xC11C || // Lo       HANGUL SYLLABLE SEO\n\t\tcode === 0xC138 || // Lo       HANGUL SYLLABLE SE\n\t\tcode === 0xC154 || // Lo       HANGUL SYLLABLE SYEO\n\t\tcode === 0xC170 || // Lo       HANGUL SYLLABLE SYE\n\t\tcode === 0xC18C || // Lo       HANGUL SYLLABLE SO\n\t\tcode === 0xC1A8 || // Lo       HANGUL SYLLABLE SWA\n\t\tcode === 0xC1C4 || // Lo       HANGUL SYLLABLE SWAE\n\t\tcode === 0xC1E0 || // Lo       HANGUL SYLLABLE SOE\n\t\tcode === 0xC1FC || // Lo       HANGUL SYLLABLE SYO\n\t\tcode === 0xC218 || // Lo       HANGUL SYLLABLE SU\n\t\tcode === 0xC234 || // Lo       HANGUL SYLLABLE SWEO\n\t\tcode === 0xC250 || // Lo       HANGUL SYLLABLE SWE\n\t\tcode === 0xC26C || // Lo       HANGUL SYLLABLE SWI\n\t\tcode === 0xC288 || // Lo       HANGUL SYLLABLE SYU\n\t\tcode === 0xC2A4 || // Lo       HANGUL SYLLABLE SEU\n\t\tcode === 0xC2C0 || // Lo       HANGUL SYLLABLE SYI\n\t\tcode === 0xC2DC || // Lo       HANGUL SYLLABLE SI\n\t\tcode === 0xC2F8 || // Lo       HANGUL SYLLABLE SSA\n\t\tcode === 0xC314 || // Lo       HANGUL SYLLABLE SSAE\n\t\tcode === 0xC330 || // Lo       HANGUL SYLLABLE SSYA\n\t\tcode === 0xC34C || // Lo       HANGUL SYLLABLE SSYAE\n\t\tcode === 0xC368 || // Lo       HANGUL SYLLABLE SSEO\n\t\tcode === 0xC384 || // Lo       HANGUL SYLLABLE SSE\n\t\tcode === 0xC3A0 || // Lo       HANGUL SYLLABLE SSYEO\n\t\tcode === 0xC3BC || // Lo       HANGUL SYLLABLE SSYE\n\t\tcode === 0xC3D8 || // Lo       HANGUL SYLLABLE SSO\n\t\tcode === 0xC3F4 || // Lo       HANGUL SYLLABLE SSWA\n\t\tcode === 0xC410 || // Lo       HANGUL SYLLABLE SSWAE\n\t\tcode === 0xC42C || // Lo       HANGUL SYLLABLE SSOE\n\t\tcode === 0xC448 || // Lo       HANGUL SYLLABLE SSYO\n\t\tcode === 0xC464 || // Lo       HANGUL SYLLABLE SSU\n\t\tcode === 0xC480 || // Lo       HANGUL SYLLABLE SSWEO\n\t\tcode === 0xC49C || // Lo       HANGUL SYLLABLE SSWE\n\t\tcode === 0xC4B8 || // Lo       HANGUL SYLLABLE SSWI\n\t\tcode === 0xC4D4 || // Lo       HANGUL SYLLABLE SSYU\n\t\tcode === 0xC4F0 || // Lo       HANGUL SYLLABLE SSEU\n\t\tcode === 0xC50C || // Lo       HANGUL SYLLABLE SSYI\n\t\tcode === 0xC528 || // Lo       HANGUL SYLLABLE SSI\n\t\tcode === 0xC544 || // Lo       HANGUL SYLLABLE A\n\t\tcode === 0xC560 || // Lo       HANGUL SYLLABLE AE\n\t\tcode === 0xC57C || // Lo       HANGUL SYLLABLE YA\n\t\tcode === 0xC598 || // Lo       HANGUL SYLLABLE YAE\n\t\tcode === 0xC5B4 || // Lo       HANGUL SYLLABLE EO\n\t\tcode === 0xC5D0 || // Lo       HANGUL SYLLABLE E\n\t\tcode === 0xC5EC || // Lo       HANGUL SYLLABLE YEO\n\t\tcode === 0xC608 || // Lo       HANGUL SYLLABLE YE\n\t\tcode === 0xC624 || // Lo       HANGUL SYLLABLE O\n\t\tcode === 0xC640 || // Lo       HANGUL SYLLABLE WA\n\t\tcode === 0xC65C || // Lo       HANGUL SYLLABLE WAE\n\t\tcode === 0xC678 || // Lo       HANGUL SYLLABLE OE\n\t\tcode === 0xC694 || // Lo       HANGUL SYLLABLE YO\n\t\tcode === 0xC6B0 || // Lo       HANGUL SYLLABLE U\n\t\tcode === 0xC6CC || // Lo       HANGUL SYLLABLE WEO\n\t\tcode === 0xC6E8 || // Lo       HANGUL SYLLABLE WE\n\t\tcode === 0xC704 || // Lo       HANGUL SYLLABLE WI\n\t\tcode === 0xC720 || // Lo       HANGUL SYLLABLE YU\n\t\tcode === 0xC73C || // Lo       HANGUL SYLLABLE EU\n\t\tcode === 0xC758 || // Lo       HANGUL SYLLABLE YI\n\t\tcode === 0xC774 || // Lo       HANGUL SYLLABLE I\n\t\tcode === 0xC790 || // Lo       HANGUL SYLLABLE JA\n\t\tcode === 0xC7AC || // Lo       HANGUL SYLLABLE JAE\n\t\tcode === 0xC7C8 || // Lo       HANGUL SYLLABLE JYA\n\t\tcode === 0xC7E4 || // Lo       HANGUL SYLLABLE JYAE\n\t\tcode === 0xC800 || // Lo       HANGUL SYLLABLE JEO\n\t\tcode === 0xC81C || // Lo       HANGUL SYLLABLE JE\n\t\tcode === 0xC838 || // Lo       HANGUL SYLLABLE JYEO\n\t\tcode === 0xC854 || // Lo       HANGUL SYLLABLE JYE\n\t\tcode === 0xC870 || // Lo       HANGUL SYLLABLE JO\n\t\tcode === 0xC88C || // Lo       HANGUL SYLLABLE JWA\n\t\tcode === 0xC8A8 || // Lo       HANGUL SYLLABLE JWAE\n\t\tcode === 0xC8C4 || // Lo       HANGUL SYLLABLE JOE\n\t\tcode === 0xC8E0 || // Lo       HANGUL SYLLABLE JYO\n\t\tcode === 0xC8FC || // Lo       HANGUL SYLLABLE JU\n\t\tcode === 0xC918 || // Lo       HANGUL SYLLABLE JWEO\n\t\tcode === 0xC934 || // Lo       HANGUL SYLLABLE JWE\n\t\tcode === 0xC950 || // Lo       HANGUL SYLLABLE JWI\n\t\tcode === 0xC96C || // Lo       HANGUL SYLLABLE JYU\n\t\tcode === 0xC988 || // Lo       HANGUL SYLLABLE JEU\n\t\tcode === 0xC9A4 || // Lo       HANGUL SYLLABLE JYI\n\t\tcode === 0xC9C0 || // Lo       HANGUL SYLLABLE JI\n\t\tcode === 0xC9DC || // Lo       HANGUL SYLLABLE JJA\n\t\tcode === 0xC9F8 || // Lo       HANGUL SYLLABLE JJAE\n\t\tcode === 0xCA14 || // Lo       HANGUL SYLLABLE JJYA\n\t\tcode === 0xCA30 || // Lo       HANGUL SYLLABLE JJYAE\n\t\tcode === 0xCA4C || // Lo       HANGUL SYLLABLE JJEO\n\t\tcode === 0xCA68 || // Lo       HANGUL SYLLABLE JJE\n\t\tcode === 0xCA84 || // Lo       HANGUL SYLLABLE JJYEO\n\t\tcode === 0xCAA0 || // Lo       HANGUL SYLLABLE JJYE\n\t\tcode === 0xCABC || // Lo       HANGUL SYLLABLE JJO\n\t\tcode === 0xCAD8 || // Lo       HANGUL SYLLABLE JJWA\n\t\tcode === 0xCAF4 || // Lo       HANGUL SYLLABLE JJWAE\n\t\tcode === 0xCB10 || // Lo       HANGUL SYLLABLE JJOE\n\t\tcode === 0xCB2C || // Lo       HANGUL SYLLABLE JJYO\n\t\tcode === 0xCB48 || // Lo       HANGUL SYLLABLE JJU\n\t\tcode === 0xCB64 || // Lo       HANGUL SYLLABLE JJWEO\n\t\tcode === 0xCB80 || // Lo       HANGUL SYLLABLE JJWE\n\t\tcode === 0xCB9C || // Lo       HANGUL SYLLABLE JJWI\n\t\tcode === 0xCBB8 || // Lo       HANGUL SYLLABLE JJYU\n\t\tcode === 0xCBD4 || // Lo       HANGUL SYLLABLE JJEU\n\t\tcode === 0xCBF0 || // Lo       HANGUL SYLLABLE JJYI\n\t\tcode === 0xCC0C || // Lo       HANGUL SYLLABLE JJI\n\t\tcode === 0xCC28 || // Lo       HANGUL SYLLABLE CA\n\t\tcode === 0xCC44 || // Lo       HANGUL SYLLABLE CAE\n\t\tcode === 0xCC60 || // Lo       HANGUL SYLLABLE CYA\n\t\tcode === 0xCC7C || // Lo       HANGUL SYLLABLE CYAE\n\t\tcode === 0xCC98 || // Lo       HANGUL SYLLABLE CEO\n\t\tcode === 0xCCB4 || // Lo       HANGUL SYLLABLE CE\n\t\tcode === 0xCCD0 || // Lo       HANGUL SYLLABLE CYEO\n\t\tcode === 0xCCEC || // Lo       HANGUL SYLLABLE CYE\n\t\tcode === 0xCD08 || // Lo       HANGUL SYLLABLE CO\n\t\tcode === 0xCD24 || // Lo       HANGUL SYLLABLE CWA\n\t\tcode === 0xCD40 || // Lo       HANGUL SYLLABLE CWAE\n\t\tcode === 0xCD5C || // Lo       HANGUL SYLLABLE COE\n\t\tcode === 0xCD78 || // Lo       HANGUL SYLLABLE CYO\n\t\tcode === 0xCD94 || // Lo       HANGUL SYLLABLE CU\n\t\tcode === 0xCDB0 || // Lo       HANGUL SYLLABLE CWEO\n\t\tcode === 0xCDCC || // Lo       HANGUL SYLLABLE CWE\n\t\tcode === 0xCDE8 || // Lo       HANGUL SYLLABLE CWI\n\t\tcode === 0xCE04 || // Lo       HANGUL SYLLABLE CYU\n\t\tcode === 0xCE20 || // Lo       HANGUL SYLLABLE CEU\n\t\tcode === 0xCE3C || // Lo       HANGUL SYLLABLE CYI\n\t\tcode === 0xCE58 || // Lo       HANGUL SYLLABLE CI\n\t\tcode === 0xCE74 || // Lo       HANGUL SYLLABLE KA\n\t\tcode === 0xCE90 || // Lo       HANGUL SYLLABLE KAE\n\t\tcode === 0xCEAC || // Lo       HANGUL SYLLABLE KYA\n\t\tcode === 0xCEC8 || // Lo       HANGUL SYLLABLE KYAE\n\t\tcode === 0xCEE4 || // Lo       HANGUL SYLLABLE KEO\n\t\tcode === 0xCF00 || // Lo       HANGUL SYLLABLE KE\n\t\tcode === 0xCF1C || // Lo       HANGUL SYLLABLE KYEO\n\t\tcode === 0xCF38 || // Lo       HANGUL SYLLABLE KYE\n\t\tcode === 0xCF54 || // Lo       HANGUL SYLLABLE KO\n\t\tcode === 0xCF70 || // Lo       HANGUL SYLLABLE KWA\n\t\tcode === 0xCF8C || // Lo       HANGUL SYLLABLE KWAE\n\t\tcode === 0xCFA8 || // Lo       HANGUL SYLLABLE KOE\n\t\tcode === 0xCFC4 || // Lo       HANGUL SYLLABLE KYO\n\t\tcode === 0xCFE0 || // Lo       HANGUL SYLLABLE KU\n\t\tcode === 0xCFFC || // Lo       HANGUL SYLLABLE KWEO\n\t\tcode === 0xD018 || // Lo       HANGUL SYLLABLE KWE\n\t\tcode === 0xD034 || // Lo       HANGUL SYLLABLE KWI\n\t\tcode === 0xD050 || // Lo       HANGUL SYLLABLE KYU\n\t\tcode === 0xD06C || // Lo       HANGUL SYLLABLE KEU\n\t\tcode === 0xD088 || // Lo       HANGUL SYLLABLE KYI\n\t\tcode === 0xD0A4 || // Lo       HANGUL SYLLABLE KI\n\t\tcode === 0xD0C0 || // Lo       HANGUL SYLLABLE TA\n\t\tcode === 0xD0DC || // Lo       HANGUL SYLLABLE TAE\n\t\tcode === 0xD0F8 || // Lo       HANGUL SYLLABLE TYA\n\t\tcode === 0xD114 || // Lo       HANGUL SYLLABLE TYAE\n\t\tcode === 0xD130 || // Lo       HANGUL SYLLABLE TEO\n\t\tcode === 0xD14C || // Lo       HANGUL SYLLABLE TE\n\t\tcode === 0xD168 || // Lo       HANGUL SYLLABLE TYEO\n\t\tcode === 0xD184 || // Lo       HANGUL SYLLABLE TYE\n\t\tcode === 0xD1A0 || // Lo       HANGUL SYLLABLE TO\n\t\tcode === 0xD1BC || // Lo       HANGUL SYLLABLE TWA\n\t\tcode === 0xD1D8 || // Lo       HANGUL SYLLABLE TWAE\n\t\tcode === 0xD1F4 || // Lo       HANGUL SYLLABLE TOE\n\t\tcode === 0xD210 || // Lo       HANGUL SYLLABLE TYO\n\t\tcode === 0xD22C || // Lo       HANGUL SYLLABLE TU\n\t\tcode === 0xD248 || // Lo       HANGUL SYLLABLE TWEO\n\t\tcode === 0xD264 || // Lo       HANGUL SYLLABLE TWE\n\t\tcode === 0xD280 || // Lo       HANGUL SYLLABLE TWI\n\t\tcode === 0xD29C || // Lo       HANGUL SYLLABLE TYU\n\t\tcode === 0xD2B8 || // Lo       HANGUL SYLLABLE TEU\n\t\tcode === 0xD2D4 || // Lo       HANGUL SYLLABLE TYI\n\t\tcode === 0xD2F0 || // Lo       HANGUL SYLLABLE TI\n\t\tcode === 0xD30C || // Lo       HANGUL SYLLABLE PA\n\t\tcode === 0xD328 || // Lo       HANGUL SYLLABLE PAE\n\t\tcode === 0xD344 || // Lo       HANGUL SYLLABLE PYA\n\t\tcode === 0xD360 || // Lo       HANGUL SYLLABLE PYAE\n\t\tcode === 0xD37C || // Lo       HANGUL SYLLABLE PEO\n\t\tcode === 0xD398 || // Lo       HANGUL SYLLABLE PE\n\t\tcode === 0xD3B4 || // Lo       HANGUL SYLLABLE PYEO\n\t\tcode === 0xD3D0 || // Lo       HANGUL SYLLABLE PYE\n\t\tcode === 0xD3EC || // Lo       HANGUL SYLLABLE PO\n\t\tcode === 0xD408 || // Lo       HANGUL SYLLABLE PWA\n\t\tcode === 0xD424 || // Lo       HANGUL SYLLABLE PWAE\n\t\tcode === 0xD440 || // Lo       HANGUL SYLLABLE POE\n\t\tcode === 0xD45C || // Lo       HANGUL SYLLABLE PYO\n\t\tcode === 0xD478 || // Lo       HANGUL SYLLABLE PU\n\t\tcode === 0xD494 || // Lo       HANGUL SYLLABLE PWEO\n\t\tcode === 0xD4B0 || // Lo       HANGUL SYLLABLE PWE\n\t\tcode === 0xD4CC || // Lo       HANGUL SYLLABLE PWI\n\t\tcode === 0xD4E8 || // Lo       HANGUL SYLLABLE PYU\n\t\tcode === 0xD504 || // Lo       HANGUL SYLLABLE PEU\n\t\tcode === 0xD520 || // Lo       HANGUL SYLLABLE PYI\n\t\tcode === 0xD53C || // Lo       HANGUL SYLLABLE PI\n\t\tcode === 0xD558 || // Lo       HANGUL SYLLABLE HA\n\t\tcode === 0xD574 || // Lo       HANGUL SYLLABLE HAE\n\t\tcode === 0xD590 || // Lo       HANGUL SYLLABLE HYA\n\t\tcode === 0xD5AC || // Lo       HANGUL SYLLABLE HYAE\n\t\tcode === 0xD5C8 || // Lo       HANGUL SYLLABLE HEO\n\t\tcode === 0xD5E4 || // Lo       HANGUL SYLLABLE HE\n\t\tcode === 0xD600 || // Lo       HANGUL SYLLABLE HYEO\n\t\tcode === 0xD61C || // Lo       HANGUL SYLLABLE HYE\n\t\tcode === 0xD638 || // Lo       HANGUL SYLLABLE HO\n\t\tcode === 0xD654 || // Lo       HANGUL SYLLABLE HWA\n\t\tcode === 0xD670 || // Lo       HANGUL SYLLABLE HWAE\n\t\tcode === 0xD68C || // Lo       HANGUL SYLLABLE HOE\n\t\tcode === 0xD6A8 || // Lo       HANGUL SYLLABLE HYO\n\t\tcode === 0xD6C4 || // Lo       HANGUL SYLLABLE HU\n\t\tcode === 0xD6E0 || // Lo       HANGUL SYLLABLE HWEO\n\t\tcode === 0xD6FC || // Lo       HANGUL SYLLABLE HWE\n\t\tcode === 0xD718 || // Lo       HANGUL SYLLABLE HWI\n\t\tcode === 0xD734 || // Lo       HANGUL SYLLABLE HYU\n\t\tcode === 0xD750 || // Lo       HANGUL SYLLABLE HEU\n\t\tcode === 0xD76C || // Lo       HANGUL SYLLABLE HYI\n\t\tcode === 0xD788 // Lo       HANGUL SYLLABLE HI\n\t) {\n\t\treturn constants.LV;\n\t}\n\tif (\n\t\t( 0xAC01 <= code && code <= 0xAC1B ) || // Lo  [27] HANGUL SYLLABLE GAG..HANGUL SYLLABLE GAH\n\t\t( 0xAC1D <= code && code <= 0xAC37 ) || // Lo  [27] HANGUL SYLLABLE GAEG..HANGUL SYLLABLE GAEH\n\t\t( 0xAC39 <= code && code <= 0xAC53 ) || // Lo  [27] HANGUL SYLLABLE GYAG..HANGUL SYLLABLE GYAH\n\t\t( 0xAC55 <= code && code <= 0xAC6F ) || // Lo  [27] HANGUL SYLLABLE GYAEG..HANGUL SYLLABLE GYAEH\n\t\t( 0xAC71 <= code && code <= 0xAC8B ) || // Lo  [27] HANGUL SYLLABLE GEOG..HANGUL SYLLABLE GEOH\n\t\t( 0xAC8D <= code && code <= 0xACA7 ) || // Lo  [27] HANGUL SYLLABLE GEG..HANGUL SYLLABLE GEH\n\t\t( 0xACA9 <= code && code <= 0xACC3 ) || // Lo  [27] HANGUL SYLLABLE GYEOG..HANGUL SYLLABLE GYEOH\n\t\t( 0xACC5 <= code && code <= 0xACDF ) || // Lo  [27] HANGUL SYLLABLE GYEG..HANGUL SYLLABLE GYEH\n\t\t( 0xACE1 <= code && code <= 0xACFB ) || // Lo  [27] HANGUL SYLLABLE GOG..HANGUL SYLLABLE GOH\n\t\t( 0xACFD <= code && code <= 0xAD17 ) || // Lo  [27] HANGUL SYLLABLE GWAG..HANGUL SYLLABLE GWAH\n\t\t( 0xAD19 <= code && code <= 0xAD33 ) || // Lo  [27] HANGUL SYLLABLE GWAEG..HANGUL SYLLABLE GWAEH\n\t\t( 0xAD35 <= code && code <= 0xAD4F ) || // Lo  [27] HANGUL SYLLABLE GOEG..HANGUL SYLLABLE GOEH\n\t\t( 0xAD51 <= code && code <= 0xAD6B ) || // Lo  [27] HANGUL SYLLABLE GYOG..HANGUL SYLLABLE GYOH\n\t\t( 0xAD6D <= code && code <= 0xAD87 ) || // Lo  [27] HANGUL SYLLABLE GUG..HANGUL SYLLABLE GUH\n\t\t( 0xAD89 <= code && code <= 0xADA3 ) || // Lo  [27] HANGUL SYLLABLE GWEOG..HANGUL SYLLABLE GWEOH\n\t\t( 0xADA5 <= code && code <= 0xADBF ) || // Lo  [27] HANGUL SYLLABLE GWEG..HANGUL SYLLABLE GWEH\n\t\t( 0xADC1 <= code && code <= 0xADDB ) || // Lo  [27] HANGUL SYLLABLE GWIG..HANGUL SYLLABLE GWIH\n\t\t( 0xADDD <= code && code <= 0xADF7 ) || // Lo  [27] HANGUL SYLLABLE GYUG..HANGUL SYLLABLE GYUH\n\t\t( 0xADF9 <= code && code <= 0xAE13 ) || // Lo  [27] HANGUL SYLLABLE GEUG..HANGUL SYLLABLE GEUH\n\t\t( 0xAE15 <= code && code <= 0xAE2F ) || // Lo  [27] HANGUL SYLLABLE GYIG..HANGUL SYLLABLE GYIH\n\t\t( 0xAE31 <= code && code <= 0xAE4B ) || // Lo  [27] HANGUL SYLLABLE GIG..HANGUL SYLLABLE GIH\n\t\t( 0xAE4D <= code && code <= 0xAE67 ) || // Lo  [27] HANGUL SYLLABLE GGAG..HANGUL SYLLABLE GGAH\n\t\t( 0xAE69 <= code && code <= 0xAE83 ) || // Lo  [27] HANGUL SYLLABLE GGAEG..HANGUL SYLLABLE GGAEH\n\t\t( 0xAE85 <= code && code <= 0xAE9F ) || // Lo  [27] HANGUL SYLLABLE GGYAG..HANGUL SYLLABLE GGYAH\n\t\t( 0xAEA1 <= code && code <= 0xAEBB ) || // Lo  [27] HANGUL SYLLABLE GGYAEG..HANGUL SYLLABLE GGYAEH\n\t\t( 0xAEBD <= code && code <= 0xAED7 ) || // Lo  [27] HANGUL SYLLABLE GGEOG..HANGUL SYLLABLE GGEOH\n\t\t( 0xAED9 <= code && code <= 0xAEF3 ) || // Lo  [27] HANGUL SYLLABLE GGEG..HANGUL SYLLABLE GGEH\n\t\t( 0xAEF5 <= code && code <= 0xAF0F ) || // Lo  [27] HANGUL SYLLABLE GGYEOG..HANGUL SYLLABLE GGYEOH\n\t\t( 0xAF11 <= code && code <= 0xAF2B ) || // Lo  [27] HANGUL SYLLABLE GGYEG..HANGUL SYLLABLE GGYEH\n\t\t( 0xAF2D <= code && code <= 0xAF47 ) || // Lo  [27] HANGUL SYLLABLE GGOG..HANGUL SYLLABLE GGOH\n\t\t( 0xAF49 <= code && code <= 0xAF63 ) || // Lo  [27] HANGUL SYLLABLE GGWAG..HANGUL SYLLABLE GGWAH\n\t\t( 0xAF65 <= code && code <= 0xAF7F ) || // Lo  [27] HANGUL SYLLABLE GGWAEG..HANGUL SYLLABLE GGWAEH\n\t\t( 0xAF81 <= code && code <= 0xAF9B ) || // Lo  [27] HANGUL SYLLABLE GGOEG..HANGUL SYLLABLE GGOEH\n\t\t( 0xAF9D <= code && code <= 0xAFB7 ) || // Lo  [27] HANGUL SYLLABLE GGYOG..HANGUL SYLLABLE GGYOH\n\t\t( 0xAFB9 <= code && code <= 0xAFD3 ) || // Lo  [27] HANGUL SYLLABLE GGUG..HANGUL SYLLABLE GGUH\n\t\t( 0xAFD5 <= code && code <= 0xAFEF ) || // Lo  [27] HANGUL SYLLABLE GGWEOG..HANGUL SYLLABLE GGWEOH\n\t\t( 0xAFF1 <= code && code <= 0xB00B ) || // Lo  [27] HANGUL SYLLABLE GGWEG..HANGUL SYLLABLE GGWEH\n\t\t( 0xB00D <= code && code <= 0xB027 ) || // Lo  [27] HANGUL SYLLABLE GGWIG..HANGUL SYLLABLE GGWIH\n\t\t( 0xB029 <= code && code <= 0xB043 ) || // Lo  [27] HANGUL SYLLABLE GGYUG..HANGUL SYLLABLE GGYUH\n\t\t( 0xB045 <= code && code <= 0xB05F ) || // Lo  [27] HANGUL SYLLABLE GGEUG..HANGUL SYLLABLE GGEUH\n\t\t( 0xB061 <= code && code <= 0xB07B ) || // Lo  [27] HANGUL SYLLABLE GGYIG..HANGUL SYLLABLE GGYIH\n\t\t( 0xB07D <= code && code <= 0xB097 ) || // Lo  [27] HANGUL SYLLABLE GGIG..HANGUL SYLLABLE GGIH\n\t\t( 0xB099 <= code && code <= 0xB0B3 ) || // Lo  [27] HANGUL SYLLABLE NAG..HANGUL SYLLABLE NAH\n\t\t( 0xB0B5 <= code && code <= 0xB0CF ) || // Lo  [27] HANGUL SYLLABLE NAEG..HANGUL SYLLABLE NAEH\n\t\t( 0xB0D1 <= code && code <= 0xB0EB ) || // Lo  [27] HANGUL SYLLABLE NYAG..HANGUL SYLLABLE NYAH\n\t\t( 0xB0ED <= code && code <= 0xB107 ) || // Lo  [27] HANGUL SYLLABLE NYAEG..HANGUL SYLLABLE NYAEH\n\t\t( 0xB109 <= code && code <= 0xB123 ) || // Lo  [27] HANGUL SYLLABLE NEOG..HANGUL SYLLABLE NEOH\n\t\t( 0xB125 <= code && code <= 0xB13F ) || // Lo  [27] HANGUL SYLLABLE NEG..HANGUL SYLLABLE NEH\n\t\t( 0xB141 <= code && code <= 0xB15B ) || // Lo  [27] HANGUL SYLLABLE NYEOG..HANGUL SYLLABLE NYEOH\n\t\t( 0xB15D <= code && code <= 0xB177 ) || // Lo  [27] HANGUL SYLLABLE NYEG..HANGUL SYLLABLE NYEH\n\t\t( 0xB179 <= code && code <= 0xB193 ) || // Lo  [27] HANGUL SYLLABLE NOG..HANGUL SYLLABLE NOH\n\t\t( 0xB195 <= code && code <= 0xB1AF ) || // Lo  [27] HANGUL SYLLABLE NWAG..HANGUL SYLLABLE NWAH\n\t\t( 0xB1B1 <= code && code <= 0xB1CB ) || // Lo  [27] HANGUL SYLLABLE NWAEG..HANGUL SYLLABLE NWAEH\n\t\t( 0xB1CD <= code && code <= 0xB1E7 ) || // Lo  [27] HANGUL SYLLABLE NOEG..HANGUL SYLLABLE NOEH\n\t\t( 0xB1E9 <= code && code <= 0xB203 ) || // Lo  [27] HANGUL SYLLABLE NYOG..HANGUL SYLLABLE NYOH\n\t\t( 0xB205 <= code && code <= 0xB21F ) || // Lo  [27] HANGUL SYLLABLE NUG..HANGUL SYLLABLE NUH\n\t\t( 0xB221 <= code && code <= 0xB23B ) || // Lo  [27] HANGUL SYLLABLE NWEOG..HANGUL SYLLABLE NWEOH\n\t\t( 0xB23D <= code && code <= 0xB257 ) || // Lo  [27] HANGUL SYLLABLE NWEG..HANGUL SYLLABLE NWEH\n\t\t( 0xB259 <= code && code <= 0xB273 ) || // Lo  [27] HANGUL SYLLABLE NWIG..HANGUL SYLLABLE NWIH\n\t\t( 0xB275 <= code && code <= 0xB28F ) || // Lo  [27] HANGUL SYLLABLE NYUG..HANGUL SYLLABLE NYUH\n\t\t( 0xB291 <= code && code <= 0xB2AB ) || // Lo  [27] HANGUL SYLLABLE NEUG..HANGUL SYLLABLE NEUH\n\t\t( 0xB2AD <= code && code <= 0xB2C7 ) || // Lo  [27] HANGUL SYLLABLE NYIG..HANGUL SYLLABLE NYIH\n\t\t( 0xB2C9 <= code && code <= 0xB2E3 ) || // Lo  [27] HANGUL SYLLABLE NIG..HANGUL SYLLABLE NIH\n\t\t( 0xB2E5 <= code && code <= 0xB2FF ) || // Lo  [27] HANGUL SYLLABLE DAG..HANGUL SYLLABLE DAH\n\t\t( 0xB301 <= code && code <= 0xB31B ) || // Lo  [27] HANGUL SYLLABLE DAEG..HANGUL SYLLABLE DAEH\n\t\t( 0xB31D <= code && code <= 0xB337 ) || // Lo  [27] HANGUL SYLLABLE DYAG..HANGUL SYLLABLE DYAH\n\t\t( 0xB339 <= code && code <= 0xB353 ) || // Lo  [27] HANGUL SYLLABLE DYAEG..HANGUL SYLLABLE DYAEH\n\t\t( 0xB355 <= code && code <= 0xB36F ) || // Lo  [27] HANGUL SYLLABLE DEOG..HANGUL SYLLABLE DEOH\n\t\t( 0xB371 <= code && code <= 0xB38B ) || // Lo  [27] HANGUL SYLLABLE DEG..HANGUL SYLLABLE DEH\n\t\t( 0xB38D <= code && code <= 0xB3A7 ) || // Lo  [27] HANGUL SYLLABLE DYEOG..HANGUL SYLLABLE DYEOH\n\t\t( 0xB3A9 <= code && code <= 0xB3C3 ) || // Lo  [27] HANGUL SYLLABLE DYEG..HANGUL SYLLABLE DYEH\n\t\t( 0xB3C5 <= code && code <= 0xB3DF ) || // Lo  [27] HANGUL SYLLABLE DOG..HANGUL SYLLABLE DOH\n\t\t( 0xB3E1 <= code && code <= 0xB3FB ) || // Lo  [27] HANGUL SYLLABLE DWAG..HANGUL SYLLABLE DWAH\n\t\t( 0xB3FD <= code && code <= 0xB417 ) || // Lo  [27] HANGUL SYLLABLE DWAEG..HANGUL SYLLABLE DWAEH\n\t\t( 0xB419 <= code && code <= 0xB433 ) || // Lo  [27] HANGUL SYLLABLE DOEG..HANGUL SYLLABLE DOEH\n\t\t( 0xB435 <= code && code <= 0xB44F ) || // Lo  [27] HANGUL SYLLABLE DYOG..HANGUL SYLLABLE DYOH\n\t\t( 0xB451 <= code && code <= 0xB46B ) || // Lo  [27] HANGUL SYLLABLE DUG..HANGUL SYLLABLE DUH\n\t\t( 0xB46D <= code && code <= 0xB487 ) || // Lo  [27] HANGUL SYLLABLE DWEOG..HANGUL SYLLABLE DWEOH\n\t\t( 0xB489 <= code && code <= 0xB4A3 ) || // Lo  [27] HANGUL SYLLABLE DWEG..HANGUL SYLLABLE DWEH\n\t\t( 0xB4A5 <= code && code <= 0xB4BF ) || // Lo  [27] HANGUL SYLLABLE DWIG..HANGUL SYLLABLE DWIH\n\t\t( 0xB4C1 <= code && code <= 0xB4DB ) || // Lo  [27] HANGUL SYLLABLE DYUG..HANGUL SYLLABLE DYUH\n\t\t( 0xB4DD <= code && code <= 0xB4F7 ) || // Lo  [27] HANGUL SYLLABLE DEUG..HANGUL SYLLABLE DEUH\n\t\t( 0xB4F9 <= code && code <= 0xB513 ) || // Lo  [27] HANGUL SYLLABLE DYIG..HANGUL SYLLABLE DYIH\n\t\t( 0xB515 <= code && code <= 0xB52F ) || // Lo  [27] HANGUL SYLLABLE DIG..HANGUL SYLLABLE DIH\n\t\t( 0xB531 <= code && code <= 0xB54B ) || // Lo  [27] HANGUL SYLLABLE DDAG..HANGUL SYLLABLE DDAH\n\t\t( 0xB54D <= code && code <= 0xB567 ) || // Lo  [27] HANGUL SYLLABLE DDAEG..HANGUL SYLLABLE DDAEH\n\t\t( 0xB569 <= code && code <= 0xB583 ) || // Lo  [27] HANGUL SYLLABLE DDYAG..HANGUL SYLLABLE DDYAH\n\t\t( 0xB585 <= code && code <= 0xB59F ) || // Lo  [27] HANGUL SYLLABLE DDYAEG..HANGUL SYLLABLE DDYAEH\n\t\t( 0xB5A1 <= code && code <= 0xB5BB ) || // Lo  [27] HANGUL SYLLABLE DDEOG..HANGUL SYLLABLE DDEOH\n\t\t( 0xB5BD <= code && code <= 0xB5D7 ) || // Lo  [27] HANGUL SYLLABLE DDEG..HANGUL SYLLABLE DDEH\n\t\t( 0xB5D9 <= code && code <= 0xB5F3 ) || // Lo  [27] HANGUL SYLLABLE DDYEOG..HANGUL SYLLABLE DDYEOH\n\t\t( 0xB5F5 <= code && code <= 0xB60F ) || // Lo  [27] HANGUL SYLLABLE DDYEG..HANGUL SYLLABLE DDYEH\n\t\t( 0xB611 <= code && code <= 0xB62B ) || // Lo  [27] HANGUL SYLLABLE DDOG..HANGUL SYLLABLE DDOH\n\t\t( 0xB62D <= code && code <= 0xB647 ) || // Lo  [27] HANGUL SYLLABLE DDWAG..HANGUL SYLLABLE DDWAH\n\t\t( 0xB649 <= code && code <= 0xB663 ) || // Lo  [27] HANGUL SYLLABLE DDWAEG..HANGUL SYLLABLE DDWAEH\n\t\t( 0xB665 <= code && code <= 0xB67F ) || // Lo  [27] HANGUL SYLLABLE DDOEG..HANGUL SYLLABLE DDOEH\n\t\t( 0xB681 <= code && code <= 0xB69B ) || // Lo  [27] HANGUL SYLLABLE DDYOG..HANGUL SYLLABLE DDYOH\n\t\t( 0xB69D <= code && code <= 0xB6B7 ) || // Lo  [27] HANGUL SYLLABLE DDUG..HANGUL SYLLABLE DDUH\n\t\t( 0xB6B9 <= code && code <= 0xB6D3 ) || // Lo  [27] HANGUL SYLLABLE DDWEOG..HANGUL SYLLABLE DDWEOH\n\t\t( 0xB6D5 <= code && code <= 0xB6EF ) || // Lo  [27] HANGUL SYLLABLE DDWEG..HANGUL SYLLABLE DDWEH\n\t\t( 0xB6F1 <= code && code <= 0xB70B ) || // Lo  [27] HANGUL SYLLABLE DDWIG..HANGUL SYLLABLE DDWIH\n\t\t( 0xB70D <= code && code <= 0xB727 ) || // Lo  [27] HANGUL SYLLABLE DDYUG..HANGUL SYLLABLE DDYUH\n\t\t( 0xB729 <= code && code <= 0xB743 ) || // Lo  [27] HANGUL SYLLABLE DDEUG..HANGUL SYLLABLE DDEUH\n\t\t( 0xB745 <= code && code <= 0xB75F ) || // Lo  [27] HANGUL SYLLABLE DDYIG..HANGUL SYLLABLE DDYIH\n\t\t( 0xB761 <= code && code <= 0xB77B ) || // Lo  [27] HANGUL SYLLABLE DDIG..HANGUL SYLLABLE DDIH\n\t\t( 0xB77D <= code && code <= 0xB797 ) || // Lo  [27] HANGUL SYLLABLE RAG..HANGUL SYLLABLE RAH\n\t\t( 0xB799 <= code && code <= 0xB7B3 ) || // Lo  [27] HANGUL SYLLABLE RAEG..HANGUL SYLLABLE RAEH\n\t\t( 0xB7B5 <= code && code <= 0xB7CF ) || // Lo  [27] HANGUL SYLLABLE RYAG..HANGUL SYLLABLE RYAH\n\t\t( 0xB7D1 <= code && code <= 0xB7EB ) || // Lo  [27] HANGUL SYLLABLE RYAEG..HANGUL SYLLABLE RYAEH\n\t\t( 0xB7ED <= code && code <= 0xB807 ) || // Lo  [27] HANGUL SYLLABLE REOG..HANGUL SYLLABLE REOH\n\t\t( 0xB809 <= code && code <= 0xB823 ) || // Lo  [27] HANGUL SYLLABLE REG..HANGUL SYLLABLE REH\n\t\t( 0xB825 <= code && code <= 0xB83F ) || // Lo  [27] HANGUL SYLLABLE RYEOG..HANGUL SYLLABLE RYEOH\n\t\t( 0xB841 <= code && code <= 0xB85B ) || // Lo  [27] HANGUL SYLLABLE RYEG..HANGUL SYLLABLE RYEH\n\t\t( 0xB85D <= code && code <= 0xB877 ) || // Lo  [27] HANGUL SYLLABLE ROG..HANGUL SYLLABLE ROH\n\t\t( 0xB879 <= code && code <= 0xB893 ) || // Lo  [27] HANGUL SYLLABLE RWAG..HANGUL SYLLABLE RWAH\n\t\t( 0xB895 <= code && code <= 0xB8AF ) || // Lo  [27] HANGUL SYLLABLE RWAEG..HANGUL SYLLABLE RWAEH\n\t\t( 0xB8B1 <= code && code <= 0xB8CB ) || // Lo  [27] HANGUL SYLLABLE ROEG..HANGUL SYLLABLE ROEH\n\t\t( 0xB8CD <= code && code <= 0xB8E7 ) || // Lo  [27] HANGUL SYLLABLE RYOG..HANGUL SYLLABLE RYOH\n\t\t( 0xB8E9 <= code && code <= 0xB903 ) || // Lo  [27] HANGUL SYLLABLE RUG..HANGUL SYLLABLE RUH\n\t\t( 0xB905 <= code && code <= 0xB91F ) || // Lo  [27] HANGUL SYLLABLE RWEOG..HANGUL SYLLABLE RWEOH\n\t\t( 0xB921 <= code && code <= 0xB93B ) || // Lo  [27] HANGUL SYLLABLE RWEG..HANGUL SYLLABLE RWEH\n\t\t( 0xB93D <= code && code <= 0xB957 ) || // Lo  [27] HANGUL SYLLABLE RWIG..HANGUL SYLLABLE RWIH\n\t\t( 0xB959 <= code && code <= 0xB973 ) || // Lo  [27] HANGUL SYLLABLE RYUG..HANGUL SYLLABLE RYUH\n\t\t( 0xB975 <= code && code <= 0xB98F ) || // Lo  [27] HANGUL SYLLABLE REUG..HANGUL SYLLABLE REUH\n\t\t( 0xB991 <= code && code <= 0xB9AB ) || // Lo  [27] HANGUL SYLLABLE RYIG..HANGUL SYLLABLE RYIH\n\t\t( 0xB9AD <= code && code <= 0xB9C7 ) || // Lo  [27] HANGUL SYLLABLE RIG..HANGUL SYLLABLE RIH\n\t\t( 0xB9C9 <= code && code <= 0xB9E3 ) || // Lo  [27] HANGUL SYLLABLE MAG..HANGUL SYLLABLE MAH\n\t\t( 0xB9E5 <= code && code <= 0xB9FF ) || // Lo  [27] HANGUL SYLLABLE MAEG..HANGUL SYLLABLE MAEH\n\t\t( 0xBA01 <= code && code <= 0xBA1B ) || // Lo  [27] HANGUL SYLLABLE MYAG..HANGUL SYLLABLE MYAH\n\t\t( 0xBA1D <= code && code <= 0xBA37 ) || // Lo  [27] HANGUL SYLLABLE MYAEG..HANGUL SYLLABLE MYAEH\n\t\t( 0xBA39 <= code && code <= 0xBA53 ) || // Lo  [27] HANGUL SYLLABLE MEOG..HANGUL SYLLABLE MEOH\n\t\t( 0xBA55 <= code && code <= 0xBA6F ) || // Lo  [27] HANGUL SYLLABLE MEG..HANGUL SYLLABLE MEH\n\t\t( 0xBA71 <= code && code <= 0xBA8B ) || // Lo  [27] HANGUL SYLLABLE MYEOG..HANGUL SYLLABLE MYEOH\n\t\t( 0xBA8D <= code && code <= 0xBAA7 ) || // Lo  [27] HANGUL SYLLABLE MYEG..HANGUL SYLLABLE MYEH\n\t\t( 0xBAA9 <= code && code <= 0xBAC3 ) || // Lo  [27] HANGUL SYLLABLE MOG..HANGUL SYLLABLE MOH\n\t\t( 0xBAC5 <= code && code <= 0xBADF ) || // Lo  [27] HANGUL SYLLABLE MWAG..HANGUL SYLLABLE MWAH\n\t\t( 0xBAE1 <= code && code <= 0xBAFB ) || // Lo  [27] HANGUL SYLLABLE MWAEG..HANGUL SYLLABLE MWAEH\n\t\t( 0xBAFD <= code && code <= 0xBB17 ) || // Lo  [27] HANGUL SYLLABLE MOEG..HANGUL SYLLABLE MOEH\n\t\t( 0xBB19 <= code && code <= 0xBB33 ) || // Lo  [27] HANGUL SYLLABLE MYOG..HANGUL SYLLABLE MYOH\n\t\t( 0xBB35 <= code && code <= 0xBB4F ) || // Lo  [27] HANGUL SYLLABLE MUG..HANGUL SYLLABLE MUH\n\t\t( 0xBB51 <= code && code <= 0xBB6B ) || // Lo  [27] HANGUL SYLLABLE MWEOG..HANGUL SYLLABLE MWEOH\n\t\t( 0xBB6D <= code && code <= 0xBB87 ) || // Lo  [27] HANGUL SYLLABLE MWEG..HANGUL SYLLABLE MWEH\n\t\t( 0xBB89 <= code && code <= 0xBBA3 ) || // Lo  [27] HANGUL SYLLABLE MWIG..HANGUL SYLLABLE MWIH\n\t\t( 0xBBA5 <= code && code <= 0xBBBF ) || // Lo  [27] HANGUL SYLLABLE MYUG..HANGUL SYLLABLE MYUH\n\t\t( 0xBBC1 <= code && code <= 0xBBDB ) || // Lo  [27] HANGUL SYLLABLE MEUG..HANGUL SYLLABLE MEUH\n\t\t( 0xBBDD <= code && code <= 0xBBF7 ) || // Lo  [27] HANGUL SYLLABLE MYIG..HANGUL SYLLABLE MYIH\n\t\t( 0xBBF9 <= code && code <= 0xBC13 ) || // Lo  [27] HANGUL SYLLABLE MIG..HANGUL SYLLABLE MIH\n\t\t( 0xBC15 <= code && code <= 0xBC2F ) || // Lo  [27] HANGUL SYLLABLE BAG..HANGUL SYLLABLE BAH\n\t\t( 0xBC31 <= code && code <= 0xBC4B ) || // Lo  [27] HANGUL SYLLABLE BAEG..HANGUL SYLLABLE BAEH\n\t\t( 0xBC4D <= code && code <= 0xBC67 ) || // Lo  [27] HANGUL SYLLABLE BYAG..HANGUL SYLLABLE BYAH\n\t\t( 0xBC69 <= code && code <= 0xBC83 ) || // Lo  [27] HANGUL SYLLABLE BYAEG..HANGUL SYLLABLE BYAEH\n\t\t( 0xBC85 <= code && code <= 0xBC9F ) || // Lo  [27] HANGUL SYLLABLE BEOG..HANGUL SYLLABLE BEOH\n\t\t( 0xBCA1 <= code && code <= 0xBCBB ) || // Lo  [27] HANGUL SYLLABLE BEG..HANGUL SYLLABLE BEH\n\t\t( 0xBCBD <= code && code <= 0xBCD7 ) || // Lo  [27] HANGUL SYLLABLE BYEOG..HANGUL SYLLABLE BYEOH\n\t\t( 0xBCD9 <= code && code <= 0xBCF3 ) || // Lo  [27] HANGUL SYLLABLE BYEG..HANGUL SYLLABLE BYEH\n\t\t( 0xBCF5 <= code && code <= 0xBD0F ) || // Lo  [27] HANGUL SYLLABLE BOG..HANGUL SYLLABLE BOH\n\t\t( 0xBD11 <= code && code <= 0xBD2B ) || // Lo  [27] HANGUL SYLLABLE BWAG..HANGUL SYLLABLE BWAH\n\t\t( 0xBD2D <= code && code <= 0xBD47 ) || // Lo  [27] HANGUL SYLLABLE BWAEG..HANGUL SYLLABLE BWAEH\n\t\t( 0xBD49 <= code && code <= 0xBD63 ) || // Lo  [27] HANGUL SYLLABLE BOEG..HANGUL SYLLABLE BOEH\n\t\t( 0xBD65 <= code && code <= 0xBD7F ) || // Lo  [27] HANGUL SYLLABLE BYOG..HANGUL SYLLABLE BYOH\n\t\t( 0xBD81 <= code && code <= 0xBD9B ) || // Lo  [27] HANGUL SYLLABLE BUG..HANGUL SYLLABLE BUH\n\t\t( 0xBD9D <= code && code <= 0xBDB7 ) || // Lo  [27] HANGUL SYLLABLE BWEOG..HANGUL SYLLABLE BWEOH\n\t\t( 0xBDB9 <= code && code <= 0xBDD3 ) || // Lo  [27] HANGUL SYLLABLE BWEG..HANGUL SYLLABLE BWEH\n\t\t( 0xBDD5 <= code && code <= 0xBDEF ) || // Lo  [27] HANGUL SYLLABLE BWIG..HANGUL SYLLABLE BWIH\n\t\t( 0xBDF1 <= code && code <= 0xBE0B ) || // Lo  [27] HANGUL SYLLABLE BYUG..HANGUL SYLLABLE BYUH\n\t\t( 0xBE0D <= code && code <= 0xBE27 ) || // Lo  [27] HANGUL SYLLABLE BEUG..HANGUL SYLLABLE BEUH\n\t\t( 0xBE29 <= code && code <= 0xBE43 ) || // Lo  [27] HANGUL SYLLABLE BYIG..HANGUL SYLLABLE BYIH\n\t\t( 0xBE45 <= code && code <= 0xBE5F ) || // Lo  [27] HANGUL SYLLABLE BIG..HANGUL SYLLABLE BIH\n\t\t( 0xBE61 <= code && code <= 0xBE7B ) || // Lo  [27] HANGUL SYLLABLE BBAG..HANGUL SYLLABLE BBAH\n\t\t( 0xBE7D <= code && code <= 0xBE97 ) || // Lo  [27] HANGUL SYLLABLE BBAEG..HANGUL SYLLABLE BBAEH\n\t\t( 0xBE99 <= code && code <= 0xBEB3 ) || // Lo  [27] HANGUL SYLLABLE BBYAG..HANGUL SYLLABLE BBYAH\n\t\t( 0xBEB5 <= code && code <= 0xBECF ) || // Lo  [27] HANGUL SYLLABLE BBYAEG..HANGUL SYLLABLE BBYAEH\n\t\t( 0xBED1 <= code && code <= 0xBEEB ) || // Lo  [27] HANGUL SYLLABLE BBEOG..HANGUL SYLLABLE BBEOH\n\t\t( 0xBEED <= code && code <= 0xBF07 ) || // Lo  [27] HANGUL SYLLABLE BBEG..HANGUL SYLLABLE BBEH\n\t\t( 0xBF09 <= code && code <= 0xBF23 ) || // Lo  [27] HANGUL SYLLABLE BBYEOG..HANGUL SYLLABLE BBYEOH\n\t\t( 0xBF25 <= code && code <= 0xBF3F ) || // Lo  [27] HANGUL SYLLABLE BBYEG..HANGUL SYLLABLE BBYEH\n\t\t( 0xBF41 <= code && code <= 0xBF5B ) || // Lo  [27] HANGUL SYLLABLE BBOG..HANGUL SYLLABLE BBOH\n\t\t( 0xBF5D <= code && code <= 0xBF77 ) || // Lo  [27] HANGUL SYLLABLE BBWAG..HANGUL SYLLABLE BBWAH\n\t\t( 0xBF79 <= code && code <= 0xBF93 ) || // Lo  [27] HANGUL SYLLABLE BBWAEG..HANGUL SYLLABLE BBWAEH\n\t\t( 0xBF95 <= code && code <= 0xBFAF ) || // Lo  [27] HANGUL SYLLABLE BBOEG..HANGUL SYLLABLE BBOEH\n\t\t( 0xBFB1 <= code && code <= 0xBFCB ) || // Lo  [27] HANGUL SYLLABLE BBYOG..HANGUL SYLLABLE BBYOH\n\t\t( 0xBFCD <= code && code <= 0xBFE7 ) || // Lo  [27] HANGUL SYLLABLE BBUG..HANGUL SYLLABLE BBUH\n\t\t( 0xBFE9 <= code && code <= 0xC003 ) || // Lo  [27] HANGUL SYLLABLE BBWEOG..HANGUL SYLLABLE BBWEOH\n\t\t( 0xC005 <= code && code <= 0xC01F ) || // Lo  [27] HANGUL SYLLABLE BBWEG..HANGUL SYLLABLE BBWEH\n\t\t( 0xC021 <= code && code <= 0xC03B ) || // Lo  [27] HANGUL SYLLABLE BBWIG..HANGUL SYLLABLE BBWIH\n\t\t( 0xC03D <= code && code <= 0xC057 ) || // Lo  [27] HANGUL SYLLABLE BBYUG..HANGUL SYLLABLE BBYUH\n\t\t( 0xC059 <= code && code <= 0xC073 ) || // Lo  [27] HANGUL SYLLABLE BBEUG..HANGUL SYLLABLE BBEUH\n\t\t( 0xC075 <= code && code <= 0xC08F ) || // Lo  [27] HANGUL SYLLABLE BBYIG..HANGUL SYLLABLE BBYIH\n\t\t( 0xC091 <= code && code <= 0xC0AB ) || // Lo  [27] HANGUL SYLLABLE BBIG..HANGUL SYLLABLE BBIH\n\t\t( 0xC0AD <= code && code <= 0xC0C7 ) || // Lo  [27] HANGUL SYLLABLE SAG..HANGUL SYLLABLE SAH\n\t\t( 0xC0C9 <= code && code <= 0xC0E3 ) || // Lo  [27] HANGUL SYLLABLE SAEG..HANGUL SYLLABLE SAEH\n\t\t( 0xC0E5 <= code && code <= 0xC0FF ) || // Lo  [27] HANGUL SYLLABLE SYAG..HANGUL SYLLABLE SYAH\n\t\t( 0xC101 <= code && code <= 0xC11B ) || // Lo  [27] HANGUL SYLLABLE SYAEG..HANGUL SYLLABLE SYAEH\n\t\t( 0xC11D <= code && code <= 0xC137 ) || // Lo  [27] HANGUL SYLLABLE SEOG..HANGUL SYLLABLE SEOH\n\t\t( 0xC139 <= code && code <= 0xC153 ) || // Lo  [27] HANGUL SYLLABLE SEG..HANGUL SYLLABLE SEH\n\t\t( 0xC155 <= code && code <= 0xC16F ) || // Lo  [27] HANGUL SYLLABLE SYEOG..HANGUL SYLLABLE SYEOH\n\t\t( 0xC171 <= code && code <= 0xC18B ) || // Lo  [27] HANGUL SYLLABLE SYEG..HANGUL SYLLABLE SYEH\n\t\t( 0xC18D <= code && code <= 0xC1A7 ) || // Lo  [27] HANGUL SYLLABLE SOG..HANGUL SYLLABLE SOH\n\t\t( 0xC1A9 <= code && code <= 0xC1C3 ) || // Lo  [27] HANGUL SYLLABLE SWAG..HANGUL SYLLABLE SWAH\n\t\t( 0xC1C5 <= code && code <= 0xC1DF ) || // Lo  [27] HANGUL SYLLABLE SWAEG..HANGUL SYLLABLE SWAEH\n\t\t( 0xC1E1 <= code && code <= 0xC1FB ) || // Lo  [27] HANGUL SYLLABLE SOEG..HANGUL SYLLABLE SOEH\n\t\t( 0xC1FD <= code && code <= 0xC217 ) || // Lo  [27] HANGUL SYLLABLE SYOG..HANGUL SYLLABLE SYOH\n\t\t( 0xC219 <= code && code <= 0xC233 ) || // Lo  [27] HANGUL SYLLABLE SUG..HANGUL SYLLABLE SUH\n\t\t( 0xC235 <= code && code <= 0xC24F ) || // Lo  [27] HANGUL SYLLABLE SWEOG..HANGUL SYLLABLE SWEOH\n\t\t( 0xC251 <= code && code <= 0xC26B ) || // Lo  [27] HANGUL SYLLABLE SWEG..HANGUL SYLLABLE SWEH\n\t\t( 0xC26D <= code && code <= 0xC287 ) || // Lo  [27] HANGUL SYLLABLE SWIG..HANGUL SYLLABLE SWIH\n\t\t( 0xC289 <= code && code <= 0xC2A3 ) || // Lo  [27] HANGUL SYLLABLE SYUG..HANGUL SYLLABLE SYUH\n\t\t( 0xC2A5 <= code && code <= 0xC2BF ) || // Lo  [27] HANGUL SYLLABLE SEUG..HANGUL SYLLABLE SEUH\n\t\t( 0xC2C1 <= code && code <= 0xC2DB ) || // Lo  [27] HANGUL SYLLABLE SYIG..HANGUL SYLLABLE SYIH\n\t\t( 0xC2DD <= code && code <= 0xC2F7 ) || // Lo  [27] HANGUL SYLLABLE SIG..HANGUL SYLLABLE SIH\n\t\t( 0xC2F9 <= code && code <= 0xC313 ) || // Lo  [27] HANGUL SYLLABLE SSAG..HANGUL SYLLABLE SSAH\n\t\t( 0xC315 <= code && code <= 0xC32F ) || // Lo  [27] HANGUL SYLLABLE SSAEG..HANGUL SYLLABLE SSAEH\n\t\t( 0xC331 <= code && code <= 0xC34B ) || // Lo  [27] HANGUL SYLLABLE SSYAG..HANGUL SYLLABLE SSYAH\n\t\t( 0xC34D <= code && code <= 0xC367 ) || // Lo  [27] HANGUL SYLLABLE SSYAEG..HANGUL SYLLABLE SSYAEH\n\t\t( 0xC369 <= code && code <= 0xC383 ) || // Lo  [27] HANGUL SYLLABLE SSEOG..HANGUL SYLLABLE SSEOH\n\t\t( 0xC385 <= code && code <= 0xC39F ) || // Lo  [27] HANGUL SYLLABLE SSEG..HANGUL SYLLABLE SSEH\n\t\t( 0xC3A1 <= code && code <= 0xC3BB ) || // Lo  [27] HANGUL SYLLABLE SSYEOG..HANGUL SYLLABLE SSYEOH\n\t\t( 0xC3BD <= code && code <= 0xC3D7 ) || // Lo  [27] HANGUL SYLLABLE SSYEG..HANGUL SYLLABLE SSYEH\n\t\t( 0xC3D9 <= code && code <= 0xC3F3 ) || // Lo  [27] HANGUL SYLLABLE SSOG..HANGUL SYLLABLE SSOH\n\t\t( 0xC3F5 <= code && code <= 0xC40F ) || // Lo  [27] HANGUL SYLLABLE SSWAG..HANGUL SYLLABLE SSWAH\n\t\t( 0xC411 <= code && code <= 0xC42B ) || // Lo  [27] HANGUL SYLLABLE SSWAEG..HANGUL SYLLABLE SSWAEH\n\t\t( 0xC42D <= code && code <= 0xC447 ) || // Lo  [27] HANGUL SYLLABLE SSOEG..HANGUL SYLLABLE SSOEH\n\t\t( 0xC449 <= code && code <= 0xC463 ) || // Lo  [27] HANGUL SYLLABLE SSYOG..HANGUL SYLLABLE SSYOH\n\t\t( 0xC465 <= code && code <= 0xC47F ) || // Lo  [27] HANGUL SYLLABLE SSUG..HANGUL SYLLABLE SSUH\n\t\t( 0xC481 <= code && code <= 0xC49B ) || // Lo  [27] HANGUL SYLLABLE SSWEOG..HANGUL SYLLABLE SSWEOH\n\t\t( 0xC49D <= code && code <= 0xC4B7 ) || // Lo  [27] HANGUL SYLLABLE SSWEG..HANGUL SYLLABLE SSWEH\n\t\t( 0xC4B9 <= code && code <= 0xC4D3 ) || // Lo  [27] HANGUL SYLLABLE SSWIG..HANGUL SYLLABLE SSWIH\n\t\t( 0xC4D5 <= code && code <= 0xC4EF ) || // Lo  [27] HANGUL SYLLABLE SSYUG..HANGUL SYLLABLE SSYUH\n\t\t( 0xC4F1 <= code && code <= 0xC50B ) || // Lo  [27] HANGUL SYLLABLE SSEUG..HANGUL SYLLABLE SSEUH\n\t\t( 0xC50D <= code && code <= 0xC527 ) || // Lo  [27] HANGUL SYLLABLE SSYIG..HANGUL SYLLABLE SSYIH\n\t\t( 0xC529 <= code && code <= 0xC543 ) || // Lo  [27] HANGUL SYLLABLE SSIG..HANGUL SYLLABLE SSIH\n\t\t( 0xC545 <= code && code <= 0xC55F ) || // Lo  [27] HANGUL SYLLABLE AG..HANGUL SYLLABLE AH\n\t\t( 0xC561 <= code && code <= 0xC57B ) || // Lo  [27] HANGUL SYLLABLE AEG..HANGUL SYLLABLE AEH\n\t\t( 0xC57D <= code && code <= 0xC597 ) || // Lo  [27] HANGUL SYLLABLE YAG..HANGUL SYLLABLE YAH\n\t\t( 0xC599 <= code && code <= 0xC5B3 ) || // Lo  [27] HANGUL SYLLABLE YAEG..HANGUL SYLLABLE YAEH\n\t\t( 0xC5B5 <= code && code <= 0xC5CF ) || // Lo  [27] HANGUL SYLLABLE EOG..HANGUL SYLLABLE EOH\n\t\t( 0xC5D1 <= code && code <= 0xC5EB ) || // Lo  [27] HANGUL SYLLABLE EG..HANGUL SYLLABLE EH\n\t\t( 0xC5ED <= code && code <= 0xC607 ) || // Lo  [27] HANGUL SYLLABLE YEOG..HANGUL SYLLABLE YEOH\n\t\t( 0xC609 <= code && code <= 0xC623 ) || // Lo  [27] HANGUL SYLLABLE YEG..HANGUL SYLLABLE YEH\n\t\t( 0xC625 <= code && code <= 0xC63F ) || // Lo  [27] HANGUL SYLLABLE OG..HANGUL SYLLABLE OH\n\t\t( 0xC641 <= code && code <= 0xC65B ) || // Lo  [27] HANGUL SYLLABLE WAG..HANGUL SYLLABLE WAH\n\t\t( 0xC65D <= code && code <= 0xC677 ) || // Lo  [27] HANGUL SYLLABLE WAEG..HANGUL SYLLABLE WAEH\n\t\t( 0xC679 <= code && code <= 0xC693 ) || // Lo  [27] HANGUL SYLLABLE OEG..HANGUL SYLLABLE OEH\n\t\t( 0xC695 <= code && code <= 0xC6AF ) || // Lo  [27] HANGUL SYLLABLE YOG..HANGUL SYLLABLE YOH\n\t\t( 0xC6B1 <= code && code <= 0xC6CB ) || // Lo  [27] HANGUL SYLLABLE UG..HANGUL SYLLABLE UH\n\t\t( 0xC6CD <= code && code <= 0xC6E7 ) || // Lo  [27] HANGUL SYLLABLE WEOG..HANGUL SYLLABLE WEOH\n\t\t( 0xC6E9 <= code && code <= 0xC703 ) || // Lo  [27] HANGUL SYLLABLE WEG..HANGUL SYLLABLE WEH\n\t\t( 0xC705 <= code && code <= 0xC71F ) || // Lo  [27] HANGUL SYLLABLE WIG..HANGUL SYLLABLE WIH\n\t\t( 0xC721 <= code && code <= 0xC73B ) || // Lo  [27] HANGUL SYLLABLE YUG..HANGUL SYLLABLE YUH\n\t\t( 0xC73D <= code && code <= 0xC757 ) || // Lo  [27] HANGUL SYLLABLE EUG..HANGUL SYLLABLE EUH\n\t\t( 0xC759 <= code && code <= 0xC773 ) || // Lo  [27] HANGUL SYLLABLE YIG..HANGUL SYLLABLE YIH\n\t\t( 0xC775 <= code && code <= 0xC78F ) || // Lo  [27] HANGUL SYLLABLE IG..HANGUL SYLLABLE IH\n\t\t( 0xC791 <= code && code <= 0xC7AB ) || // Lo  [27] HANGUL SYLLABLE JAG..HANGUL SYLLABLE JAH\n\t\t( 0xC7AD <= code && code <= 0xC7C7 ) || // Lo  [27] HANGUL SYLLABLE JAEG..HANGUL SYLLABLE JAEH\n\t\t( 0xC7C9 <= code && code <= 0xC7E3 ) || // Lo  [27] HANGUL SYLLABLE JYAG..HANGUL SYLLABLE JYAH\n\t\t( 0xC7E5 <= code && code <= 0xC7FF ) || // Lo  [27] HANGUL SYLLABLE JYAEG..HANGUL SYLLABLE JYAEH\n\t\t( 0xC801 <= code && code <= 0xC81B ) || // Lo  [27] HANGUL SYLLABLE JEOG..HANGUL SYLLABLE JEOH\n\t\t( 0xC81D <= code && code <= 0xC837 ) || // Lo  [27] HANGUL SYLLABLE JEG..HANGUL SYLLABLE JEH\n\t\t( 0xC839 <= code && code <= 0xC853 ) || // Lo  [27] HANGUL SYLLABLE JYEOG..HANGUL SYLLABLE JYEOH\n\t\t( 0xC855 <= code && code <= 0xC86F ) || // Lo  [27] HANGUL SYLLABLE JYEG..HANGUL SYLLABLE JYEH\n\t\t( 0xC871 <= code && code <= 0xC88B ) || // Lo  [27] HANGUL SYLLABLE JOG..HANGUL SYLLABLE JOH\n\t\t( 0xC88D <= code && code <= 0xC8A7 ) || // Lo  [27] HANGUL SYLLABLE JWAG..HANGUL SYLLABLE JWAH\n\t\t( 0xC8A9 <= code && code <= 0xC8C3 ) || // Lo  [27] HANGUL SYLLABLE JWAEG..HANGUL SYLLABLE JWAEH\n\t\t( 0xC8C5 <= code && code <= 0xC8DF ) || // Lo  [27] HANGUL SYLLABLE JOEG..HANGUL SYLLABLE JOEH\n\t\t( 0xC8E1 <= code && code <= 0xC8FB ) || // Lo  [27] HANGUL SYLLABLE JYOG..HANGUL SYLLABLE JYOH\n\t\t( 0xC8FD <= code && code <= 0xC917 ) || // Lo  [27] HANGUL SYLLABLE JUG..HANGUL SYLLABLE JUH\n\t\t( 0xC919 <= code && code <= 0xC933 ) || // Lo  [27] HANGUL SYLLABLE JWEOG..HANGUL SYLLABLE JWEOH\n\t\t( 0xC935 <= code && code <= 0xC94F ) || // Lo  [27] HANGUL SYLLABLE JWEG..HANGUL SYLLABLE JWEH\n\t\t( 0xC951 <= code && code <= 0xC96B ) || // Lo  [27] HANGUL SYLLABLE JWIG..HANGUL SYLLABLE JWIH\n\t\t( 0xC96D <= code && code <= 0xC987 ) || // Lo  [27] HANGUL SYLLABLE JYUG..HANGUL SYLLABLE JYUH\n\t\t( 0xC989 <= code && code <= 0xC9A3 ) || // Lo  [27] HANGUL SYLLABLE JEUG..HANGUL SYLLABLE JEUH\n\t\t( 0xC9A5 <= code && code <= 0xC9BF ) || // Lo  [27] HANGUL SYLLABLE JYIG..HANGUL SYLLABLE JYIH\n\t\t( 0xC9C1 <= code && code <= 0xC9DB ) || // Lo  [27] HANGUL SYLLABLE JIG..HANGUL SYLLABLE JIH\n\t\t( 0xC9DD <= code && code <= 0xC9F7 ) || // Lo  [27] HANGUL SYLLABLE JJAG..HANGUL SYLLABLE JJAH\n\t\t( 0xC9F9 <= code && code <= 0xCA13 ) || // Lo  [27] HANGUL SYLLABLE JJAEG..HANGUL SYLLABLE JJAEH\n\t\t( 0xCA15 <= code && code <= 0xCA2F ) || // Lo  [27] HANGUL SYLLABLE JJYAG..HANGUL SYLLABLE JJYAH\n\t\t( 0xCA31 <= code && code <= 0xCA4B ) || // Lo  [27] HANGUL SYLLABLE JJYAEG..HANGUL SYLLABLE JJYAEH\n\t\t( 0xCA4D <= code && code <= 0xCA67 ) || // Lo  [27] HANGUL SYLLABLE JJEOG..HANGUL SYLLABLE JJEOH\n\t\t( 0xCA69 <= code && code <= 0xCA83 ) || // Lo  [27] HANGUL SYLLABLE JJEG..HANGUL SYLLABLE JJEH\n\t\t( 0xCA85 <= code && code <= 0xCA9F ) || // Lo  [27] HANGUL SYLLABLE JJYEOG..HANGUL SYLLABLE JJYEOH\n\t\t( 0xCAA1 <= code && code <= 0xCABB ) || // Lo  [27] HANGUL SYLLABLE JJYEG..HANGUL SYLLABLE JJYEH\n\t\t( 0xCABD <= code && code <= 0xCAD7 ) || // Lo  [27] HANGUL SYLLABLE JJOG..HANGUL SYLLABLE JJOH\n\t\t( 0xCAD9 <= code && code <= 0xCAF3 ) || // Lo  [27] HANGUL SYLLABLE JJWAG..HANGUL SYLLABLE JJWAH\n\t\t( 0xCAF5 <= code && code <= 0xCB0F ) || // Lo  [27] HANGUL SYLLABLE JJWAEG..HANGUL SYLLABLE JJWAEH\n\t\t( 0xCB11 <= code && code <= 0xCB2B ) || // Lo  [27] HANGUL SYLLABLE JJOEG..HANGUL SYLLABLE JJOEH\n\t\t( 0xCB2D <= code && code <= 0xCB47 ) || // Lo  [27] HANGUL SYLLABLE JJYOG..HANGUL SYLLABLE JJYOH\n\t\t( 0xCB49 <= code && code <= 0xCB63 ) || // Lo  [27] HANGUL SYLLABLE JJUG..HANGUL SYLLABLE JJUH\n\t\t( 0xCB65 <= code && code <= 0xCB7F ) || // Lo  [27] HANGUL SYLLABLE JJWEOG..HANGUL SYLLABLE JJWEOH\n\t\t( 0xCB81 <= code && code <= 0xCB9B ) || // Lo  [27] HANGUL SYLLABLE JJWEG..HANGUL SYLLABLE JJWEH\n\t\t( 0xCB9D <= code && code <= 0xCBB7 ) || // Lo  [27] HANGUL SYLLABLE JJWIG..HANGUL SYLLABLE JJWIH\n\t\t( 0xCBB9 <= code && code <= 0xCBD3 ) || // Lo  [27] HANGUL SYLLABLE JJYUG..HANGUL SYLLABLE JJYUH\n\t\t( 0xCBD5 <= code && code <= 0xCBEF ) || // Lo  [27] HANGUL SYLLABLE JJEUG..HANGUL SYLLABLE JJEUH\n\t\t( 0xCBF1 <= code && code <= 0xCC0B ) || // Lo  [27] HANGUL SYLLABLE JJYIG..HANGUL SYLLABLE JJYIH\n\t\t( 0xCC0D <= code && code <= 0xCC27 ) || // Lo  [27] HANGUL SYLLABLE JJIG..HANGUL SYLLABLE JJIH\n\t\t( 0xCC29 <= code && code <= 0xCC43 ) || // Lo  [27] HANGUL SYLLABLE CAG..HANGUL SYLLABLE CAH\n\t\t( 0xCC45 <= code && code <= 0xCC5F ) || // Lo  [27] HANGUL SYLLABLE CAEG..HANGUL SYLLABLE CAEH\n\t\t( 0xCC61 <= code && code <= 0xCC7B ) || // Lo  [27] HANGUL SYLLABLE CYAG..HANGUL SYLLABLE CYAH\n\t\t( 0xCC7D <= code && code <= 0xCC97 ) || // Lo  [27] HANGUL SYLLABLE CYAEG..HANGUL SYLLABLE CYAEH\n\t\t( 0xCC99 <= code && code <= 0xCCB3 ) || // Lo  [27] HANGUL SYLLABLE CEOG..HANGUL SYLLABLE CEOH\n\t\t( 0xCCB5 <= code && code <= 0xCCCF ) || // Lo  [27] HANGUL SYLLABLE CEG..HANGUL SYLLABLE CEH\n\t\t( 0xCCD1 <= code && code <= 0xCCEB ) || // Lo  [27] HANGUL SYLLABLE CYEOG..HANGUL SYLLABLE CYEOH\n\t\t( 0xCCED <= code && code <= 0xCD07 ) || // Lo  [27] HANGUL SYLLABLE CYEG..HANGUL SYLLABLE CYEH\n\t\t( 0xCD09 <= code && code <= 0xCD23 ) || // Lo  [27] HANGUL SYLLABLE COG..HANGUL SYLLABLE COH\n\t\t( 0xCD25 <= code && code <= 0xCD3F ) || // Lo  [27] HANGUL SYLLABLE CWAG..HANGUL SYLLABLE CWAH\n\t\t( 0xCD41 <= code && code <= 0xCD5B ) || // Lo  [27] HANGUL SYLLABLE CWAEG..HANGUL SYLLABLE CWAEH\n\t\t( 0xCD5D <= code && code <= 0xCD77 ) || // Lo  [27] HANGUL SYLLABLE COEG..HANGUL SYLLABLE COEH\n\t\t( 0xCD79 <= code && code <= 0xCD93 ) || // Lo  [27] HANGUL SYLLABLE CYOG..HANGUL SYLLABLE CYOH\n\t\t( 0xCD95 <= code && code <= 0xCDAF ) || // Lo  [27] HANGUL SYLLABLE CUG..HANGUL SYLLABLE CUH\n\t\t( 0xCDB1 <= code && code <= 0xCDCB ) || // Lo  [27] HANGUL SYLLABLE CWEOG..HANGUL SYLLABLE CWEOH\n\t\t( 0xCDCD <= code && code <= 0xCDE7 ) || // Lo  [27] HANGUL SYLLABLE CWEG..HANGUL SYLLABLE CWEH\n\t\t( 0xCDE9 <= code && code <= 0xCE03 ) || // Lo  [27] HANGUL SYLLABLE CWIG..HANGUL SYLLABLE CWIH\n\t\t( 0xCE05 <= code && code <= 0xCE1F ) || // Lo  [27] HANGUL SYLLABLE CYUG..HANGUL SYLLABLE CYUH\n\t\t( 0xCE21 <= code && code <= 0xCE3B ) || // Lo  [27] HANGUL SYLLABLE CEUG..HANGUL SYLLABLE CEUH\n\t\t( 0xCE3D <= code && code <= 0xCE57 ) || // Lo  [27] HANGUL SYLLABLE CYIG..HANGUL SYLLABLE CYIH\n\t\t( 0xCE59 <= code && code <= 0xCE73 ) || // Lo  [27] HANGUL SYLLABLE CIG..HANGUL SYLLABLE CIH\n\t\t( 0xCE75 <= code && code <= 0xCE8F ) || // Lo  [27] HANGUL SYLLABLE KAG..HANGUL SYLLABLE KAH\n\t\t( 0xCE91 <= code && code <= 0xCEAB ) || // Lo  [27] HANGUL SYLLABLE KAEG..HANGUL SYLLABLE KAEH\n\t\t( 0xCEAD <= code && code <= 0xCEC7 ) || // Lo  [27] HANGUL SYLLABLE KYAG..HANGUL SYLLABLE KYAH\n\t\t( 0xCEC9 <= code && code <= 0xCEE3 ) || // Lo  [27] HANGUL SYLLABLE KYAEG..HANGUL SYLLABLE KYAEH\n\t\t( 0xCEE5 <= code && code <= 0xCEFF ) || // Lo  [27] HANGUL SYLLABLE KEOG..HANGUL SYLLABLE KEOH\n\t\t( 0xCF01 <= code && code <= 0xCF1B ) || // Lo  [27] HANGUL SYLLABLE KEG..HANGUL SYLLABLE KEH\n\t\t( 0xCF1D <= code && code <= 0xCF37 ) || // Lo  [27] HANGUL SYLLABLE KYEOG..HANGUL SYLLABLE KYEOH\n\t\t( 0xCF39 <= code && code <= 0xCF53 ) || // Lo  [27] HANGUL SYLLABLE KYEG..HANGUL SYLLABLE KYEH\n\t\t( 0xCF55 <= code && code <= 0xCF6F ) || // Lo  [27] HANGUL SYLLABLE KOG..HANGUL SYLLABLE KOH\n\t\t( 0xCF71 <= code && code <= 0xCF8B ) || // Lo  [27] HANGUL SYLLABLE KWAG..HANGUL SYLLABLE KWAH\n\t\t( 0xCF8D <= code && code <= 0xCFA7 ) || // Lo  [27] HANGUL SYLLABLE KWAEG..HANGUL SYLLABLE KWAEH\n\t\t( 0xCFA9 <= code && code <= 0xCFC3 ) || // Lo  [27] HANGUL SYLLABLE KOEG..HANGUL SYLLABLE KOEH\n\t\t( 0xCFC5 <= code && code <= 0xCFDF ) || // Lo  [27] HANGUL SYLLABLE KYOG..HANGUL SYLLABLE KYOH\n\t\t( 0xCFE1 <= code && code <= 0xCFFB ) || // Lo  [27] HANGUL SYLLABLE KUG..HANGUL SYLLABLE KUH\n\t\t( 0xCFFD <= code && code <= 0xD017 ) || // Lo  [27] HANGUL SYLLABLE KWEOG..HANGUL SYLLABLE KWEOH\n\t\t( 0xD019 <= code && code <= 0xD033 ) || // Lo  [27] HANGUL SYLLABLE KWEG..HANGUL SYLLABLE KWEH\n\t\t( 0xD035 <= code && code <= 0xD04F ) || // Lo  [27] HANGUL SYLLABLE KWIG..HANGUL SYLLABLE KWIH\n\t\t( 0xD051 <= code && code <= 0xD06B ) || // Lo  [27] HANGUL SYLLABLE KYUG..HANGUL SYLLABLE KYUH\n\t\t( 0xD06D <= code && code <= 0xD087 ) || // Lo  [27] HANGUL SYLLABLE KEUG..HANGUL SYLLABLE KEUH\n\t\t( 0xD089 <= code && code <= 0xD0A3 ) || // Lo  [27] HANGUL SYLLABLE KYIG..HANGUL SYLLABLE KYIH\n\t\t( 0xD0A5 <= code && code <= 0xD0BF ) || // Lo  [27] HANGUL SYLLABLE KIG..HANGUL SYLLABLE KIH\n\t\t( 0xD0C1 <= code && code <= 0xD0DB ) || // Lo  [27] HANGUL SYLLABLE TAG..HANGUL SYLLABLE TAH\n\t\t( 0xD0DD <= code && code <= 0xD0F7 ) || // Lo  [27] HANGUL SYLLABLE TAEG..HANGUL SYLLABLE TAEH\n\t\t( 0xD0F9 <= code && code <= 0xD113 ) || // Lo  [27] HANGUL SYLLABLE TYAG..HANGUL SYLLABLE TYAH\n\t\t( 0xD115 <= code && code <= 0xD12F ) || // Lo  [27] HANGUL SYLLABLE TYAEG..HANGUL SYLLABLE TYAEH\n\t\t( 0xD131 <= code && code <= 0xD14B ) || // Lo  [27] HANGUL SYLLABLE TEOG..HANGUL SYLLABLE TEOH\n\t\t( 0xD14D <= code && code <= 0xD167 ) || // Lo  [27] HANGUL SYLLABLE TEG..HANGUL SYLLABLE TEH\n\t\t( 0xD169 <= code && code <= 0xD183 ) || // Lo  [27] HANGUL SYLLABLE TYEOG..HANGUL SYLLABLE TYEOH\n\t\t( 0xD185 <= code && code <= 0xD19F ) || // Lo  [27] HANGUL SYLLABLE TYEG..HANGUL SYLLABLE TYEH\n\t\t( 0xD1A1 <= code && code <= 0xD1BB ) || // Lo  [27] HANGUL SYLLABLE TOG..HANGUL SYLLABLE TOH\n\t\t( 0xD1BD <= code && code <= 0xD1D7 ) || // Lo  [27] HANGUL SYLLABLE TWAG..HANGUL SYLLABLE TWAH\n\t\t( 0xD1D9 <= code && code <= 0xD1F3 ) || // Lo  [27] HANGUL SYLLABLE TWAEG..HANGUL SYLLABLE TWAEH\n\t\t( 0xD1F5 <= code && code <= 0xD20F ) || // Lo  [27] HANGUL SYLLABLE TOEG..HANGUL SYLLABLE TOEH\n\t\t( 0xD211 <= code && code <= 0xD22B ) || // Lo  [27] HANGUL SYLLABLE TYOG..HANGUL SYLLABLE TYOH\n\t\t( 0xD22D <= code && code <= 0xD247 ) || // Lo  [27] HANGUL SYLLABLE TUG..HANGUL SYLLABLE TUH\n\t\t( 0xD249 <= code && code <= 0xD263 ) || // Lo  [27] HANGUL SYLLABLE TWEOG..HANGUL SYLLABLE TWEOH\n\t\t( 0xD265 <= code && code <= 0xD27F ) || // Lo  [27] HANGUL SYLLABLE TWEG..HANGUL SYLLABLE TWEH\n\t\t( 0xD281 <= code && code <= 0xD29B ) || // Lo  [27] HANGUL SYLLABLE TWIG..HANGUL SYLLABLE TWIH\n\t\t( 0xD29D <= code && code <= 0xD2B7 ) || // Lo  [27] HANGUL SYLLABLE TYUG..HANGUL SYLLABLE TYUH\n\t\t( 0xD2B9 <= code && code <= 0xD2D3 ) || // Lo  [27] HANGUL SYLLABLE TEUG..HANGUL SYLLABLE TEUH\n\t\t( 0xD2D5 <= code && code <= 0xD2EF ) || // Lo  [27] HANGUL SYLLABLE TYIG..HANGUL SYLLABLE TYIH\n\t\t( 0xD2F1 <= code && code <= 0xD30B ) || // Lo  [27] HANGUL SYLLABLE TIG..HANGUL SYLLABLE TIH\n\t\t( 0xD30D <= code && code <= 0xD327 ) || // Lo  [27] HANGUL SYLLABLE PAG..HANGUL SYLLABLE PAH\n\t\t( 0xD329 <= code && code <= 0xD343 ) || // Lo  [27] HANGUL SYLLABLE PAEG..HANGUL SYLLABLE PAEH\n\t\t( 0xD345 <= code && code <= 0xD35F ) || // Lo  [27] HANGUL SYLLABLE PYAG..HANGUL SYLLABLE PYAH\n\t\t( 0xD361 <= code && code <= 0xD37B ) || // Lo  [27] HANGUL SYLLABLE PYAEG..HANGUL SYLLABLE PYAEH\n\t\t( 0xD37D <= code && code <= 0xD397 ) || // Lo  [27] HANGUL SYLLABLE PEOG..HANGUL SYLLABLE PEOH\n\t\t( 0xD399 <= code && code <= 0xD3B3 ) || // Lo  [27] HANGUL SYLLABLE PEG..HANGUL SYLLABLE PEH\n\t\t( 0xD3B5 <= code && code <= 0xD3CF ) || // Lo  [27] HANGUL SYLLABLE PYEOG..HANGUL SYLLABLE PYEOH\n\t\t( 0xD3D1 <= code && code <= 0xD3EB ) || // Lo  [27] HANGUL SYLLABLE PYEG..HANGUL SYLLABLE PYEH\n\t\t( 0xD3ED <= code && code <= 0xD407 ) || // Lo  [27] HANGUL SYLLABLE POG..HANGUL SYLLABLE POH\n\t\t( 0xD409 <= code && code <= 0xD423 ) || // Lo  [27] HANGUL SYLLABLE PWAG..HANGUL SYLLABLE PWAH\n\t\t( 0xD425 <= code && code <= 0xD43F ) || // Lo  [27] HANGUL SYLLABLE PWAEG..HANGUL SYLLABLE PWAEH\n\t\t( 0xD441 <= code && code <= 0xD45B ) || // Lo  [27] HANGUL SYLLABLE POEG..HANGUL SYLLABLE POEH\n\t\t( 0xD45D <= code && code <= 0xD477 ) || // Lo  [27] HANGUL SYLLABLE PYOG..HANGUL SYLLABLE PYOH\n\t\t( 0xD479 <= code && code <= 0xD493 ) || // Lo  [27] HANGUL SYLLABLE PUG..HANGUL SYLLABLE PUH\n\t\t( 0xD495 <= code && code <= 0xD4AF ) || // Lo  [27] HANGUL SYLLABLE PWEOG..HANGUL SYLLABLE PWEOH\n\t\t( 0xD4B1 <= code && code <= 0xD4CB ) || // Lo  [27] HANGUL SYLLABLE PWEG..HANGUL SYLLABLE PWEH\n\t\t( 0xD4CD <= code && code <= 0xD4E7 ) || // Lo  [27] HANGUL SYLLABLE PWIG..HANGUL SYLLABLE PWIH\n\t\t( 0xD4E9 <= code && code <= 0xD503 ) || // Lo  [27] HANGUL SYLLABLE PYUG..HANGUL SYLLABLE PYUH\n\t\t( 0xD505 <= code && code <= 0xD51F ) || // Lo  [27] HANGUL SYLLABLE PEUG..HANGUL SYLLABLE PEUH\n\t\t( 0xD521 <= code && code <= 0xD53B ) || // Lo  [27] HANGUL SYLLABLE PYIG..HANGUL SYLLABLE PYIH\n\t\t( 0xD53D <= code && code <= 0xD557 ) || // Lo  [27] HANGUL SYLLABLE PIG..HANGUL SYLLABLE PIH\n\t\t( 0xD559 <= code && code <= 0xD573 ) || // Lo  [27] HANGUL SYLLABLE HAG..HANGUL SYLLABLE HAH\n\t\t( 0xD575 <= code && code <= 0xD58F ) || // Lo  [27] HANGUL SYLLABLE HAEG..HANGUL SYLLABLE HAEH\n\t\t( 0xD591 <= code && code <= 0xD5AB ) || // Lo  [27] HANGUL SYLLABLE HYAG..HANGUL SYLLABLE HYAH\n\t\t( 0xD5AD <= code && code <= 0xD5C7 ) || // Lo  [27] HANGUL SYLLABLE HYAEG..HANGUL SYLLABLE HYAEH\n\t\t( 0xD5C9 <= code && code <= 0xD5E3 ) || // Lo  [27] HANGUL SYLLABLE HEOG..HANGUL SYLLABLE HEOH\n\t\t( 0xD5E5 <= code && code <= 0xD5FF ) || // Lo  [27] HANGUL SYLLABLE HEG..HANGUL SYLLABLE HEH\n\t\t( 0xD601 <= code && code <= 0xD61B ) || // Lo  [27] HANGUL SYLLABLE HYEOG..HANGUL SYLLABLE HYEOH\n\t\t( 0xD61D <= code && code <= 0xD637 ) || // Lo  [27] HANGUL SYLLABLE HYEG..HANGUL SYLLABLE HYEH\n\t\t( 0xD639 <= code && code <= 0xD653 ) || // Lo  [27] HANGUL SYLLABLE HOG..HANGUL SYLLABLE HOH\n\t\t( 0xD655 <= code && code <= 0xD66F ) || // Lo  [27] HANGUL SYLLABLE HWAG..HANGUL SYLLABLE HWAH\n\t\t( 0xD671 <= code && code <= 0xD68B ) || // Lo  [27] HANGUL SYLLABLE HWAEG..HANGUL SYLLABLE HWAEH\n\t\t( 0xD68D <= code && code <= 0xD6A7 ) || // Lo  [27] HANGUL SYLLABLE HOEG..HANGUL SYLLABLE HOEH\n\t\t( 0xD6A9 <= code && code <= 0xD6C3 ) || // Lo  [27] HANGUL SYLLABLE HYOG..HANGUL SYLLABLE HYOH\n\t\t( 0xD6C5 <= code && code <= 0xD6DF ) || // Lo  [27] HANGUL SYLLABLE HUG..HANGUL SYLLABLE HUH\n\t\t( 0xD6E1 <= code && code <= 0xD6FB ) || // Lo  [27] HANGUL SYLLABLE HWEOG..HANGUL SYLLABLE HWEOH\n\t\t( 0xD6FD <= code && code <= 0xD717 ) || // Lo  [27] HANGUL SYLLABLE HWEG..HANGUL SYLLABLE HWEH\n\t\t( 0xD719 <= code && code <= 0xD733 ) || // Lo  [27] HANGUL SYLLABLE HWIG..HANGUL SYLLABLE HWIH\n\t\t( 0xD735 <= code && code <= 0xD74F ) || // Lo  [27] HANGUL SYLLABLE HYUG..HANGUL SYLLABLE HYUH\n\t\t( 0xD751 <= code && code <= 0xD76B ) || // Lo  [27] HANGUL SYLLABLE HEUG..HANGUL SYLLABLE HEUH\n\t\t( 0xD76D <= code && code <= 0xD787 ) || // Lo  [27] HANGUL SYLLABLE HYIG..HANGUL SYLLABLE HYIH\n\t\t( 0xD789 <= code && code <= 0xD7A3 ) // Lo  [27] HANGUL SYLLABLE HIG..HANGUL SYLLABLE HIH\n\t) {\n\t\treturn constants.LVT;\n\t}\n\tif (\n\t\tcode === 0x200D // Cf       ZERO WIDTH JOINER\n\t) {\n\t\treturn constants.ZWJ;\n\t}\n\t// All unlisted characters have a grapheme break property of \"Other\":\n\treturn constants.Other;\n}\n\n\n// EXPORTS //\n\nmodule.exports = graphemeBreakProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Grapheme cluster break tooling.\n*\n* @module @stdlib/string/tools/grapheme-cluster-break\n*\n* @example\n* var grapheme = require( '@stdlib/string/tools/grapheme-cluster-break' );\n*\n* var out = grapheme.emojiProperty( 0x23EC );\n* // returns 101\n*\n* out = grapheme.breakProperty( 0x008f );\n* // returns 2\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar constants = require( './constants.js' );\nvar breakType = require( './break_type.js' );\nvar emojiProperty = require( './emoji_property.js' );\nvar breakProperty = require( './break_property.js' );\n\n\n// MAIN //\n\nvar main = {};\nsetReadOnly( main, 'constants', constants );\nsetReadOnly( main, 'breakType', breakType );\nsetReadOnly( main, 'emojiProperty', emojiProperty );\nsetReadOnly( main, 'breakProperty', breakProperty );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar codePointAt = require( './../../code-point-at' );\nvar hasUTF16SurrogatePairAt = require( '@stdlib/assert/has-utf16-surrogate-pair-at' );\nvar grapheme = require( './../../tools/grapheme-cluster-break' );\nvar format = require( './../../format' );\n\n\n// VARIABLES //\n\nvar breakType = grapheme.breakType;\nvar breakProperty = grapheme.breakProperty;\nvar emojiProperty = grapheme.emojiProperty;\n\n\n// MAIN //\n\n/**\n* Returns the next extended grapheme cluster break in a string after a specified position.\n*\n* @param {string} str - input string\n* @param {integer} [fromIndex=0] - position\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be an integer\n* @returns {NonNegativeInteger} next grapheme break position\n*\n* @example\n* var out = nextGraphemeClusterBreak( 'last man standing', 4 );\n* // returns 5\n*\n* @example\n* var out = nextGraphemeClusterBreak( 'presidential election', 8 );\n* // returns 9\n*\n* @example\n* var out = nextGraphemeClusterBreak( 'अनुच्छेद', 1 );\n* // returns 3\n*\n* @example\n* var out = nextGraphemeClusterBreak( '🌷' );\n* // returns -1\n*/\nfunction nextGraphemeClusterBreak( str, fromIndex ) {\n\tvar breaks;\n\tvar emoji;\n\tvar len;\n\tvar idx;\n\tvar cp;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tidx = fromIndex;\n\t} else {\n\t\tidx = 0;\n\t}\n\tlen = str.length;\n\tif ( idx < 0 ) {\n\t\tidx += len;\n\t\tif ( idx < 0 ) {\n\t\t\tidx = 0;\n\t\t}\n\t}\n\tif ( len === 0 || idx >= len ) {\n\t\treturn -1;\n\t}\n\t// Initialize caches for storing grapheme break and emoji properties:\n\tbreaks = [];\n\temoji = [];\n\n\t// Get the code point for the starting index:\n\tcp = codePointAt( str, idx );\n\n\t// Get the corresponding grapheme break and emoji properties:\n\tbreaks.push( breakProperty( cp ) );\n\temoji.push( emojiProperty( cp ) );\n\n\t// Begin searching for the next grapheme cluster break...\n\tfor ( i = idx+1; i < len; i++ ) {\n\t\t// If the current character is part of a surrogate pair, move along...\n\t\tif ( hasUTF16SurrogatePairAt( str, i-1 ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Get the next code point:\n\t\tcp = codePointAt( str, i );\n\n\t\t// Get the corresponding grapheme break and emoji properties:\n\t\tbreaks.push( breakProperty( cp ) );\n\t\temoji.push( emojiProperty( cp ) );\n\n\t\t// Determine if we've encountered a grapheme cluster break...\n\t\tif ( breakType( breaks, emoji ) > 0 ) {\n\t\t\t// We've found a break!\n\t\t\treturn i;\n\t\t}\n\t}\n\t// Unable to find a grapheme cluster break:\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nextGraphemeClusterBreak;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the next extended grapheme cluster break in a string after a specified position.\n*\n* @module @stdlib/string/next-grapheme-cluster-break\n*\n* @example\n* var nextGraphemeClusterBreak = require( '@stdlib/string/next-grapheme-cluster-break' );\n*\n* var out = nextGraphemeClusterBreak( 'अनुच्छेद', 1 );\n* // returns 3\n*\n* out = nextGraphemeClusterBreak( '🌷', 0 );\n* // returns -1\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar nextGraphemeClusterBreak = require( './../../next-grapheme-cluster-break' );\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Splits a string by its grapheme cluster breaks.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string primitive\n* @returns {StringArray} array of grapheme clusters\n*\n* @example\n* var out = splitGraphemeClusters( 'café' );\n* // returns [ 'c', 'a', 'f', 'é' ]\n*\n* @example\n* var out = splitGraphemeClusters( '🍕🍕🍕' );\n* // returns [ '🍕', '🍕', '🍕' ]\n*/\nfunction splitGraphemeClusters( str ) {\n\tvar idx;\n\tvar brk;\n\tvar out;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\tidx = 0;\n\tout = [];\n\tif ( str.length === 0 ) {\n\t\treturn out;\n\t}\n\tbrk = nextGraphemeClusterBreak( str, idx );\n\twhile ( brk !== -1 ) {\n\t\tout.push( str.substring( idx, brk ) );\n\t\tidx = brk;\n\t\tbrk = nextGraphemeClusterBreak( str, idx );\n\t}\n\tout.push( str.substring( idx ) );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = splitGraphemeClusters;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split a string by its grapheme cluster breaks.\n*\n* @module @stdlib/string/split-grapheme-clusters\n*\n* @example\n* var splitGraphemeClusters = require( '@stdlib/string/split-grapheme-clusters' );\n*\n* var out = splitGraphemeClusters( 'café' );\n* // returns [ 'c', 'a', 'f', 'é' ]\n*\n* out = splitGraphemeClusters( '🍕🍕🍕' );\n* // returns [ '🍕', '🍕', '🍕' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar splitGraphemeClusters = require( './../../split-grapheme-clusters' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;\nvar replace = require( './../../replace' );\nvar rescape = require( '@stdlib/utils/escape-regexp-string' );\nvar format = require( './../../format' );\n\n\n// VARIABLES //\n\nvar WHITESPACE_CHARS = '\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\n\n\n// MAIN //\n\n/**\n* Trims `n` characters from the beginning of a string.\n*\n* @param {string} str - input string\n* @param {NonNegativeInteger} n - number of characters to trim\n* @param {(string|StringArray)} [chars] - characters to trim (defaults to whitespace characters)\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a string or an array of strings\n* @returns {string} trimmed string\n*\n* @example\n* var str = '   abc   ';\n* var out = ltrimN( str, 2 );\n* // returns ' abc   '\n*\n* @example\n* var str = '   abc   ';\n* var out = ltrimN( str, str.length );\n* // returns 'abc   '\n*\n* @example\n* var str = '~~abc!~~';\n* var out = ltrimN( str, str.length, [ '~', '!' ] );\n* // returns 'abc!~~'\n*\n* @example\n* var str = '🤖👨🏼‍🎨🤖👨🏼‍🎨🤖👨🏼‍🎨';\n* var out = ltrimN( str, str.length, '👨🏼‍🎨🤖' );\n* // returns ''\n*/\nfunction ltrimN( str, n, chars ) {\n\tvar nElems;\n\tvar reStr;\n\tvar isStr;\n\tvar RE;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', n ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tisStr = isString( chars );\n\t\tif ( !isStr && !isStringArray( chars ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a string or an array of strings. Value: `%s`.', chars ) );\n\t\t}\n\t\tif ( isStr ) {\n\t\t\tchars = splitGraphemeClusters( chars );\n\t\t}\n\t\tnElems = chars.length - 1;\n\t\treStr = '';\n\t\tfor ( i = 0; i < nElems; i++ ) {\n\t\t\treStr += rescape( chars[ i ] );\n\t\t\treStr += '|';\n\t\t}\n\t\treStr += rescape( chars[ nElems ] );\n\n\t\t// Case: Trim a specific set of characters from the beginning of a string..\n\t\tRE = new RegExp( '^(?:' + reStr + '){0,'+n+'}' );\n\t} else {\n\t\t// Case: Trim `n` whitespace characters from the beginning of a string...\n\t\tRE = new RegExp( '^[' + WHITESPACE_CHARS + ']{0,'+n+'}' );\n\t}\n\treturn replace( str, RE, '' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ltrimN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Trim `n` characters from the beginning of a string.\n*\n* @module @stdlib/string/left-trim-n\n*\n* @example\n* var ltrimN = require( '@stdlib/string/left-trim-n' );\n*\n* var str = 'foo  ';\n* var out = ltrimN( str, str.length );\n* // returns 'foo  '\n*\n* str = '🐶🐶🐶 Animals 🐶🐶🐶';\n* out = ltrimN( str, 4, [ '🐶', ' ' ] );\n* // returns 'Animals 🐶🐶🐶'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/lowercase' );\n\n\n// MAIN //\n\n/**\n* Converts a string to lowercase.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} lowercase string\n*\n* @example\n* var str = lowercase( 'bEEp' );\n* // returns 'beep'\n*/\nfunction lowercase( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = lowercase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to lowercase.\n*\n* @module @stdlib/string/lowercase\n*\n* @example\n* var lowercase = require( '@stdlib/string/lowercase' );\n*\n* var str = lowercase( 'bEEp' );\n* // returns 'beep'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar nextGraphemeClusterBreak = require( './../../next-grapheme-cluster-break' );\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Returns the number of grapheme clusters in a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string\n* @returns {NonNegativeInteger} number of grapheme clusters\n*\n* @example\n* var out = numGraphemeClusters( 'last man standing' );\n* // returns 17\n*\n* @example\n* var out = numGraphemeClusters( 'presidential election' );\n* // returns 21\n*\n* @example\n* var out = numGraphemeClusters( 'अनुच्छेद' );\n* // returns 5\n*\n* @example\n* var out = numGraphemeClusters( '🌷' );\n* // returns 1\n*/\nfunction numGraphemeClusters( str ) {\n\tvar count;\n\tvar idx;\n\tvar brk;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\tcount = 0;\n\tidx = 0;\n\n\tbrk = nextGraphemeClusterBreak( str, idx );\n\twhile ( brk !== -1 ) {\n\t\tcount += 1;\n\t\tidx = brk;\n\t\tbrk = nextGraphemeClusterBreak( str, idx );\n\t}\n\tif ( idx < str.length ) {\n\t\tcount += 1;\n\t}\n\treturn count;\n}\n\n\n// EXPORTS //\n\nmodule.exports = numGraphemeClusters;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the number of grapheme clusters in a string.\n*\n* @module @stdlib/string/num-grapheme-clusters\n*\n* @example\n* var numGraphemeClusters = require( '@stdlib/string/num-grapheme-clusters' );\n*\n* var out = numGraphemeClusters( 'last man standing' );\n* // returns 17\n*\n* out = numGraphemeClusters( '🌷' );\n* // returns 1\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/repeat' );\n\n\n// MAIN //\n\n/**\n* Repeats a string a specified number of times and returns the concatenated result.\n*\n* @param {string} str - string to repeat\n* @param {NonNegativeInteger} n - number of times to repeat the string\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {RangeError} output string length must not exceed maximum allowed string length\n* @returns {string} repeated string\n*\n* @example\n* var str = repeat( 'a', 5 );\n* // returns 'aaaaa'\n*\n* @example\n* var str = repeat( '', 100 );\n* // returns ''\n*\n* @example\n* var str = repeat( 'beep', 0 );\n* // returns ''\n*/\nfunction repeat( str, n ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', n ) );\n\t}\n\treturn base( str, n );\n}\n\n\n// EXPORTS //\n\nmodule.exports = repeat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Repeat a string a specified number of times and return the concatenated result.\n*\n* @module @stdlib/string/repeat\n*\n* @example\n* var replace = require( '@stdlib/string/repeat' );\n*\n* var str = repeat( 'a', 5 );\n* // returns 'aaaaa'\n*\n* str = repeat( '', 100 );\n* // returns ''\n*\n* str = repeat( 'beep', 0 );\n* // returns ''\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar repeat = require( './../../repeat' );\nvar ceil = require( '@stdlib/math/base/special/ceil' );\nvar format = require( './../../format' );\nvar FLOAT64_MAX_SAFE_INTEGER = require( '@stdlib/constants/float64/max-safe-integer' );\n\n\n// MAIN //\n\n/**\n* Right pads a string such that the padded string has a length of at least `len`.\n*\n* @param {string} str - string to pad\n* @param {NonNegativeInteger} len - minimum string length\n* @param {string} [pad=' '] - string used to pad\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a string\n* @throws {RangeError} padding must have a length greater than `0`\n* @returns {string} padded string\n*\n* @example\n* var str = rpad( 'a', 5 );\n* // returns 'a    '\n*\n* @example\n* var str = rpad( 'beep', 10, 'p' );\n* // returns 'beeppppppp'\n*\n* @example\n* var str = rpad( 'beep', 12, 'boop' );\n* // returns 'beepboopboop'\n*/\nfunction rpad( str, len, pad ) {\n\tvar n;\n\tvar p;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', len ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tp = pad;\n\t\tif ( !isString( p ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a string. Value: `%s`.', p ) );\n\t\t}\n\t\tif ( p.length === 0 ) {\n\t\t\tthrow new RangeError( 'invalid argument. Pad string must not be an empty string.' );\n\t\t}\n\t} else {\n\t\tp = ' ';\n\t}\n\tif ( len > FLOAT64_MAX_SAFE_INTEGER ) {\n\t\tthrow new RangeError( format( 'invalid argument. Output string length exceeds maximum allowed string length. Value: `%u`.', len ) );\n\t}\n\tn = ( len - str.length ) / p.length;\n\tif ( n <= 0 ) {\n\t\treturn str;\n\t}\n\tn = ceil( n );\n\treturn str + repeat( p, n );\n}\n\n\n// EXPORTS //\n\nmodule.exports = rpad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Right pad a string such that the padded string has a length of at least `len`.\n*\n* @module @stdlib/string/right-pad\n*\n* @example\n* var rpad = require( '@stdlib/string/right-pad' );\n*\n* var str = rpad( 'a', 5 );\n* // returns 'a    '\n*\n* str = rpad( 'beep', 10, 'p' );\n* // returns 'beeppppppp'\n*\n* str = rpad( 'beep', 12, 'boop' );\n* // returns 'beepboopboop'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the absolute value of a double-precision floating-point number `x`.\n*\n* @param {number} x - input value\n* @returns {number} absolute value\n*\n* @example\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = abs( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = abs( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( -0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( NaN );\n* // returns NaN\n*/\nfunction abs( x ) {\n\treturn Math.abs( x ); // eslint-disable-line stdlib/no-builtin-math\n}\n\n\n// EXPORTS //\n\nexport default abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {string} [options.lpad] - string used to left pad\n* @param {string} [options.rpad] - string used to right pad\n* @param {boolean} [options.centerRight] - boolean indicating whether to center right in the event of a tie\n* @returns {(null|Error)} error object or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'lpad': 'a',\n*     'rpad': 'b'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'lpad' ) ) {\n\t\topts.lpad = options.lpad;\n\t\tif ( !isString( opts.lpad ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'lpad', opts.lpad ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'rpad' ) ) {\n\t\topts.rpad = options.rpad;\n\t\tif ( !isString( opts.rpad ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'rpad', opts.rpad ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'centerRight' ) ) {\n\t\topts.centerRight = options.centerRight;\n\t\tif ( !isBoolean( opts.centerRight ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'centerRight', opts.centerRight ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar repeat = require( './../../repeat' );\nvar format = require( './../../format' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar ceil = require( '@stdlib/math/base/special/ceil' );\nvar lpad = require( './../../left-pad' );\nvar rpad = require( './../../right-pad' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar FLOAT64_MAX_SAFE_INTEGER = require( '@stdlib/constants/float64/max-safe-integer' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Pads a string such that the padded string has a length of `len`.\n*\n* @param {string} str - string to pad\n* @param {NonNegativeInteger} len - string length\n* @param {Options} [options] - function options\n* @param {string} [options.lpad=''] - string used to left pad\n* @param {string} [options.rpad=' '] - string used to right pad\n* @param {boolean} [options.centerRight=false] - boolean indicating whether to center right in the event of a tie\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} at least one padding must have a length greater than `0`\n* @returns {string} padded string\n*\n* @example\n* var str = pad( 'a', 5 );\n* // returns 'a    '\n*\n* @example\n* var str = pad( 'a', 10, {\n*     'lpad': 'b'\n* });\n* // returns 'bbbbbbbbba'\n*\n* @example\n* var str = pad( 'a', 12, {\n*     'rpad': 'b'\n* });\n* // returns 'abbbbbbbbbbb'\n*\n* @example\n* var opts = {\n*     'lpad': 'a',\n*     'rpad': 'c'\n* };\n* var str = pad( 'b', 10, opts );\n* // returns 'aaaabccccc'\n*\n* @example\n* var opts = {\n*     'lpad': 'a',\n*     'rpad': 'c',\n*     'centerRight': true\n* };\n* var str = pad( 'b', 10, opts );\n* // returns 'aaaaabcccc'\n*/\nfunction pad( str, len, options ) {\n\tvar nright;\n\tvar nleft;\n\tvar isodd;\n\tvar right;\n\tvar left;\n\tvar opts;\n\tvar err;\n\tvar tmp;\n\tvar n;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', len ) );\n\t}\n\tif ( len > FLOAT64_MAX_SAFE_INTEGER ) {\n\t\tthrow new RangeError( format( 'invalid argument. Output string length exceeds maximum allowed string length. Value: `%u`.', len ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.lpad && opts.rpad ) {\n\t\tn = ( len-str.length ) / 2;\n\t\tif ( n === 0 ) {\n\t\t\treturn str;\n\t\t}\n\t\ttmp = floor( n );\n\t\tif ( tmp !== n ) {\n\t\t\tisodd = true;\n\t\t}\n\t\tif ( n < 0 ) {\n\t\t\tn = floor( abs( n ) );\n\t\t\tnleft = n;\n\t\t\tnright = str.length - n;\n\n\t\t\t// If |len-str.length| is an odd number, take away an additional character from one side...\n\t\t\tif ( isodd ) {\n\t\t\t\tif ( opts.centerRight ) {\n\t\t\t\t\tnright -= 1;\n\t\t\t\t} else {\n\t\t\t\t\tnleft += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str.substring( nleft, nright );\n\t\t}\n\t\tnleft = ceil( n / opts.lpad.length );\n\t\tleft = repeat( opts.lpad, nleft );\n\n\t\tnright = ceil( n / opts.rpad.length );\n\t\tright = repeat( opts.rpad, nright );\n\n\t\t// If (len-str.length) is an odd number, give one side one extra character...\n\t\tn = tmp;\n\t\tnleft = n;\n\t\tnright = n;\n\t\tif ( isodd ) {\n\t\t\tif ( opts.centerRight ) {\n\t\t\t\tnleft += 1;\n\t\t\t} else {\n\t\t\t\tnright += 1;\n\t\t\t}\n\t\t}\n\t\tleft = left.substring( 0, nleft );\n\t\tright = right.substring( 0, nright );\n\t\treturn left + str + right;\n\t}\n\tif ( opts.lpad ) {\n\t\ttmp = lpad( str, len, opts.lpad );\n\t\treturn tmp.substring( tmp.length-len );\n\t}\n\tif ( opts.rpad ) {\n\t\treturn ( rpad( str, len, opts.rpad ) ).substring( 0, len );\n\t}\n\tif ( opts.rpad === void 0 ) {\n\t\treturn ( rpad( str, len, ' ' ) ).substring( 0, len );\n\t}\n\tthrow new RangeError( format( 'invalid argument. At least one padding option must have a length greater than 0. Left padding: `%s`. Right padding: `%s`.', opts.lpad, opts.rpad ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = pad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Pad a string.\n*\n* @module @stdlib/string/pad\n*\n* @example\n* var pad = require( '@stdlib/string/pad' );\n*\n* var str = pad( 'a', 5 );\n* // returns 'a    '\n*\n* str = pad( 'a', 10, {\n*     'lpad': 'b'\n* });\n* // returns 'bbbbbbbbba'\n*\n* str = pad( 'a', 12, {\n*     'rpad': 'b'\n* });\n* // returns 'abbbbbbbbbbb'\n*\n* var opts = {\n*     'lpad': 'a',\n*     'rpad': 'c'\n* };\n* str = pad( 'b', 10, opts );\n* // returns 'aaaabccccc'\n*\n* opts = {\n*     'lpad': 'a',\n*     'rpad': 'c',\n*     'centerRight': true\n* };\n* str = pad( 'b', 10, opts );\n* // returns 'aaaaabcccc'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/pascalcase' );\n\n\n// MAIN //\n\n/**\n* Converts a string to Pascal case.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} Pascal-cased string\n*\n* @example\n* var out = pascalcase( 'foo bar' );\n* // returns 'FooBar'\n*\n* @example\n* var out = pascalcase( 'IS_MOBILE' );\n* // returns 'IsMobile'\n*\n* @example\n* var out = pascalcase( 'Hello World!' );\n* // returns 'HelloWorld'\n*\n* @example\n* var out = pascalcase( '--foo-bar--' );\n* // returns 'FooBar'\n*/\nfunction pascalcase( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = pascalcase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to Pascal case.\n*\n* @module @stdlib/string/pascalcase\n*\n* @example\n* var pascalcase = require( '@stdlib/string/pascalcase' );\n*\n* var str = pascalcase( 'foo bar' );\n* // returns 'FooBar'\n*\n* str = pascalcase( '--foo-bar--' );\n* // returns 'FooBar'\n*\n* str = pascalcase( 'Hello World!' );\n* // returns 'HelloWorld'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/percent-encode' );\n\n\n// MAIN //\n\n/**\n* Percent-encodes a UTF-16 encoded string according to [RFC 3986][1].\n*\n* [1]: https://tools.ietf.org/html/rfc3986#section-2.1\n*\n* @param {string} str - string to percent-encode\n* @throws {TypeError} must provide a string\n* @returns {string} percent-encoded string\n*\n* @example\n* var str1 = 'Ladies + Gentlemen';\n*\n* var str2 = percentEncode( str1 );\n* // returns 'Ladies%20%2B%20Gentlemen'\n*/\nfunction percentEncode( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = percentEncode;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Percent-encode a UTF-16 encoded string according to RFC 3986.\n*\n* @module @stdlib/string/percent-encode\n*\n* @example\n* var percentEncode = require( '@stdlib/string/percent-encode' );\n*\n* var str1 = 'Ladies + Gentlemen';\n*\n* var str2 = percentEncode( str1 );\n* // returns 'Ladies%20%2B%20Gentlemen'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' );\nvar codePointAt = require( './../../code-point-at' );\nvar hasUTF16SurrogatePairAt = require( '@stdlib/assert/has-utf16-surrogate-pair-at' );\nvar grapheme = require( './../../tools/grapheme-cluster-break' );\nvar format = require( './../../format' );\n\n\n// VARIABLES //\n\nvar breakType = grapheme.breakType;\nvar breakProperty = grapheme.breakProperty;\nvar emojiProperty = grapheme.emojiProperty;\n\n\n// MAIN //\n\n/**\n* Returns the previous extended grapheme cluster break in a string before a specified position.\n*\n* @param {string} str - input string\n* @param {integer} [fromIndex=str.length-1] - position\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be an integer\n* @returns {NonNegativeInteger} previous grapheme break position\n*\n* @example\n* var out = prevGraphemeClusterBreak( 'last man standing', 4 );\n* // returns 3\n*\n* @example\n* var out = prevGraphemeClusterBreak( 'presidential election', 8 );\n* // returns 7\n*\n* @example\n* var out = prevGraphemeClusterBreak( 'अनुच्छेद', 2 );\n* // returns 0\n*\n* @example\n* var out = prevGraphemeClusterBreak( '🌷', 1 );\n* // returns -1\n*/\nfunction prevGraphemeClusterBreak( str, fromIndex ) {\n\tvar breaks;\n\tvar emoji;\n\tvar ans;\n\tvar len;\n\tvar idx;\n\tvar cp;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tlen = str.length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tidx = fromIndex;\n\t} else {\n\t\tidx = len - 1;\n\t}\n\tif ( len === 0 || idx <= 0 ) {\n\t\treturn -1;\n\t}\n\tif ( idx >= len ) {\n\t\tidx = len - 1;\n\t}\n\n\t// Initialize caches for storing grapheme break and emoji properties:\n\tbreaks = [];\n\temoji = [];\n\n\t// Get the code point for the starting index:\n\tcp = codePointAt( str, 0 );\n\n\t// Get the corresponding grapheme break and emoji properties:\n\tbreaks.push( breakProperty( cp ) );\n\temoji.push( emojiProperty( cp ) );\n\n\tans = -1;\n\tfor ( i = 1; i <= idx; i++ ) {\n\t\t// If the current character is part of a surrogate pair, move along...\n\t\tif ( hasUTF16SurrogatePairAt( str, i-1 ) ) {\n\t\t\tans = i-2;\n\t\t\tbreaks.length = 0;\n\t\t\temoji.length = 0;\n\t\t\tcontinue;\n\t\t}\n\t\tcp = codePointAt( str, i );\n\n\t\t// Get the corresponding grapheme break and emoji properties:\n\t\tbreaks.push( breakProperty( cp ) );\n\t\temoji.push( emojiProperty( cp ) );\n\n\t\t// Determine if we've encountered a grapheme cluster break...\n\t\tif ( breakType( breaks, emoji ) > 0 ) {\n\t\t\tans = i-1;\n\t\t\tbreaks.length = 0;\n\t\t\temoji.length = 0;\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn ans;\n}\n\n\n// EXPORTS //\n\nmodule.exports = prevGraphemeClusterBreak;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the prev extended grapheme cluster break in a string before a specified position.\n*\n* @module @stdlib/string/prev-grapheme-cluster-break\n*\n* @example\n* var prevGraphemeClusterBreak = require( '@stdlib/string/prev-grapheme-cluster-break' );\n*\n* var out = prevGraphemeClusterBreak( 'अनुच्छेद', 2 );\n* // returns 0\n*\n* out = prevGraphemeClusterBreak( '🌷', 1 );\n* // returns -1\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar nextGraphemeClusterBreak = require( './../../next-grapheme-cluster-break' );\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Removes the first character(s) of a string.\n*\n* @param {string} str - input string\n* @param {NonNegativeInteger} [n=1] - number of characters to remove\n* @throws {TypeError} must provide a string primitive\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {string} updated string\n*\n* @example\n* var out = removeFirst( 'last man standing' );\n* // returns 'ast man standing'\n*\n* @example\n* var out = removeFirst( 'presidential election' );\n* // returns 'residential election'\n*\n* @example\n* var out = removeFirst( 'javaScript' );\n* // returns 'avaScript'\n*\n* @example\n* var out = removeFirst( 'Hidden Treasures' );\n* // returns 'idden Treasures'\n*\n* @example\n* var out = removeFirst( '🐶🐮🐷🐰🐸', 2 );\n* // returns '🐷🐰🐸'\n*\n* @example\n* var out = removeFirst( 'foo bar', 4 );\n* // returns 'bar'\n*/\nfunction removeFirst( str, n ) {\n\tvar nextBreak;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', n ) );\n\t\t}\n\t\tnextBreak = 0;\n\t\twhile ( n > 0 ) {\n\t\t\tnextBreak = nextGraphemeClusterBreak( str, nextBreak );\n\t\t\tn -= 1;\n\t\t}\n\t}\n\telse {\n\t\tnextBreak = nextGraphemeClusterBreak( str );\n\t}\n\t// Value of `nextBreak` will be -1 if and only if `str` is an empty string or `str` has only 1 extended grapheme cluster...\n\tif ( str === '' || nextBreak === -1 ) {\n\t\treturn '';\n\t}\n\treturn str.substring( nextBreak );\n}\n\n\n// EXPORTS //\n\nmodule.exports = removeFirst;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Remove the first character(s) of a string.\n*\n* @module @stdlib/string/remove-first\n*\n* @example\n* var removeFirst = require( '@stdlib/string/remove-first' );\n*\n* var out = removeFirst( 'last man standing' );\n* // returns 'ast man standing'\n*\n* out = removeFirst( 'Hidden Treasures' );\n* // returns 'idden Treasures';\n*\n* out = removeFirst( '🐮🐷🐸🐵', 2 );\n* // returns '🐸🐵\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar prevGraphemeClusterBreak = require( './../../prev-grapheme-cluster-break' );\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Removes the last character(s) of a string.\n*\n* @param {string} str - input string\n* @param {NonNegativeInteger} [n=1] - number of character to remove\n* @throws {TypeError} must provide a string primitive\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {string} updated string\n*\n* @example\n* var out = removeLast( 'last man standing' );\n* // returns 'last man standin'\n*\n* @example\n* var out = removeLast( 'presidential election' );\n* // returns 'presidential electio'\n*\n* @example\n* var out = removeLast( 'javaScript' );\n* // returns 'javaScrip'\n*\n* @example\n* var out = removeLast( 'Hidden Treasures' );\n* // returns 'Hidden Treasure'\n*\n* @example\n* var out = removeLast( 'leader', 2 );\n* // returns 'lead'\n*/\nfunction removeLast( str, n ) {\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( str === '' ) {\n\t\treturn '';\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', n ) );\n\t\t}\n\t\tif ( n === 0 ) {\n\t\t\treturn str;\n\t\t}\n\t\ti = str.length - 1;\n\t\twhile ( n > 0 ) {\n\t\t\ti = prevGraphemeClusterBreak( str, i );\n\t\t\tn -= 1;\n\t\t}\n\t\treturn str.substring( 0, i + 1 );\n\t}\n\treturn str.substring( 0, prevGraphemeClusterBreak( str, str.length-1 ) + 1 ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = removeLast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Remove the last character(s) of a string.\n*\n* @module @stdlib/string/remove-last\n*\n* @example\n* var removeLast = require( '@stdlib/string/remove-last' );\n*\n* var out = removeLast( 'last man standing' );\n* // returns 'last man standin'\n*\n* out = removeLast( 'Hidden Treasures' );\n* // returns 'Hidden Treasure';\n*\n* out = removeLast( '🐮🐷🐸🐵', 2 ) );\n* // returns '🐮🐷'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\n\n\n// VARIABLES //\n\n// '\\ufeff' => 1111111011111111 => 0xFEFF => 65279\nvar BOM = 65279;\n\n\n// MAIN //\n\n/**\n* Removes a UTF-8 byte order mark (BOM) from the beginning of a string.\n*\n* ## Notes\n*\n* -   A UTF-8 byte order mark ([BOM][1]) is the byte sequence `0xEF,0xBB,0xBF`.\n* -   To convert a UTF-8 encoded `Buffer` to a `string`, the `Buffer` must be converted to [UTF-16][2]. The BOM thus gets converted to the single 16-bit code point `'\\ufeff'` (UTF-16 BOM).\n*\n* [1]: https://en.wikipedia.org/wiki/Byte_order_mark#UTF-8\n* [2]: http://es5.github.io/#x4.3.16\n*\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string primitive\n* @returns {string} string with BOM removed\n*\n* @example\n* var str = removeUTF8BOM( '\\ufeffbeep' );\n* // returns 'beep'\n*/\nfunction removeUTF8BOM( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\tif ( str.charCodeAt( 0 ) === BOM ) {\n\t\treturn str.slice( 1 );\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = removeUTF8BOM;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Remove a UTF-8 byte order mark (BOM) from the beginning of a string.\n*\n* @module @stdlib/string/remove-utf8-bom\n*\n* @example\n* var removeUTF8BOM = require( '@stdlib/string/remove-utf8-bom' );\n*\n* var str = removeUTF8BOM( '\\ufeffbeep' );\n* // returns 'beep'\n*/\n\n// MODULES //\n\nvar removeUTF8BOM = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = removeUTF8BOM;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Converts a string to uppercase.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} uppercase string\n*\n* @example\n* var str = uppercase( 'bEEp' );\n* // returns 'BEEP'\n*/\nfunction uppercase( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\treturn str.toUpperCase();\n}\n\n\n// EXPORTS //\n\nmodule.exports = uppercase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to uppercase.\n*\n* @module @stdlib/string/uppercase\n*\n* @example\n* var uppercase = require( '@stdlib/string/uppercase' );\n*\n* var str = uppercase( 'bEEp' );\n* // returns 'BEEP'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isStringArray = require( '@stdlib/assert/is-string-array' );\nvar uppercase = require( './../../uppercase' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar tokenize = require( '@stdlib/nlp/tokenize' );\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Removes a list of words from a string.\n*\n* @param {string} str - input string\n* @param {StringArray} words - array of words to be removed\n* @param {boolean} [ignoreCase=false] - boolean indicating whether to perform a case-insensitive operation\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be an array of strings\n* @throws {TypeError} third argument must be a boolean\n* @returns {string} output string\n*\n* @example\n* var str = 'beep boop Foo bar';\n* var out = removeWords( str, [ 'boop', 'foo' ] );\n* // returns 'beep  Foo bar'\n*\n* @example\n* var str = 'beep boop Foo bar';\n* var out = removeWords( str, [ 'boop', 'foo' ], true );\n* // returns 'beep   bar'\n*/\nfunction removeWords( str, words, ignoreCase ) {\n\tvar tokens;\n\tvar token;\n\tvar list;\n\tvar flg;\n\tvar out;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isStringArray( words ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array of strings. Value: `%s`.', words ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isBoolean( ignoreCase ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a boolean. Value: `%s`.', ignoreCase ) );\n\t\t}\n\t}\n\ttokens = tokenize( str, true );\n\tN = words.length;\n\tout = [];\n\tif ( ignoreCase ) {\n\t\tlist = words.slice();\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tlist[ i ] = uppercase( list[ i ] );\n\t\t}\n\t\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\t\tflg = true;\n\t\t\ttoken = uppercase( tokens[ i ] );\n\t\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\t\tif ( list[ j ] === token ) {\n\t\t\t\t\tflg = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( flg ) {\n\t\t\t\tout.push( tokens[ i ] );\n\t\t\t}\n\t\t}\n\t\treturn out.join( '' );\n\t}\n\t// Case: case-sensitive\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tflg = true;\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tif ( words[ j ] === token ) {\n\t\t\t\tflg = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( flg ) {\n\t\t\tout.push( token );\n\t\t}\n\t}\n\treturn out.join( '' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = removeWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Remove a list of words from a string.\n*\n* @module @stdlib/string/remove-words\n*\n* @example\n* var removeWords = require( '@stdlib/string/remove-words' );\n*\n* var str = 'beep boop Foo bar';\n* var words = [ 'boop', 'foo' ];\n*\n* var out = removeWords( str, words );\n* // returns 'beep  Foo bar'\n*\n* // Case-insensitive:\n* out = removeWords( str, words, true )\n* //returns 'beep   bar'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar prevGraphemeClusterBreak = require( './../../prev-grapheme-cluster-break' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Reverses a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string primitive\n* @returns {string} reversed string\n*\n* @example\n* var out = reverse( 'last man standing' );\n* // returns 'gnidnats nam tsal'\n*\n* @example\n* var out = reverse( 'presidential election' );\n* // returns 'noitcele laitnediserp'\n*\n* @example\n* var out = reverse( 'javaScript' );\n* // returns 'tpircSavaj'\n*\n* @example\n* var out = reverse( 'Hidden Treasures' );\n* // returns 'serusaerT neddiH'\n*/\nfunction reverse( str ) {\n\tvar out;\n\tvar brk;\n\tvar idx;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( str === '' ) {\n\t\treturn '';\n\t}\n\n\tout = [];\n\tidx = str.length - 1;\n\twhile ( idx >= 0 ) {\n\t\tbrk = prevGraphemeClusterBreak( str, idx );\n\t\tfor ( i = brk + 1; i <= idx; i++ ) {\n\t\t\tout.push( str.charAt( i ) );\n\t\t}\n\t\tidx = brk;\n\t}\n\treturn out.join( '' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = reverse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Reverse a string.\n*\n* @module @stdlib/string/reverse\n*\n* @example\n* var reverseString = require( '@stdlib/string/reverse' );\n*\n* var out = reverseString( 'last man standing' );\n* // returns 'gnidnats nam tsal'\n*\n* out = reverseString( 'Hidden Treasures' );\n* // returns 'serusaerT neddiH';\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/right-trim' );\n\n\n// MAIN //\n\n/**\n* Trims whitespace from the end of a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string\n* @returns {string} trimmed string\n*\n* @example\n* var out = rtrim( '   Whitespace   ' );\n* // returns '   Whitespace'\n*\n* @example\n* var out = rtrim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns '\\t\\t\\tTabs'\n*\n* @example\n* var out = rtrim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns '\\n\\n\\nNew Lines'\n*/\nfunction rtrim( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = rtrim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Trim whitespace characters from the end of a string.\n*\n* @module @stdlib/string/right-trim\n*\n* @example\n* var rtrim = require( '@stdlib/string/right-trim' );\n*\n* var out = rtrim( '   Whitespace   ' );\n* // returns '   Whitespace'\n*\n* out = rtrim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns '\\t\\t\\tTabs'\n*\n* out = rtrim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns '\\n\\n\\nNew Lines'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar splitGraphemeClusters = require( './../../split-grapheme-clusters' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;\nvar replace = require( './../../replace' );\nvar rescape = require( '@stdlib/utils/escape-regexp-string' );\nvar format = require( './../../format' );\n\n\n// VARIABLES //\n\nvar WHITESPACE_CHARS = '\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\n\n\n// MAIN //\n\n/**\n* Trims `n` characters from the end of a string.\n*\n* @param {string} str - input string\n* @param {NonNegativeInteger} n - number of characters to trim\n* @param {(string|StringArray)} [chars] - characters to trim (defaults to whitespace characters)\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a string or an array of strings\n* @returns {string} trimmed string\n*\n* @example\n* var str = '   abc   ';\n* var out = rtrimN( str, 2 );\n* // returns '   abc '\n*\n* @example\n* var str = '   abc   ';\n* var out = rtrimN( str, str.length );\n* // returns '   abc'\n*\n* @example\n* var str = '~~abc!~~';\n* var out = rtrimN( str, str.length, [ '~', '!' ] );\n* // returns '~~abc'\n*\n* @example\n* var str = '🤖👨🏼‍🎨🤖👨🏼‍🎨🤖👨🏼‍🎨';\n* var out = rtrimN( str, str.length, '👨🏼‍🎨🤖' );\n* // returns ''\n*/\nfunction rtrimN( str, n, chars ) {\n\tvar nElems;\n\tvar reStr;\n\tvar isStr;\n\tvar RE;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', n ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tisStr = isString( chars );\n\t\tif ( !isStr && !isStringArray( chars ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a string or an array of strings. Value: `%s`.', chars ) );\n\t\t}\n\t\tif ( isStr ) {\n\t\t\tchars = splitGraphemeClusters( chars );\n\t\t}\n\t\tnElems = chars.length - 1;\n\t\treStr = '';\n\t\tfor ( i = 0; i < nElems; i++ ) {\n\t\t\treStr += rescape( chars[ i ] );\n\t\t\treStr += '|';\n\t\t}\n\t\treStr += rescape( chars[ nElems ] );\n\n\t\t// Case: Trim a specific set of characters from the end of a string..\n\t\tRE = new RegExp( '(?:' + reStr + '){0,'+n+'}$' );\n\t} else {\n\t\t// Case: Trim `n` whitespace characters from the end of a string...\n\t\tRE = new RegExp( '[' + WHITESPACE_CHARS + ']{0,'+n+'}$' );\n\t}\n\treturn replace( str, RE, '' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = rtrimN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Trim `n` characters from the end of a string.\n*\n* @module @stdlib/string/right-trim-n\n*\n* @example\n* var rtrimN = require( '@stdlib/string/right-trim-n' );\n*\n* var str = '  foo  ';\n* var out = rtrimN( str, str.length );\n* // returns '  foo'\n*\n* str = '🐶🐶🐶 Animals 🐶🐶🐶';\n* out = rtrimN( str, 4, [ '🐶', ' ' ] );\n* // returns '🐶🐶🐶 Animals'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/snakecase' );\n\n\n// MAIN //\n\n/**\n* Converts a string to snake case.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} snake-cased string\n*\n* @example\n* var str = snakecase( 'Hello World!' );\n* // returns 'hello_world'\n*\n* @example\n* var str = snakecase( 'foo bar' );\n* // returns 'foo_bar'\n*\n* @example\n* var str = snakecase( 'I am a tiny little teapot' );\n* // returns 'i_am_a_tiny_little_teapot'\n*\n* @example\n* var str = snakecase( 'BEEP boop' );\n* // returns 'beep_boop'\n*\n* @example\n* var str = snakecase( 'isMobile' );\n* // returns 'is_mobile'\n*/\nfunction snakecase( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = snakecase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to snake case.\n*\n* @module @stdlib/string/snakecase\n*\n* @example\n* var snakecase = require( '@stdlib/string/snakecase' );\n*\n* var str = snakecase( 'Foo Bar' );\n* // returns 'foo_bar'\n*\n* str = snakecase( 'I am a tiny little house' );\n* // returns 'i_am_a_tiny_little_house'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/startcase' );\n\n\n// MAIN //\n\n/**\n* Capitalizes the first letter of each word in an input string.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} start case string\n*\n* @example\n* var str = startcase( 'beep boop foo bar' );\n* // returns 'Beep Boop Foo Bar'\n*/\nfunction startcase( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = startcase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Capitalize the first letter of each word in an input string.\n*\n* @module @stdlib/string/startcase\n*\n* @example\n* var startcase = require( '@stdlib/string/startcase' );\n*\n* var str = startcase( 'beep boop foo bar' );\n* // returns 'Beep Boop Foo Bar'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/starts-with' );\n\n\n// MAIN //\n\n/**\n* Tests if a string starts with the characters of another string.\n*\n* @param {string} str - input string\n* @param {string} search - search string\n* @param {integer} [position=0] - position at which to start searching\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @throws {TypeError} third argument must be an integer\n* @returns {boolean} boolean indicating if the input string starts with the search string\n*\n* @example\n* var bool = startsWith( 'Remember the story I used to tell you when you were a boy?', 'Remember' );\n* // returns true\n*\n* @example\n* var bool = startsWith( 'Remember the story I used to tell you when you were a boy?', 'Remember, remember' );\n* // returns false\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'To be' );\n* // returns true\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'to be' );\n* // returns false\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'to be', 14 );\n* // returns true\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'quest', -9 );\n* // returns true\n*/\nfunction startsWith( str, search, position ) {\n\tvar pos;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isString( search ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', search ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isInteger( position ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', position ) );\n\t\t}\n\t\tpos = position;\n\t} else {\n\t\tpos = 0;\n\t}\n\treturn base( str, search, pos );\n}\n\n\n// EXPORTS //\n\nmodule.exports = startsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a string starts with the characters of another string.\n*\n* @module @stdlib/string/starts-with\n*\n* @example\n* var startsWith = require( '@stdlib/string/starts-with' );\n*\n* var str = 'Fair is foul, and foul is fair, hover through fog and filthy air';\n* var bool = startsWith( str, 'Fair' );\n* // returns true\n*\n* bool = startsWith( str, 'fair' );\n* // returns false\n*\n* bool = startsWith( str, 'foul', 8 );\n* // returns true\n*\n* bool = startsWith( str, 'filthy', -10 );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Returns the part of a string after a specified substring.\n*\n* @param {string} str - input string\n* @param {string} search - search string\n* @param {integer} [fromIndex=0] - index at which to start the search\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @throws {TypeError} third argument must be an integer\n* @returns {string} substring\n*\n* @example\n* var out = substringAfter( 'Hello, world!', ', ' );\n* // returns 'world!'\n*\n* @example\n* var out = substringAfter( 'beep boop', 'beep' );\n* // returns ' boop'\n*\n* @example\n* var out = substringAfter( 'beep boop', 'boop' );\n* // returns ''\n*\n* @example\n* var out = substringAfter( 'beep boop', 'xyz' );\n* // returns ''\n*\n* @example\n* var out = substringAfter( 'beep boop', 'beep', 5 );\n* // returns ''\n*\n* @example\n* var out = substringAfter( 'beep boop beep baz', 'beep', 5 );\n* // returns ' baz'\n*/\nfunction substringAfter( str, search, fromIndex ) {\n\tvar idx;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isString( search ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', search ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tidx = str.indexOf( search, fromIndex );\n\t} else {\n\t\tidx = str.indexOf( search );\n\t}\n\tif ( idx === -1 ) {\n\t\treturn '';\n\t}\n\treturn str.substring( idx+search.length );\n}\n\n\n// EXPORTS //\n\nmodule.exports = substringAfter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the part of a string after a specified substring.\n*\n* @module @stdlib/string/substring-after\n*\n* @example\n* var substringAfter = require( '@stdlib/string/substring-after' );\n*\n* var str = 'beep boop';\n* var out = substringAfter( str, 'o' );\n* // returns 'op'\n*\n* out = substringAfter( str, ' ' );\n* // returns 'boop'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Returns the part of a string after the last occurrence of a specified substring.\n*\n* @param {string} str - input string\n* @param {string} search - search value\n* @param {integer} [fromIndex=str.length] - index of last character to be considered beginning of a match\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @throws {TypeError} third argument must be an integer\n* @returns {string} substring\n*\n* @example\n* var out = substringAfterLast( 'beep boop', 'b' );\n* // returns 'oop'\n*\n* @example\n* var out = substringAfterLast( 'beep boop', 'o' );\n* // returns 'p'\n*\n* @example\n* var out = substringAfterLast( 'Hello World', 'o' );\n* // returns 'rld'\n*\n* @example\n* var out = substringAfterLast( 'Hello World', '!' );\n* // returns ''\n*\n* @example\n* var out = substringAfterLast( 'Hello World', '' );\n* // returns ''\n*\n* @example\n* var out = substringAfterLast( 'beep boop baz', 'p b', 6 );\n* // returns 'oop baz'\n*/\nfunction substringAfterLast( str, search, fromIndex ) {\n\tvar idx;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isString( search ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', search ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tidx = str.lastIndexOf( search, fromIndex );\n\t} else {\n\t\tidx = str.lastIndexOf( search );\n\t}\n\tif ( idx === -1 ) {\n\t\treturn '';\n\t}\n\treturn str.substring( idx+search.length );\n}\n\n\n// EXPORTS //\n\nmodule.exports = substringAfterLast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the part of a string after the last occurrence of a specified substring.\n*\n* @module @stdlib/string/substring-after-last\n*\n* @example\n* var substringAfterLast = require( '@stdlib/string/substring-after-last' );\n*\n* var str = 'beep boop';\n* var out = substringAfterLast( str, 'b' ):\n* // returns 'oop'\n*\n* out = substringAfterLast( str, 'o' ):\n* // returns 'p'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Returns the part of a string before a specified substring.\n*\n* @param {string} str - input string\n* @param {string} search - search string\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @returns {string} substring\n*\n* @example\n* var out = substringBefore( 'beep boop', ' ' );\n* // returns 'beep'\n*\n* @example\n* var out = substringBefore( 'beep boop', 'p' );\n* // returns 'bee'\n*\n* @example\n* var out = substringBefore( 'Hello World!', '' );\n* // returns ''\n*\n* @example\n* var out = substringBefore( 'Hello World!', 'XYZ' );\n* // returns 'Hello World!'\n*/\nfunction substringBefore( str, search ) {\n\tvar idx;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isString( search ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', search ) );\n\t}\n\tidx = str.indexOf( search );\n\tif ( idx === -1 ) {\n\t\treturn str;\n\t}\n\treturn str.substring( 0, idx );\n}\n\n\n// EXPORTS //\n\nmodule.exports = substringBefore;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the part of a string before a specified substring.\n*\n* @module @stdlib/string/substring-before\n*\n* @example\n* var substringBefore = require( '@stdlib/string/substring-before' );\n*\n* var str = 'beep boop';\n* var out = substringBefore( str, ' ' );\n* // returns 'beep'\n*\n* out = substringBefore( str, 'o' );\n* // returns 'beep b'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Returns the part of a string before the last occurrence of a specified substring.\n*\n* @param {string} str - input string\n* @param {string} search - search value\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @returns {string} substring\n*\n* @example\n* var out = substringBeforeLast( 'abcba', 'b' );\n* // returns 'abc'\n*\n* @example\n* var out = substringBeforeLast( 'Hello World, my friend!', ' ' );\n* // returns 'Hello World, my'\n*\n* @example\n* var out = substringBeforeLast( 'abcba', ' ' );\n* // returns 'abcba'\n*\n* @example\n* var out = substringBeforeLast( 'abcba', '' );\n* // returns 'abcba'\n*/\nfunction substringBeforeLast( str, search ) {\n\tvar idx;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isString( search ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', search ) );\n\t}\n\tidx = str.lastIndexOf( search );\n\tif ( idx === -1 ) {\n\t\treturn str;\n\t}\n\treturn str.substring( 0, idx );\n}\n\n\n// EXPORTS //\n\nmodule.exports = substringBeforeLast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the part of a string before the last occurrence of a specified substring.\n*\n* @module @stdlib/string/substring-before-last\n*\n* @example\n* var substringBeforeLast = require( '@stdlib/string/substring-before-last' );\n*\n* var str = 'Beep Boop Beep';\n* var out = substringBeforeLast( str, 'Beep' );\n* // returns 'Beep Boop '\n*\n* out = substringBeforeLast( str, 'Boop' );\n* // returns 'Beep '\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support' ;\n\n\n// MAIN //\n\n/**\n* Iterator symbol.\n*\n* @name IteratorSymbol\n* @constant\n* @type {(symbol|null)}\n*\n* @example\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\nvar IteratorSymbol = ( hasIteratorSymbolSupport() ) ? Symbol.iterator : null;\n\n\n// EXPORTS //\n\nexport default IteratorSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from './../../has-own-property' ;\nimport Symbol from '@stdlib/symbol/ctor' ;\n\n\n// MAIN //\n\n/**\n* Tests for native `Symbol.iterator` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol.iterator` support\n*\n* @example\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasIteratorSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol' &&\n\t\thasOwnProp( Symbol, 'iterator' ) &&\n\t\ttypeof Symbol.iterator === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar nextGraphemeClusterBreak = require( './../../next-grapheme-cluster-break' );\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over each grapheme cluster in a string.\n*\n* @param {string} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = graphemeClusters2iterator( '🌷🍕' );\n*\n* var v = iter.next().value;\n* // returns '🌷'\n*\n* v = iter.next().value;\n* // returns '🍕'\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction graphemeClusters2iterator( src ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar i;\n\tif ( !isString( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be astring. Value: `%s`.', src ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tvar v;\n\t\tvar j;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj = nextGraphemeClusterBreak( src, i );\n\t\tif ( j === -1 ) {\n\t\t\tFLG = true;\n\t\t\tif ( src.length ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': fcn.call( thisArg, src.substring( i ), i, src ),\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = fcn.call( thisArg, src.substring( i, j ), i, src );\n\t\ti = j;\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tvar v;\n\t\tvar j;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj = nextGraphemeClusterBreak( src, i );\n\t\tif ( j === -1 ) {\n\t\t\tFLG = true;\n\t\t\tif ( src.length ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': src.substring( i ),\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = src.substring( i, j );\n\t\ti = j;\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn graphemeClusters2iterator( src, fcn, thisArg );\n\t\t}\n\t\treturn graphemeClusters2iterator( src );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = graphemeClusters2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iterates over grapheme clusters.\n*\n* @module @stdlib/string/to-grapheme-cluster-iterator\n*\n* @example\n* var graphemeClusters2iterator = require( '@stdlib/string/to-grapheme-cluster-iterator' );\n*\n* var iter = graphemeClusters2iterator( '🌷🍕' );\n*\n* var v = iter.next().value;\n* // returns '🌷'\n*\n* v = iter.next().value;\n* // returns '🍕'\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar prevGraphemeClusterBreak = require( './../../prev-grapheme-cluster-break' );\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates from right to left over each grapheme cluster in a string.\n*\n* @param {string} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = graphemeClusters2iteratorRight( '🌷🍕' );\n*\n* var v = iter.next().value;\n* // returns '🍕'\n*\n* v = iter.next().value;\n* // returns '🌷'\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction graphemeClusters2iteratorRight( src ) { // eslint-disable-line id-length\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar i;\n\tif ( !isString( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be astring. Value: `%s`.', src ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\ti = src.length - 1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tvar v;\n\t\tvar j;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj = prevGraphemeClusterBreak( src, i );\n\t\tif ( j === -1 ) {\n\t\t\tFLG = true;\n\t\t\tif ( src.length ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': fcn.call( thisArg, src.substring( j+1, i+1 ), j+1, src ),\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = fcn.call( thisArg, src.substring( j+1, i+1 ), j+1, src );\n\t\ti = j;\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tvar v;\n\t\tvar j;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj = prevGraphemeClusterBreak( src, i );\n\t\tif ( j === -1 ) {\n\t\t\tFLG = true;\n\t\t\tif ( src.length ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': src.substring( j+1, i+1 ),\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = src.substring( j+1, i+1 );\n\t\ti = j;\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn graphemeClusters2iteratorRight( src, fcn, thisArg );\n\t\t}\n\t\treturn graphemeClusters2iteratorRight( src );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = graphemeClusters2iteratorRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iterates from right to left over grapheme clusters.\n*\n* @module @stdlib/string/to-grapheme-cluster-iterator-right\n*\n* @example\n* var graphemeClusters2iteratorRight = require( '@stdlib/string/to-grapheme-cluster-iterator-right' );\n*\n* var iter = graphemeClusters2iteratorRight( '🌷🍕' );\n*\n* var v = iter.next().value;\n* // returns '🍕'\n*\n* v = iter.next().value;\n* // returns '🌷'\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/trim' );\n\n\n// MAIN //\n\n/**\n* Trims whitespace characters from the beginning and end of a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string\n* @returns {string} trimmed string\n*\n* @example\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* @example\n* var out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* @example\n* var out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\nfunction trim( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = trim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Trim whitespace characters from the beginning and end of a string.\n*\n* @module @stdlib/string/trim\n*\n* @example\n* var trim = require( '@stdlib/string/trim' );\n*\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar numGraphemeClusters = require( './../../num-grapheme-clusters' );\nvar nextGraphemeClusterBreak = require( './../../next-grapheme-cluster-break' );\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Truncates a string to a specified length.\n*\n* @param {string} str - input string\n* @param {integer} len - output string length (including ending)\n* @param {string} [ending='...'] - custom ending\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a string\n* @returns {string} truncated string\n*\n* @example\n* var str = 'beep boop';\n* var out = truncate( str, 7 );\n* // returns 'beep...'\n*\n* @example\n* var str = 'beep boop';\n* var out = truncate( str, 5, '>>>' );\n* // returns 'be>>>'\n*\n* @example\n* var str = 'beep boop';\n* var out = truncate( str, 10 );\n* // returns 'beep boop'\n*\n* @example\n* var str = 'beep boop';\n* var out = truncate( str, 0 );\n* // returns ''\n*\n* @example\n* var str = 'beep boop';\n* var out = truncate( str, 2 );\n* // returns '..'\n*\n* @example\n* var str = '🐺 Wolf Brothers 🐺';\n* var out = truncate( str, 6 );\n* // returns '🐺 W...'\n*/\nfunction truncate( str, len, ending ) {\n\tvar endingLength;\n\tvar fromIndex;\n\tvar nVisual;\n\tvar idx;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', len ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isString( ending ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a string. Value: `%s`.', ending ) );\n\t\t}\n\t}\n\tending = ending || '...';\n\tendingLength = numGraphemeClusters( ending );\n\tfromIndex = 0;\n\tif ( len > numGraphemeClusters( str ) ) {\n\t\treturn str;\n\t}\n\tif ( len - endingLength < 0 ) {\n\t\treturn ending.slice( 0, len );\n\t}\n\tnVisual = 0;\n\twhile ( nVisual < len - endingLength ) {\n\t\tidx = nextGraphemeClusterBreak( str, fromIndex );\n\t\tfromIndex = idx;\n\t\tnVisual += 1;\n\t}\n\treturn str.substring( 0, idx ) + ending;\n}\n\n\n// EXPORTS //\n\nmodule.exports = truncate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Truncate a string to a specified length.\n*\n* @module @stdlib/string/truncate\n*\n* @example\n* var truncate = require( '@stdlib/string/truncate' );\n*\n* var out = truncate( 'beep boop', 7 );\n* // returns 'beep...'\n*\n* out = truncate( 'beep boop', 7, '|' );\n* // returns 'beep b|'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation\n\n/**\n* Rounds a numeric value to the nearest integer.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = round( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.5 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.6 );\n* // returns -5.0\n*\n* @example\n* var v = round( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.5 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.2 );\n* // returns 9.0\n*\n* @example\n* var v = round( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = round( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = round( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = round( -Infinity );\n* // returns -Infinity\n*\n* @example\n* var v = round( NaN );\n* // returns NaN\n*/\nvar round = Math.round; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default round;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar numGraphemeClusters = require( './../../num-grapheme-clusters' );\nvar nextGraphemeClusterBreak = require( './../../next-grapheme-cluster-break' );\nvar format = require( './../../format' );\nvar round = require( '@stdlib/math/base/special/round' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Truncates a string in the middle to a specified length.\n*\n* @param {string} str - input string\n* @param {integer} len - output string length (including sequence)\n* @param {string} [seq='...'] - custom replacement sequence\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a string\n* @returns {string} truncated string\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 5 );\n* // returns 'b...p'\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 5, '>>>' );\n* // returns 'b>>>p'\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 10 );\n* // returns 'beep boop'\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 0 );\n* // returns ''\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 2 );\n* // returns '..'\n*\n* @example\n* var str = '🐺 Wolf Brothers 🐺';\n* var out = truncateMiddle( str, 7 );\n* // returns '🐺 ... 🐺'\n*/\nfunction truncateMiddle( str, len, seq ) {\n\tvar seqLength;\n\tvar fromIndex;\n\tvar strLength;\n\tvar seqStart;\n\tvar nVisual;\n\tvar seqEnd;\n\tvar idx2;\n\tvar idx1;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', len ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isString( seq ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a string. Value: `%s`.', seq ) );\n\t\t}\n\t}\n\tseq = seq || '...';\n\tseqLength = numGraphemeClusters( seq );\n\tstrLength = numGraphemeClusters( str );\n\tfromIndex = 0;\n\tif ( len > strLength ) {\n\t\treturn str;\n\t}\n\tif ( len - seqLength < 0 ) {\n\t\treturn seq.slice( 0, len );\n\t}\n\tseqStart = round( ( len - seqLength ) / 2 );\n\tseqEnd = strLength - floor( ( len - seqLength ) / 2 );\n\tnVisual = 0;\n\twhile ( nVisual < seqStart ) {\n\t\tidx1 = nextGraphemeClusterBreak( str, fromIndex );\n\t\tfromIndex = idx1;\n\t\tnVisual += 1;\n\t}\n\tidx2 = idx1;\n\twhile ( idx2 > 0 ) {\n\t\tidx2 = nextGraphemeClusterBreak( str, fromIndex );\n\t\tif ( idx2 >= seqEnd + fromIndex - nVisual ) {\n\t\t\tbreak;\n\t\t}\n\t\tfromIndex = idx2;\n\t\tnVisual += 1;\n\t}\n\treturn str.substring( 0, idx1 ) + seq + str.substring( idx2 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = truncateMiddle;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Truncate a string in the middle to a specified length.\n*\n* @module @stdlib/string/truncate-middle\n*\n* @example\n* var truncateMiddle = require( '@stdlib/string/truncate-middle' );\n*\n* var out = truncateMiddle( 'beep boop', 7 );\n* // returns 'be...op'\n*\n* out = truncateMiddle( 'beep boop', 7, '|' );\n* // returns 'bee|oop'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( './../../format' );\nvar base = require( './../../base/uncapitalize' );\n\n\n// MAIN //\n\n/**\n* Uncapitalizes the first character of a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string\n* @returns {string} input string with first character converted to lowercase\n*\n* @example\n* var out = uncapitalize( 'Last man standing' );\n* // returns 'last man standing'\n*\n* @example\n* var out = uncapitalize( 'Presidential election' );\n* // returns 'presidential election'\n*\n* @example\n* var out = uncapitalize( 'JavaScript' );\n* // returns 'javaScript'\n*\n* @example\n* var out = uncapitalize( 'Hidden Treasures' );\n* // returns 'hidden Treasures'\n*/\nfunction uncapitalize( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = uncapitalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Uncapitalize the first character of a string.\n*\n* @module @stdlib/string/uncapitalize\n*\n* @example\n* var uncapitalize = require( '@stdlib/string/uncapitalize' );\n*\n* var out = uncapitalize( 'Last man standing' );\n* // returns 'last man standing'\n*\n* out = uncapitalize( 'Hidden Treasures' );\n* // returns 'hidden Treasures';\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n/*\n* The following modules are intentionally not exported: tools\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property' ;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace string\n*/\nvar string = {};\n\n/**\n* @name acronym\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/acronym}\n*/\nimport acronym from './../acronym';\nsetReadOnly( string, 'acronym', acronym );\n\n/**\n* @name base\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/base}\n*/\nimport base from './../base';\nsetReadOnly( string, 'base', base );\n\n/**\n* @name camelcase\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/camelcase}\n*/\nimport camelcase from './../camelcase';\nsetReadOnly( string, 'camelcase', camelcase );\n\n/**\n* @name capitalize\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/capitalize}\n*/\nimport capitalize from './../capitalize';\nsetReadOnly( string, 'capitalize', capitalize );\n\n/**\n* @name codePointAt\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/code-point-at}\n*/\nimport codePointAt from './../code-point-at';\nsetReadOnly( string, 'codePointAt', codePointAt );\n\n/**\n* @name constantcase\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/constantcase}\n*/\nimport constantcase from './../constantcase';\nsetReadOnly( string, 'constantcase', constantcase );\n\n/**\n* @name endsWith\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/ends-with}\n*/\nimport endsWith from './../ends-with';\nsetReadOnly( string, 'endsWith', endsWith );\n\n/**\n* @name format\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/format}\n*/\nimport format from './../format';\nsetReadOnly( string, 'format', format );\n\n/**\n* @name fromCodePoint\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/from-code-point}\n*/\nimport fromCodePoint from './../from-code-point';\nsetReadOnly( string, 'fromCodePoint', fromCodePoint );\n\n/**\n* @name kebabcase\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/kebabcase}\n*/\nimport kebabcase from './../kebabcase';\nsetReadOnly( string, 'kebabcase', kebabcase );\n\n/**\n* @name lpad\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/left-pad}\n*/\nimport lpad from './../left-pad';\nsetReadOnly( string, 'lpad', lpad );\n\n/**\n* @name ltrim\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/left-trim}\n*/\nimport ltrim from './../left-trim';\nsetReadOnly( string, 'ltrim', ltrim );\n\n/**\n* @name ltrimN\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/left-trim-n}\n*/\nimport ltrimN from './../left-trim-n';\nsetReadOnly( string, 'ltrimN', ltrimN );\n\n/**\n* @name lowercase\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/lowercase}\n*/\nimport lowercase from './../lowercase';\nsetReadOnly( string, 'lowercase', lowercase );\n\n/**\n* @name nextGraphemeClusterBreak\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/next-grapheme-cluster-break}\n*/\nimport nextGraphemeClusterBreak from './../next-grapheme-cluster-break';\nsetReadOnly( string, 'nextGraphemeClusterBreak', nextGraphemeClusterBreak );\n\n/**\n* @name numGraphemeClusters\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/num-grapheme-clusters}\n*/\nimport numGraphemeClusters from './../num-grapheme-clusters';\nsetReadOnly( string, 'numGraphemeClusters', numGraphemeClusters );\n\n/**\n* @name pad\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/pad}\n*/\nimport pad from './../pad';\nsetReadOnly( string, 'pad', pad );\n\n/**\n* @name pascalcase\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/pascalcase}\n*/\nimport pascalcase from './../pascalcase';\nsetReadOnly( string, 'pascalcase', pascalcase );\n\n/**\n* @name percentEncode\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/percent-encode}\n*/\nimport percentEncode from './../percent-encode';\nsetReadOnly( string, 'percentEncode', percentEncode );\n\n/**\n* @name prevGraphemeClusterBreak\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/prev-grapheme-cluster-break}\n*/\nimport prevGraphemeClusterBreak from './../prev-grapheme-cluster-break';\nsetReadOnly( string, 'prevGraphemeClusterBreak', prevGraphemeClusterBreak );\n\n/**\n* @name removeFirst\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/remove-first}\n*/\nimport removeFirst from './../remove-first';\nsetReadOnly( string, 'removeFirst', removeFirst );\n\n/**\n* @name removeLast\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/remove-last}\n*/\nimport removeLast from './../remove-last';\nsetReadOnly( string, 'removeLast', removeLast );\n\n/**\n* @name removePunctuation\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/remove-punctuation}\n*/\nimport removePunctuation from './../remove-punctuation';\nsetReadOnly( string, 'removePunctuation', removePunctuation );\n\n/**\n* @name removeUTF8BOM\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/remove-utf8-bom}\n*/\nimport removeUTF8BOM from './../remove-utf8-bom';\nsetReadOnly( string, 'removeUTF8BOM', removeUTF8BOM );\n\n/**\n* @name removeWords\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/remove-words}\n*/\nimport removeWords from './../remove-words';\nsetReadOnly( string, 'removeWords', removeWords );\n\n/**\n* @name repeat\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/repeat}\n*/\nimport repeat from './../repeat';\nsetReadOnly( string, 'repeat', repeat );\n\n/**\n* @name replace\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/replace}\n*/\nimport replace from './../replace';\nsetReadOnly( string, 'replace', replace );\n\n/**\n* @name reverseString\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/reverse}\n*/\nimport reverseString from './../reverse';\nsetReadOnly( string, 'reverseString', reverseString );\n\n/**\n* @name rpad\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/right-pad}\n*/\nimport rpad from './../right-pad';\nsetReadOnly( string, 'rpad', rpad );\n\n/**\n* @name rtrim\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/right-trim}\n*/\nimport rtrim from './../right-trim';\nsetReadOnly( string, 'rtrim', rtrim );\n\n/**\n* @name rtrimN\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/right-trim-n}\n*/\nimport rtrimN from './../right-trim-n';\nsetReadOnly( string, 'rtrimN', rtrimN );\n\n/**\n* @name snakecase\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/snakecase}\n*/\nimport snakecase from './../snakecase';\nsetReadOnly( string, 'snakecase', snakecase );\n\n/**\n* @name splitGraphemeClusters\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/split-grapheme-clusters}\n*/\nimport splitGraphemeClusters from './../split-grapheme-clusters';\nsetReadOnly( string, 'splitGraphemeClusters', splitGraphemeClusters );\n\n/**\n* @name startcase\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/startcase}\n*/\nimport startcase from './../startcase';\nsetReadOnly( string, 'startcase', startcase );\n\n/**\n* @name startsWith\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/starts-with}\n*/\nimport startsWith from './../starts-with';\nsetReadOnly( string, 'startsWith', startsWith );\n\n/**\n* @name substringAfter\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/substring-after}\n*/\nimport substringAfter from './../substring-after';\nsetReadOnly( string, 'substringAfter', substringAfter );\n\n/**\n* @name substringAfterLast\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/substring-after-last}\n*/\nimport substringAfterLast from './../substring-after-last';\nsetReadOnly( string, 'substringAfterLast', substringAfterLast );\n\n/**\n* @name substringBefore\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/substring-before}\n*/\nimport substringBefore from './../substring-before';\nsetReadOnly( string, 'substringBefore', substringBefore );\n\n/**\n* @name substringBeforeLast\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/substring-before-last}\n*/\nimport substringBeforeLast from './../substring-before-last';\nsetReadOnly( string, 'substringBeforeLast', substringBeforeLast );\n\n/**\n* @name graphemeClusters2iterator\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/to-grapheme-cluster-iterator}\n*/\nimport graphemeClusters2iterator from './../to-grapheme-cluster-iterator';\nsetReadOnly( string, 'graphemeClusters2iterator', graphemeClusters2iterator );\n\n/**\n* @name graphemeClusters2iteratorRight\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/to-grapheme-cluster-iterator-right}\n*/\nimport graphemeClusters2iteratorRight from './../to-grapheme-cluster-iterator-right';\nsetReadOnly( string, 'graphemeClusters2iteratorRight', graphemeClusters2iteratorRight );\n\n/**\n* @name trim\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/trim}\n*/\nimport trim from './../trim';\nsetReadOnly( string, 'trim', trim );\n\n/**\n* @name truncate\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/truncate}\n*/\nimport truncate from './../truncate';\nsetReadOnly( string, 'truncate', truncate );\n\n/**\n* @name truncateMiddle\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/truncate-middle}\n*/\nimport truncateMiddle from './../truncate-middle';\nsetReadOnly( string, 'truncateMiddle', truncateMiddle );\n\n/**\n* @name uncapitalize\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/uncapitalize}\n*/\nimport uncapitalize from './../uncapitalize';\nsetReadOnly( string, 'uncapitalize', uncapitalize );\n\n/**\n* @name uppercase\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/uppercase}\n*/\nimport uppercase from './../uppercase';\nsetReadOnly( string, 'uppercase', uppercase );\n\n/**\n* @name utf16ToUTF8Array\n* @memberof string\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/string/utf16-to-utf8-array}\n*/\nimport utf16ToUTF8Array from './../utf16-to-utf8-array';\nsetReadOnly( string, 'utf16ToUTF8Array', utf16ToUTF8Array );\n\n\n// EXPORTS //\n\nexport default string;\n"],"names":["main","Object","defineProperty","isNumber","value","zeros","n","i","out","zeroPad","str","width","right","negative","pad","length","startsWithMinus","substr","lowercase","String","prototype","toLowerCase","uppercase","toUpperCase","formatInteger","token","base","specifier","arg","parseInt","isFinite","Error","toString","precision","padRight","sign","alternate","call","charAt","isString","abs","Math","replace","RE_EXP_POS_DIGITS","RE_EXP_NEG_DIGITS","RE_ONLY_DIGITS","RE_DIGITS_BEFORE_EXP","RE_TRAILING_PERIOD_ZERO","RE_PERIOD_ZERO_EXP","RE_ZERO_BEFORE_EXP","formatDouble","digits","f","parseFloat","toExponential","toFixed","toPrecision","spaces","spacePad","fromCharCode","isnan","isNaN","isArray","Array","initialize","flags","mapping","formatInterpolate","tokens","hasPeriod","flag","num","pos","j","TypeError","padZeros","indexOf","arguments","maxWidth","substring","RE","parse","match","formatTokenize","content","prev","exec","slice","lastIndex","push","format","args","tokenize","interpolate","apply","objectProtoype","toStr","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","err","hasDefinePropertySupport","builtin","obj","prop","descriptor","hasValue","hasGet","hasSet","__proto__","get","set","defineProperty$1","setReadOnly","configurable","enumerable","writable","setNonEnumerableReadOnly","FLG","Symbol","hasToStringTagSupport","toStringTag","has","hasOwnProperty","hasOwnProp","property","Sym","toStrTag","nativeClass","hasToStringTag","v","isOwn","tag","valueOf","test","isPrimitive","isObject","RE_CHARS","s","isBoolean","Bool","Boolean","getGlobal","Function","self","window","globalThis","root","codegen","getThis","GlobalThis","Self","Win","nodeList","document","childNodes","typedarray","Int8Array","reFunctionName","RE_FUNCTION_NAME","REGEXP","main$1Q","arrayfcn","predicate","len","isObjectLike","constructorName","name","ctor","constructor","_isBuffer","isBuffer","arrayfun","ctorName","type","isFunction","typeOf","RegExp","is_number","zero_pad","require$$0","require$$1","format_integer","is_string","format_double","require$$2","space_pad","require$$3","require$$4","lib","search","newval","rescape","isRegExp","require$$5","REGEXP_PREFIXES","REGEXP_SUFFIXES","extend","arr","ext","tokenizeSubstring","done","res","prefixes","suffixes","EMOJIS","ABBRS","CONTRACT","split","keepWhitespace","subtkns","substrs","cache","getProto","Obj","getPrototypeOf","proto","getProto$1","objectPrototype","isPlainObject","isPrototypeOf","key","ownProps","isPrimitiveArray","isObjectArray","isStringArray","primitives","isEmptyArray","validate_1","opts","options","stopwords","removePunctuation","require$$6","validate","require$$7","STOPWORDS","RE_HYPHEN","words","trim","check","HAS_BUILTIN","bool","has_builtin","polyfill","capitalize","RE_WHITESPACE","RE_SPECIAL","RE_TO_CAMEL","RE_CAMEL","replacer","p1","offset","OxD800","OxDC00","idx","backward","code","low","hi","charCodeAt","endsWith","N","repeat","rpt","cnt","ceil","ltrim","trimLeft","RE_TO_PASCAL","Ox3F","Ox80","utf16ToUTF8Array","byte","buf","rtrim","trimRight","capture","REGEXP_STRING","reWhitespace","REGEXP_CAPTURE","cap","ch","position","startsWith","ns","setReadOnly$3","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","main$1e","Number","FLOAT64_PINF","POSITIVE_INFINITY","FLOAT64_NINF","NEGATIVE_INFINITY","floor","isInteger","x","PINF","NINF","isInt","RangeError","isNonNegativeInteger","isCollection","UNICODE_MAX","UNICODE_MAX_BMP","pt","FLOAT64_MAX_SAFE_INTEGER","p","ch1","ch2","constants","CR","LF","Control","Extend","RegionalIndicator","SpacingMark","L","V","T","LV","LVT","Other","Prepend","ZWJ","NotBreak","BreakStart","Break","BreakLastRegional","BreakPenultimateRegional","ExtendedPictographic","every","start","end","lastIndexOf","breakType","breaks","emoji","nextEmoji","next","M","count","emojiProperty","breakProperty","codePointAt","hasUTF16SurrogatePairAt","fromIndex","cp","nextGraphemeClusterBreak","brk","splitGraphemeClusters","chars","nElems","reStr","isStr","lpad","rpad","centerRight","nright","nleft","isodd","left","tmp","ans","nextBreak","prevGraphemeClusterBreak","ignoreCase","list","flg","join","IteratorSymbol","iterator","iteratorSymbol","graphemeClusters2iterator","src","thisArg","iter","fcn","next1","next2","factory","graphemeClusters2iteratorRight","numGraphemeClusters","ending","endingLength","nVisual","round","seq","seqLength","strLength","seqStart","seqEnd","idx2","idx1","string","acronym","camelcase","constantcase","fromCodePoint","kebabcase","ltrimN","pascalcase","percentEncode","removeFirst","removeLast","removeUTF8BOM","removeWords","reverseString","rtrimN","snakecase","startcase","substringAfter","substringAfterLast","substringBefore","substringBeforeLast","truncate","truncateMiddle","uncapitalize"],"mappings":"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A,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,OAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAA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B,OAATA,GACE,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACE,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACE,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACE,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,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ATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACS,QAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACS,QAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QACpB,SAATA,GACS,SAATA,GACE,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,QAC3B,QAAWA,GAAQA,GAAQ,OAEtBmE,GAAUI,OAGf,QAAWvE,GAAQA,GAAQ,OAEtBmE,GAAUK,kBAGR,OAATxE,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACE,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACE,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACE,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACE,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MAC1B,MAAUA,GAAQA,GAAQ,MACnB,OAATA,GACS,OAATA,GACE,OAAUA,GAAQA,GAAQ,OACnB,QAATA,GACE,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OACnB,QAATA,GACE,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OACnB,QAATA,GACS,QAATA,GACE,OAAUA,GAAQA,GAAQ,OACnB,QAATA,GACE,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OACnB,QAATA,GACS,QAATA,GACS,QAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACS,OAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACS,QAATA,GACS,QAATA,GACS,QAATA,GACS,QAATA,GACS,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,QAATA,GACE,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OAC3B,OAAWA,GAAQA,GAAQ,OACpB,SAATA,GACS,SAATA,EAEOmE,GAAUM,YAGf,MAAUzE,GAAQA,GAAQ,MAC1B,OAAUA,GAAQA,GAAQ,MAErBmE,GAAUO,EAGf,MAAU1E,GAAQA,GAAQ,MAC1B,OAAUA,GAAQA,GAAQ,MAErBmE,GAAUQ,EAGf,MAAU3E,GAAQA,GAAQ,MAC1B,OAAUA,GAAQA,GAAQ,MAErBmmE,GAAUU,GAGf,OAAU7E,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,GAAQA,GAAQ,OAC1B,OAAUA,G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"}